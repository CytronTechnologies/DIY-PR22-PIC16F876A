Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"615 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _TRISB `Vuc ~T0 0 e@134 ]
"634
[v _TRISC `Vuc ~T0 0 e@135 ]
"598
[v _TRISA `Vuc ~T0 0 e@133 ]
"370
[v _SSPBUF `Vuc ~T0 0 e@19 ]
"729
[v _SSPSTAT `Vuc ~T0 0 e@148 ]
"379
[v _SSPCON `Vuc ~T0 0 e@20 ]
"695
[v _SSPCON2 `Vuc ~T0 0 e@145 ]
"720
[v _SSPADD `Vuc ~T0 0 e@147 ]
"1086
[v _SSPIF `Vb ~T0 0 e@99 ]
"1063
[v _RC6 `Vb ~T0 0 e@62 ]
"1064
[v _RC7 `Vb ~T0 0 e@63 ]
"1044
[v _RA3 `Vb ~T0 0 e@43 ]
"873
[v _ADCON1 `Vuc ~T0 0 e@159 ]
"43 PR22.c
[v _send_config `(v ~T0 0 ef1`uc ]
"425 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _CCP1CON `Vuc ~T0 0 e@23 ]
"516
[v _CCP2CON `Vuc ~T0 0 e@29 ]
"711
[v _PR2 `Vuc ~T0 0 e@146 ]
"350
[v _T2CON `Vuc ~T0 0 e@18 ]
"498
[v _CCPR2L `Vuc ~T0 0 e@27 ]
"407
[v _CCPR1L `Vuc ~T0 0 e@21 ]
"46 PR22.c
[v _lcd_clr `(v ~T0 0 ef ]
"45
[v _lcd_goto `(v ~T0 0 ef1`uc ]
"47
[v _send_string `(v ~T0 0 ef1`*Cuc ]
"41
[v _delay `(v ~T0 0 ef1`ul ]
"1041 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _RA0 `Vb ~T0 0 e@40 ]
"1042
[v _RA1 `Vb ~T0 0 e@41 ]
"1043
[v _RA2 `Vb ~T0 0 e@42 ]
"37 PR22.c
[v _mode1 `(v ~T0 0 ef ]
"38
[v _mode2 `(v ~T0 0 ef ]
"39
[v _mode3 `(v ~T0 0 ef ]
"49
[v _i2c_start `(v ~T0 0 ef3`uc`uc`ui ]
"44
[v _send_char `(v ~T0 0 ef1`uc ]
"51
[v _spi_baro `(v ~T0 0 ef3`uc`uc`ui ]
"1057 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _RC0 `Vb ~T0 0 e@56 ]
"184
[v _PORTB `Vuc ~T0 0 e@6 ]
"1046
[v _RA5 `Vb ~T0 0 e@45 ]
"1080
[v _SEN `Vb ~T0 0 e@1160 ]
"1036
[v _PEN `Vb ~T0 0 e@1162 ]
"1068
[v _RCEN `Vb ~T0 0 e@1163 ]
"953
[v _ACKDT `Vb ~T0 0 e@1165 ]
"954
[v _ACKEN `Vb ~T0 0 e@1164 ]
"52 PR22.c
[v _spi_start `(uc ~T0 0 ef1`uc ]
"1062 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _RC5 `Vb ~T0 0 e@61 ]
[; ;pic16f876a.h: 104: extern volatile unsigned char INDF @ 0x000;
[; ;pic16f876a.h: 106: extern volatile union {
[; ;pic16f876a.h: 107: struct {
[; ;pic16f876a.h: 108: unsigned INDF :8;
[; ;pic16f876a.h: 109: };
[; ;pic16f876a.h: 110: } INDFbits @ 0x000;
[; ;pic16f876a.h: 113: extern volatile unsigned char TMR0 @ 0x001;
[; ;pic16f876a.h: 115: extern volatile union {
[; ;pic16f876a.h: 116: struct {
[; ;pic16f876a.h: 117: unsigned TMR0 :8;
[; ;pic16f876a.h: 118: };
[; ;pic16f876a.h: 119: } TMR0bits @ 0x001;
[; ;pic16f876a.h: 122: extern volatile unsigned char PCL @ 0x002;
[; ;pic16f876a.h: 124: extern volatile union {
[; ;pic16f876a.h: 125: struct {
[; ;pic16f876a.h: 126: unsigned PCL :8;
[; ;pic16f876a.h: 127: };
[; ;pic16f876a.h: 128: } PCLbits @ 0x002;
[; ;pic16f876a.h: 131: extern volatile unsigned char STATUS @ 0x003;
[; ;pic16f876a.h: 133: extern volatile union {
[; ;pic16f876a.h: 134: struct {
[; ;pic16f876a.h: 135: unsigned C :1;
[; ;pic16f876a.h: 136: unsigned DC :1;
[; ;pic16f876a.h: 137: unsigned Z :1;
[; ;pic16f876a.h: 138: unsigned nPD :1;
[; ;pic16f876a.h: 139: unsigned nTO :1;
[; ;pic16f876a.h: 140: unsigned RP :2;
[; ;pic16f876a.h: 141: unsigned IRP :1;
[; ;pic16f876a.h: 142: };
[; ;pic16f876a.h: 143: struct {
[; ;pic16f876a.h: 144: unsigned :5;
[; ;pic16f876a.h: 145: unsigned RP0 :1;
[; ;pic16f876a.h: 146: unsigned RP1 :1;
[; ;pic16f876a.h: 147: };
[; ;pic16f876a.h: 148: struct {
[; ;pic16f876a.h: 149: unsigned CARRY :1;
[; ;pic16f876a.h: 150: };
[; ;pic16f876a.h: 151: struct {
[; ;pic16f876a.h: 152: unsigned :2;
[; ;pic16f876a.h: 153: unsigned ZERO :1;
[; ;pic16f876a.h: 154: };
[; ;pic16f876a.h: 155: } STATUSbits @ 0x003;
[; ;pic16f876a.h: 158: extern volatile unsigned char FSR @ 0x004;
[; ;pic16f876a.h: 160: extern volatile union {
[; ;pic16f876a.h: 161: struct {
[; ;pic16f876a.h: 162: unsigned FSR :8;
[; ;pic16f876a.h: 163: };
[; ;pic16f876a.h: 164: } FSRbits @ 0x004;
[; ;pic16f876a.h: 167: extern volatile unsigned char PORTA @ 0x005;
[; ;pic16f876a.h: 169: extern volatile union {
[; ;pic16f876a.h: 170: struct {
[; ;pic16f876a.h: 171: unsigned RA0 :1;
[; ;pic16f876a.h: 172: unsigned RA1 :1;
[; ;pic16f876a.h: 173: unsigned RA2 :1;
[; ;pic16f876a.h: 174: unsigned RA3 :1;
[; ;pic16f876a.h: 175: unsigned RA4 :1;
[; ;pic16f876a.h: 176: unsigned RA5 :1;
[; ;pic16f876a.h: 177: };
[; ;pic16f876a.h: 178: struct {
[; ;pic16f876a.h: 179: unsigned RA :8;
[; ;pic16f876a.h: 180: };
[; ;pic16f876a.h: 181: } PORTAbits @ 0x005;
[; ;pic16f876a.h: 184: extern volatile unsigned char PORTB @ 0x006;
[; ;pic16f876a.h: 186: extern volatile union {
[; ;pic16f876a.h: 187: struct {
[; ;pic16f876a.h: 188: unsigned RB0 :1;
[; ;pic16f876a.h: 189: unsigned RB1 :1;
[; ;pic16f876a.h: 190: unsigned RB2 :1;
[; ;pic16f876a.h: 191: unsigned RB3 :1;
[; ;pic16f876a.h: 192: unsigned RB4 :1;
[; ;pic16f876a.h: 193: unsigned RB5 :1;
[; ;pic16f876a.h: 194: unsigned RB6 :1;
[; ;pic16f876a.h: 195: unsigned RB7 :1;
[; ;pic16f876a.h: 196: };
[; ;pic16f876a.h: 197: struct {
[; ;pic16f876a.h: 198: unsigned RB :8;
[; ;pic16f876a.h: 199: };
[; ;pic16f876a.h: 200: } PORTBbits @ 0x006;
[; ;pic16f876a.h: 203: extern volatile unsigned char PORTC @ 0x007;
[; ;pic16f876a.h: 205: extern volatile union {
[; ;pic16f876a.h: 206: struct {
[; ;pic16f876a.h: 207: unsigned RC0 :1;
[; ;pic16f876a.h: 208: unsigned RC1 :1;
[; ;pic16f876a.h: 209: unsigned RC2 :1;
[; ;pic16f876a.h: 210: unsigned RC3 :1;
[; ;pic16f876a.h: 211: unsigned RC4 :1;
[; ;pic16f876a.h: 212: unsigned RC5 :1;
[; ;pic16f876a.h: 213: unsigned RC6 :1;
[; ;pic16f876a.h: 214: unsigned RC7 :1;
[; ;pic16f876a.h: 215: };
[; ;pic16f876a.h: 216: struct {
[; ;pic16f876a.h: 217: unsigned RC :8;
[; ;pic16f876a.h: 218: };
[; ;pic16f876a.h: 219: } PORTCbits @ 0x007;
[; ;pic16f876a.h: 222: extern volatile unsigned char PCLATH @ 0x00A;
[; ;pic16f876a.h: 224: extern volatile union {
[; ;pic16f876a.h: 225: struct {
[; ;pic16f876a.h: 226: unsigned PCLATH :5;
[; ;pic16f876a.h: 227: };
[; ;pic16f876a.h: 228: } PCLATHbits @ 0x00A;
[; ;pic16f876a.h: 231: extern volatile unsigned char INTCON @ 0x00B;
[; ;pic16f876a.h: 233: extern volatile union {
[; ;pic16f876a.h: 234: struct {
[; ;pic16f876a.h: 235: unsigned RBIF :1;
[; ;pic16f876a.h: 236: unsigned INTF :1;
[; ;pic16f876a.h: 237: unsigned TMR0IF :1;
[; ;pic16f876a.h: 238: unsigned RBIE :1;
[; ;pic16f876a.h: 239: unsigned INTE :1;
[; ;pic16f876a.h: 240: unsigned TMR0IE :1;
[; ;pic16f876a.h: 241: unsigned PEIE :1;
[; ;pic16f876a.h: 242: unsigned GIE :1;
[; ;pic16f876a.h: 243: };
[; ;pic16f876a.h: 244: struct {
[; ;pic16f876a.h: 245: unsigned :2;
[; ;pic16f876a.h: 246: unsigned T0IF :1;
[; ;pic16f876a.h: 247: unsigned :2;
[; ;pic16f876a.h: 248: unsigned T0IE :1;
[; ;pic16f876a.h: 249: };
[; ;pic16f876a.h: 250: } INTCONbits @ 0x00B;
[; ;pic16f876a.h: 253: extern volatile unsigned char PIR1 @ 0x00C;
[; ;pic16f876a.h: 255: extern volatile union {
[; ;pic16f876a.h: 256: struct {
[; ;pic16f876a.h: 257: unsigned TMR1IF :1;
[; ;pic16f876a.h: 258: unsigned TMR2IF :1;
[; ;pic16f876a.h: 259: unsigned CCP1IF :1;
[; ;pic16f876a.h: 260: unsigned SSPIF :1;
[; ;pic16f876a.h: 261: unsigned TXIF :1;
[; ;pic16f876a.h: 262: unsigned RCIF :1;
[; ;pic16f876a.h: 263: unsigned ADIF :1;
[; ;pic16f876a.h: 264: };
[; ;pic16f876a.h: 265: struct {
[; ;pic16f876a.h: 266: unsigned TMR1IF :1;
[; ;pic16f876a.h: 267: unsigned TMR2IF :1;
[; ;pic16f876a.h: 268: unsigned CCP1IF :1;
[; ;pic16f876a.h: 269: unsigned SSPIF :1;
[; ;pic16f876a.h: 270: unsigned :2;
[; ;pic16f876a.h: 271: unsigned ADIF :1;
[; ;pic16f876a.h: 272: };
[; ;pic16f876a.h: 273: } PIR1bits @ 0x00C;
[; ;pic16f876a.h: 276: extern volatile unsigned char PIR2 @ 0x00D;
[; ;pic16f876a.h: 278: extern volatile union {
[; ;pic16f876a.h: 279: struct {
[; ;pic16f876a.h: 280: unsigned CCP2IF :1;
[; ;pic16f876a.h: 281: unsigned :2;
[; ;pic16f876a.h: 282: unsigned BCLIF :1;
[; ;pic16f876a.h: 283: unsigned EEIF :1;
[; ;pic16f876a.h: 284: unsigned :1;
[; ;pic16f876a.h: 285: unsigned CMIF :1;
[; ;pic16f876a.h: 286: };
[; ;pic16f876a.h: 287: } PIR2bits @ 0x00D;
[; ;pic16f876a.h: 290: extern volatile unsigned short TMR1 @ 0x00E;
[; ;pic16f876a.h: 292: extern volatile union {
[; ;pic16f876a.h: 293: struct {
[; ;pic16f876a.h: 294: unsigned TMR1 :16;
[; ;pic16f876a.h: 295: };
[; ;pic16f876a.h: 296: } TMR1bits @ 0x00E;
[; ;pic16f876a.h: 299: extern volatile unsigned char TMR1L @ 0x00E;
[; ;pic16f876a.h: 301: extern volatile union {
[; ;pic16f876a.h: 302: struct {
[; ;pic16f876a.h: 303: unsigned TMR1L :8;
[; ;pic16f876a.h: 304: };
[; ;pic16f876a.h: 305: } TMR1Lbits @ 0x00E;
[; ;pic16f876a.h: 308: extern volatile unsigned char TMR1H @ 0x00F;
[; ;pic16f876a.h: 310: extern volatile union {
[; ;pic16f876a.h: 311: struct {
[; ;pic16f876a.h: 312: unsigned TMR1H :8;
[; ;pic16f876a.h: 313: };
[; ;pic16f876a.h: 314: } TMR1Hbits @ 0x00F;
[; ;pic16f876a.h: 317: extern volatile unsigned char T1CON @ 0x010;
[; ;pic16f876a.h: 319: extern volatile union {
[; ;pic16f876a.h: 320: struct {
[; ;pic16f876a.h: 321: unsigned TMR1ON :1;
[; ;pic16f876a.h: 322: unsigned TMR1CS :1;
[; ;pic16f876a.h: 323: unsigned nT1SYNC :1;
[; ;pic16f876a.h: 324: unsigned T1OSCEN :1;
[; ;pic16f876a.h: 325: unsigned T1CKPS :2;
[; ;pic16f876a.h: 326: };
[; ;pic16f876a.h: 327: struct {
[; ;pic16f876a.h: 328: unsigned :2;
[; ;pic16f876a.h: 329: unsigned T1SYNC :1;
[; ;pic16f876a.h: 330: unsigned :1;
[; ;pic16f876a.h: 331: unsigned T1CKPS0 :1;
[; ;pic16f876a.h: 332: unsigned T1CKPS1 :1;
[; ;pic16f876a.h: 333: };
[; ;pic16f876a.h: 334: struct {
[; ;pic16f876a.h: 335: unsigned :2;
[; ;pic16f876a.h: 336: unsigned T1INSYNC :1;
[; ;pic16f876a.h: 337: };
[; ;pic16f876a.h: 338: } T1CONbits @ 0x010;
[; ;pic16f876a.h: 341: extern volatile unsigned char TMR2 @ 0x011;
[; ;pic16f876a.h: 343: extern volatile union {
[; ;pic16f876a.h: 344: struct {
[; ;pic16f876a.h: 345: unsigned TMR2 :8;
[; ;pic16f876a.h: 346: };
[; ;pic16f876a.h: 347: } TMR2bits @ 0x011;
[; ;pic16f876a.h: 350: extern volatile unsigned char T2CON @ 0x012;
[; ;pic16f876a.h: 352: extern volatile union {
[; ;pic16f876a.h: 353: struct {
[; ;pic16f876a.h: 354: unsigned T2CKPS :2;
[; ;pic16f876a.h: 355: unsigned TMR2ON :1;
[; ;pic16f876a.h: 356: unsigned TOUTPS :4;
[; ;pic16f876a.h: 357: };
[; ;pic16f876a.h: 358: struct {
[; ;pic16f876a.h: 359: unsigned T2CKPS0 :1;
[; ;pic16f876a.h: 360: unsigned T2CKPS1 :1;
[; ;pic16f876a.h: 361: unsigned :1;
[; ;pic16f876a.h: 362: unsigned TOUTPS0 :1;
[; ;pic16f876a.h: 363: unsigned TOUTPS1 :1;
[; ;pic16f876a.h: 364: unsigned TOUTPS2 :1;
[; ;pic16f876a.h: 365: unsigned TOUTPS3 :1;
[; ;pic16f876a.h: 366: };
[; ;pic16f876a.h: 367: } T2CONbits @ 0x012;
[; ;pic16f876a.h: 370: extern volatile unsigned char SSPBUF @ 0x013;
[; ;pic16f876a.h: 372: extern volatile union {
[; ;pic16f876a.h: 373: struct {
[; ;pic16f876a.h: 374: unsigned SSPBUF :8;
[; ;pic16f876a.h: 375: };
[; ;pic16f876a.h: 376: } SSPBUFbits @ 0x013;
[; ;pic16f876a.h: 379: extern volatile unsigned char SSPCON @ 0x014;
[; ;pic16f876a.h: 381: extern volatile union {
[; ;pic16f876a.h: 382: struct {
[; ;pic16f876a.h: 383: unsigned SSPM :4;
[; ;pic16f876a.h: 384: unsigned CKP :1;
[; ;pic16f876a.h: 385: unsigned SSPEN :1;
[; ;pic16f876a.h: 386: unsigned SSPOV :1;
[; ;pic16f876a.h: 387: unsigned WCOL :1;
[; ;pic16f876a.h: 388: };
[; ;pic16f876a.h: 389: struct {
[; ;pic16f876a.h: 390: unsigned SSPM0 :1;
[; ;pic16f876a.h: 391: unsigned SSPM1 :1;
[; ;pic16f876a.h: 392: unsigned SSPM2 :1;
[; ;pic16f876a.h: 393: unsigned SSPM3 :1;
[; ;pic16f876a.h: 394: };
[; ;pic16f876a.h: 395: } SSPCONbits @ 0x014;
[; ;pic16f876a.h: 398: extern volatile unsigned short CCPR1 @ 0x015;
[; ;pic16f876a.h: 400: extern volatile union {
[; ;pic16f876a.h: 401: struct {
[; ;pic16f876a.h: 402: unsigned CCPR1 :16;
[; ;pic16f876a.h: 403: };
[; ;pic16f876a.h: 404: } CCPR1bits @ 0x015;
[; ;pic16f876a.h: 407: extern volatile unsigned char CCPR1L @ 0x015;
[; ;pic16f876a.h: 409: extern volatile union {
[; ;pic16f876a.h: 410: struct {
[; ;pic16f876a.h: 411: unsigned CCPR1L :8;
[; ;pic16f876a.h: 412: };
[; ;pic16f876a.h: 413: } CCPR1Lbits @ 0x015;
[; ;pic16f876a.h: 416: extern volatile unsigned char CCPR1H @ 0x016;
[; ;pic16f876a.h: 418: extern volatile union {
[; ;pic16f876a.h: 419: struct {
[; ;pic16f876a.h: 420: unsigned CCPR1H :8;
[; ;pic16f876a.h: 421: };
[; ;pic16f876a.h: 422: } CCPR1Hbits @ 0x016;
[; ;pic16f876a.h: 425: extern volatile unsigned char CCP1CON @ 0x017;
[; ;pic16f876a.h: 427: extern volatile union {
[; ;pic16f876a.h: 428: struct {
[; ;pic16f876a.h: 429: unsigned CCP1M :4;
[; ;pic16f876a.h: 430: unsigned CCP1Y :1;
[; ;pic16f876a.h: 431: unsigned CCP1X :1;
[; ;pic16f876a.h: 432: };
[; ;pic16f876a.h: 433: struct {
[; ;pic16f876a.h: 434: unsigned CCP1M0 :1;
[; ;pic16f876a.h: 435: unsigned CCP1M1 :1;
[; ;pic16f876a.h: 436: unsigned CCP1M2 :1;
[; ;pic16f876a.h: 437: unsigned CCP1M3 :1;
[; ;pic16f876a.h: 438: };
[; ;pic16f876a.h: 439: } CCP1CONbits @ 0x017;
[; ;pic16f876a.h: 442: extern volatile unsigned char RCSTA @ 0x018;
[; ;pic16f876a.h: 444: extern volatile union {
[; ;pic16f876a.h: 445: struct {
[; ;pic16f876a.h: 446: unsigned RX9D :1;
[; ;pic16f876a.h: 447: unsigned OERR :1;
[; ;pic16f876a.h: 448: unsigned FERR :1;
[; ;pic16f876a.h: 449: unsigned ADDEN :1;
[; ;pic16f876a.h: 450: unsigned CREN :1;
[; ;pic16f876a.h: 451: unsigned SREN :1;
[; ;pic16f876a.h: 452: unsigned RX9 :1;
[; ;pic16f876a.h: 453: unsigned SPEN :1;
[; ;pic16f876a.h: 454: };
[; ;pic16f876a.h: 455: struct {
[; ;pic16f876a.h: 456: unsigned RCD8 :1;
[; ;pic16f876a.h: 457: unsigned :5;
[; ;pic16f876a.h: 458: unsigned RC9 :1;
[; ;pic16f876a.h: 459: };
[; ;pic16f876a.h: 460: struct {
[; ;pic16f876a.h: 461: unsigned :6;
[; ;pic16f876a.h: 462: unsigned nRC8 :1;
[; ;pic16f876a.h: 463: };
[; ;pic16f876a.h: 464: struct {
[; ;pic16f876a.h: 465: unsigned :6;
[; ;pic16f876a.h: 466: unsigned RC8_9 :1;
[; ;pic16f876a.h: 467: };
[; ;pic16f876a.h: 468: } RCSTAbits @ 0x018;
[; ;pic16f876a.h: 471: extern volatile unsigned char TXREG @ 0x019;
[; ;pic16f876a.h: 473: extern volatile union {
[; ;pic16f876a.h: 474: struct {
[; ;pic16f876a.h: 475: unsigned TXREG :8;
[; ;pic16f876a.h: 476: };
[; ;pic16f876a.h: 477: } TXREGbits @ 0x019;
[; ;pic16f876a.h: 480: extern volatile unsigned char RCREG @ 0x01A;
[; ;pic16f876a.h: 482: extern volatile union {
[; ;pic16f876a.h: 483: struct {
[; ;pic16f876a.h: 484: unsigned RCREG :8;
[; ;pic16f876a.h: 485: };
[; ;pic16f876a.h: 486: } RCREGbits @ 0x01A;
[; ;pic16f876a.h: 489: extern volatile unsigned short CCPR2 @ 0x01B;
[; ;pic16f876a.h: 491: extern volatile union {
[; ;pic16f876a.h: 492: struct {
[; ;pic16f876a.h: 493: unsigned CCPR2 :16;
[; ;pic16f876a.h: 494: };
[; ;pic16f876a.h: 495: } CCPR2bits @ 0x01B;
[; ;pic16f876a.h: 498: extern volatile unsigned char CCPR2L @ 0x01B;
[; ;pic16f876a.h: 500: extern volatile union {
[; ;pic16f876a.h: 501: struct {
[; ;pic16f876a.h: 502: unsigned CCPR2L :8;
[; ;pic16f876a.h: 503: };
[; ;pic16f876a.h: 504: } CCPR2Lbits @ 0x01B;
[; ;pic16f876a.h: 507: extern volatile unsigned char CCPR2H @ 0x01C;
[; ;pic16f876a.h: 509: extern volatile union {
[; ;pic16f876a.h: 510: struct {
[; ;pic16f876a.h: 511: unsigned CCPR2H :8;
[; ;pic16f876a.h: 512: };
[; ;pic16f876a.h: 513: } CCPR2Hbits @ 0x01C;
[; ;pic16f876a.h: 516: extern volatile unsigned char CCP2CON @ 0x01D;
[; ;pic16f876a.h: 518: extern volatile union {
[; ;pic16f876a.h: 519: struct {
[; ;pic16f876a.h: 520: unsigned CCP2M :4;
[; ;pic16f876a.h: 521: unsigned CCP2Y :1;
[; ;pic16f876a.h: 522: unsigned CCP2X :1;
[; ;pic16f876a.h: 523: };
[; ;pic16f876a.h: 524: struct {
[; ;pic16f876a.h: 525: unsigned CCP2M0 :1;
[; ;pic16f876a.h: 526: unsigned CCP2M1 :1;
[; ;pic16f876a.h: 527: unsigned CCP2M2 :1;
[; ;pic16f876a.h: 528: unsigned CCP2M3 :1;
[; ;pic16f876a.h: 529: };
[; ;pic16f876a.h: 530: } CCP2CONbits @ 0x01D;
[; ;pic16f876a.h: 533: extern volatile unsigned char ADRESH @ 0x01E;
[; ;pic16f876a.h: 535: extern volatile union {
[; ;pic16f876a.h: 536: struct {
[; ;pic16f876a.h: 537: unsigned ADRESH :8;
[; ;pic16f876a.h: 538: };
[; ;pic16f876a.h: 539: } ADRESHbits @ 0x01E;
[; ;pic16f876a.h: 542: extern volatile unsigned char ADCON0 @ 0x01F;
[; ;pic16f876a.h: 544: extern volatile union {
[; ;pic16f876a.h: 545: struct {
[; ;pic16f876a.h: 546: unsigned ADON :1;
[; ;pic16f876a.h: 547: unsigned :1;
[; ;pic16f876a.h: 548: unsigned GO_nDONE :1;
[; ;pic16f876a.h: 549: unsigned CHS :3;
[; ;pic16f876a.h: 550: unsigned ADCS :2;
[; ;pic16f876a.h: 551: };
[; ;pic16f876a.h: 552: struct {
[; ;pic16f876a.h: 553: unsigned ADON :1;
[; ;pic16f876a.h: 554: unsigned :1;
[; ;pic16f876a.h: 555: unsigned GO_nDONE :1;
[; ;pic16f876a.h: 556: unsigned CHS :3;
[; ;pic16f876a.h: 557: unsigned ADCS :2;
[; ;pic16f876a.h: 558: };
[; ;pic16f876a.h: 559: struct {
[; ;pic16f876a.h: 560: unsigned :2;
[; ;pic16f876a.h: 561: unsigned GO :1;
[; ;pic16f876a.h: 562: unsigned CHS0 :1;
[; ;pic16f876a.h: 563: unsigned CHS1 :1;
[; ;pic16f876a.h: 564: unsigned CHS2 :1;
[; ;pic16f876a.h: 565: unsigned ADCS0 :1;
[; ;pic16f876a.h: 566: unsigned ADCS1 :1;
[; ;pic16f876a.h: 567: };
[; ;pic16f876a.h: 568: struct {
[; ;pic16f876a.h: 569: unsigned :2;
[; ;pic16f876a.h: 570: unsigned nDONE :1;
[; ;pic16f876a.h: 571: };
[; ;pic16f876a.h: 572: struct {
[; ;pic16f876a.h: 573: unsigned :2;
[; ;pic16f876a.h: 574: unsigned GO_DONE :1;
[; ;pic16f876a.h: 575: };
[; ;pic16f876a.h: 576: } ADCON0bits @ 0x01F;
[; ;pic16f876a.h: 579: extern volatile unsigned char OPTION_REG @ 0x081;
[; ;pic16f876a.h: 581: extern volatile union {
[; ;pic16f876a.h: 582: struct {
[; ;pic16f876a.h: 583: unsigned PS :3;
[; ;pic16f876a.h: 584: unsigned PSA :1;
[; ;pic16f876a.h: 585: unsigned T0SE :1;
[; ;pic16f876a.h: 586: unsigned T0CS :1;
[; ;pic16f876a.h: 587: unsigned INTEDG :1;
[; ;pic16f876a.h: 588: unsigned nRBPU :1;
[; ;pic16f876a.h: 589: };
[; ;pic16f876a.h: 590: struct {
[; ;pic16f876a.h: 591: unsigned PS0 :1;
[; ;pic16f876a.h: 592: unsigned PS1 :1;
[; ;pic16f876a.h: 593: unsigned PS2 :1;
[; ;pic16f876a.h: 594: };
[; ;pic16f876a.h: 595: } OPTION_REGbits @ 0x081;
[; ;pic16f876a.h: 598: extern volatile unsigned char TRISA @ 0x085;
[; ;pic16f876a.h: 600: extern volatile union {
[; ;pic16f876a.h: 601: struct {
[; ;pic16f876a.h: 602: unsigned TRISA0 :1;
[; ;pic16f876a.h: 603: unsigned TRISA1 :1;
[; ;pic16f876a.h: 604: unsigned TRISA2 :1;
[; ;pic16f876a.h: 605: unsigned TRISA3 :1;
[; ;pic16f876a.h: 606: unsigned TRISA4 :1;
[; ;pic16f876a.h: 607: unsigned TRISA5 :1;
[; ;pic16f876a.h: 608: };
[; ;pic16f876a.h: 609: struct {
[; ;pic16f876a.h: 610: unsigned TRISA :8;
[; ;pic16f876a.h: 611: };
[; ;pic16f876a.h: 612: } TRISAbits @ 0x085;
[; ;pic16f876a.h: 615: extern volatile unsigned char TRISB @ 0x086;
[; ;pic16f876a.h: 617: extern volatile union {
[; ;pic16f876a.h: 618: struct {
[; ;pic16f876a.h: 619: unsigned TRISB0 :1;
[; ;pic16f876a.h: 620: unsigned TRISB1 :1;
[; ;pic16f876a.h: 621: unsigned TRISB2 :1;
[; ;pic16f876a.h: 622: unsigned TRISB3 :1;
[; ;pic16f876a.h: 623: unsigned TRISB4 :1;
[; ;pic16f876a.h: 624: unsigned TRISB5 :1;
[; ;pic16f876a.h: 625: unsigned TRISB6 :1;
[; ;pic16f876a.h: 626: unsigned TRISB7 :1;
[; ;pic16f876a.h: 627: };
[; ;pic16f876a.h: 628: struct {
[; ;pic16f876a.h: 629: unsigned TRISB :8;
[; ;pic16f876a.h: 630: };
[; ;pic16f876a.h: 631: } TRISBbits @ 0x086;
[; ;pic16f876a.h: 634: extern volatile unsigned char TRISC @ 0x087;
[; ;pic16f876a.h: 636: extern volatile union {
[; ;pic16f876a.h: 637: struct {
[; ;pic16f876a.h: 638: unsigned TRISC0 :1;
[; ;pic16f876a.h: 639: unsigned TRISC1 :1;
[; ;pic16f876a.h: 640: unsigned TRISC2 :1;
[; ;pic16f876a.h: 641: unsigned TRISC3 :1;
[; ;pic16f876a.h: 642: unsigned TRISC4 :1;
[; ;pic16f876a.h: 643: unsigned TRISC5 :1;
[; ;pic16f876a.h: 644: unsigned TRISC6 :1;
[; ;pic16f876a.h: 645: unsigned TRISC7 :1;
[; ;pic16f876a.h: 646: };
[; ;pic16f876a.h: 647: struct {
[; ;pic16f876a.h: 648: unsigned TRISC :8;
[; ;pic16f876a.h: 649: };
[; ;pic16f876a.h: 650: } TRISCbits @ 0x087;
[; ;pic16f876a.h: 653: extern volatile unsigned char PIE1 @ 0x08C;
[; ;pic16f876a.h: 655: extern volatile union {
[; ;pic16f876a.h: 656: struct {
[; ;pic16f876a.h: 657: unsigned TMR1IE :1;
[; ;pic16f876a.h: 658: unsigned TMR2IE :1;
[; ;pic16f876a.h: 659: unsigned CCP1IE :1;
[; ;pic16f876a.h: 660: unsigned SSPIE :1;
[; ;pic16f876a.h: 661: unsigned TXIE :1;
[; ;pic16f876a.h: 662: unsigned RCIE :1;
[; ;pic16f876a.h: 663: unsigned ADIE :1;
[; ;pic16f876a.h: 664: };
[; ;pic16f876a.h: 665: } PIE1bits @ 0x08C;
[; ;pic16f876a.h: 668: extern volatile unsigned char PIE2 @ 0x08D;
[; ;pic16f876a.h: 670: extern volatile union {
[; ;pic16f876a.h: 671: struct {
[; ;pic16f876a.h: 672: unsigned CCP2IE :1;
[; ;pic16f876a.h: 673: unsigned :2;
[; ;pic16f876a.h: 674: unsigned BCLIE :1;
[; ;pic16f876a.h: 675: unsigned EEIE :1;
[; ;pic16f876a.h: 676: unsigned :1;
[; ;pic16f876a.h: 677: unsigned CMIE :1;
[; ;pic16f876a.h: 678: };
[; ;pic16f876a.h: 679: } PIE2bits @ 0x08D;
[; ;pic16f876a.h: 682: extern volatile unsigned char PCON @ 0x08E;
[; ;pic16f876a.h: 684: extern volatile union {
[; ;pic16f876a.h: 685: struct {
[; ;pic16f876a.h: 686: unsigned nBOR :1;
[; ;pic16f876a.h: 687: unsigned nPOR :1;
[; ;pic16f876a.h: 688: };
[; ;pic16f876a.h: 689: struct {
[; ;pic16f876a.h: 690: unsigned nBO :1;
[; ;pic16f876a.h: 691: };
[; ;pic16f876a.h: 692: } PCONbits @ 0x08E;
[; ;pic16f876a.h: 695: extern volatile unsigned char SSPCON2 @ 0x091;
[; ;pic16f876a.h: 697: extern volatile union {
[; ;pic16f876a.h: 698: struct {
[; ;pic16f876a.h: 699: unsigned SEN :1;
[; ;pic16f876a.h: 700: unsigned RSEN :1;
[; ;pic16f876a.h: 701: unsigned PEN :1;
[; ;pic16f876a.h: 702: unsigned RCEN :1;
[; ;pic16f876a.h: 703: unsigned ACKEN :1;
[; ;pic16f876a.h: 704: unsigned ACKDT :1;
[; ;pic16f876a.h: 705: unsigned ACKSTAT :1;
[; ;pic16f876a.h: 706: unsigned GCEN :1;
[; ;pic16f876a.h: 707: };
[; ;pic16f876a.h: 708: } SSPCON2bits @ 0x091;
[; ;pic16f876a.h: 711: extern volatile unsigned char PR2 @ 0x092;
[; ;pic16f876a.h: 713: extern volatile union {
[; ;pic16f876a.h: 714: struct {
[; ;pic16f876a.h: 715: unsigned PR2 :8;
[; ;pic16f876a.h: 716: };
[; ;pic16f876a.h: 717: } PR2bits @ 0x092;
[; ;pic16f876a.h: 720: extern volatile unsigned char SSPADD @ 0x093;
[; ;pic16f876a.h: 722: extern volatile union {
[; ;pic16f876a.h: 723: struct {
[; ;pic16f876a.h: 724: unsigned SSPADD :8;
[; ;pic16f876a.h: 725: };
[; ;pic16f876a.h: 726: } SSPADDbits @ 0x093;
[; ;pic16f876a.h: 729: extern volatile unsigned char SSPSTAT @ 0x094;
[; ;pic16f876a.h: 731: extern volatile union {
[; ;pic16f876a.h: 732: struct {
[; ;pic16f876a.h: 733: unsigned BF :1;
[; ;pic16f876a.h: 734: unsigned UA :1;
[; ;pic16f876a.h: 735: unsigned R_nW :1;
[; ;pic16f876a.h: 736: unsigned S :1;
[; ;pic16f876a.h: 737: unsigned P :1;
[; ;pic16f876a.h: 738: unsigned D_nA :1;
[; ;pic16f876a.h: 739: unsigned CKE :1;
[; ;pic16f876a.h: 740: unsigned SMP :1;
[; ;pic16f876a.h: 741: };
[; ;pic16f876a.h: 742: struct {
[; ;pic16f876a.h: 743: unsigned BF :1;
[; ;pic16f876a.h: 744: unsigned UA :1;
[; ;pic16f876a.h: 745: unsigned R_nW :1;
[; ;pic16f876a.h: 746: unsigned S :1;
[; ;pic16f876a.h: 747: unsigned P :1;
[; ;pic16f876a.h: 748: unsigned D_nA :1;
[; ;pic16f876a.h: 749: unsigned CKE :1;
[; ;pic16f876a.h: 750: unsigned SMP :1;
[; ;pic16f876a.h: 751: };
[; ;pic16f876a.h: 752: struct {
[; ;pic16f876a.h: 753: unsigned :2;
[; ;pic16f876a.h: 754: unsigned R :1;
[; ;pic16f876a.h: 755: unsigned :2;
[; ;pic16f876a.h: 756: unsigned D :1;
[; ;pic16f876a.h: 757: };
[; ;pic16f876a.h: 758: struct {
[; ;pic16f876a.h: 759: unsigned :2;
[; ;pic16f876a.h: 760: unsigned I2C_READ :1;
[; ;pic16f876a.h: 761: unsigned I2C_START :1;
[; ;pic16f876a.h: 762: unsigned I2C_STOP :1;
[; ;pic16f876a.h: 763: unsigned I2C_DATA :1;
[; ;pic16f876a.h: 764: };
[; ;pic16f876a.h: 765: struct {
[; ;pic16f876a.h: 766: unsigned :2;
[; ;pic16f876a.h: 767: unsigned nW :1;
[; ;pic16f876a.h: 768: unsigned :2;
[; ;pic16f876a.h: 769: unsigned nA :1;
[; ;pic16f876a.h: 770: };
[; ;pic16f876a.h: 771: struct {
[; ;pic16f876a.h: 772: unsigned :2;
[; ;pic16f876a.h: 773: unsigned nWRITE :1;
[; ;pic16f876a.h: 774: unsigned :2;
[; ;pic16f876a.h: 775: unsigned nADDRESS :1;
[; ;pic16f876a.h: 776: };
[; ;pic16f876a.h: 777: struct {
[; ;pic16f876a.h: 778: unsigned :2;
[; ;pic16f876a.h: 779: unsigned R_W :1;
[; ;pic16f876a.h: 780: unsigned :2;
[; ;pic16f876a.h: 781: unsigned D_A :1;
[; ;pic16f876a.h: 782: };
[; ;pic16f876a.h: 783: struct {
[; ;pic16f876a.h: 784: unsigned :2;
[; ;pic16f876a.h: 785: unsigned READ_WRITE :1;
[; ;pic16f876a.h: 786: unsigned :2;
[; ;pic16f876a.h: 787: unsigned DATA_ADDRESS :1;
[; ;pic16f876a.h: 788: };
[; ;pic16f876a.h: 789: } SSPSTATbits @ 0x094;
[; ;pic16f876a.h: 792: extern volatile unsigned char TXSTA @ 0x098;
[; ;pic16f876a.h: 794: extern volatile union {
[; ;pic16f876a.h: 795: struct {
[; ;pic16f876a.h: 796: unsigned TX9D :1;
[; ;pic16f876a.h: 797: unsigned TRMT :1;
[; ;pic16f876a.h: 798: unsigned BRGH :1;
[; ;pic16f876a.h: 799: unsigned :1;
[; ;pic16f876a.h: 800: unsigned SYNC :1;
[; ;pic16f876a.h: 801: unsigned TXEN :1;
[; ;pic16f876a.h: 802: unsigned TX9 :1;
[; ;pic16f876a.h: 803: unsigned CSRC :1;
[; ;pic16f876a.h: 804: };
[; ;pic16f876a.h: 805: struct {
[; ;pic16f876a.h: 806: unsigned TXD8 :1;
[; ;pic16f876a.h: 807: unsigned :5;
[; ;pic16f876a.h: 808: unsigned nTX8 :1;
[; ;pic16f876a.h: 809: };
[; ;pic16f876a.h: 810: struct {
[; ;pic16f876a.h: 811: unsigned :6;
[; ;pic16f876a.h: 812: unsigned TX8_9 :1;
[; ;pic16f876a.h: 813: };
[; ;pic16f876a.h: 814: } TXSTAbits @ 0x098;
[; ;pic16f876a.h: 817: extern volatile unsigned char SPBRG @ 0x099;
[; ;pic16f876a.h: 819: extern volatile union {
[; ;pic16f876a.h: 820: struct {
[; ;pic16f876a.h: 821: unsigned SPBRG :8;
[; ;pic16f876a.h: 822: };
[; ;pic16f876a.h: 823: } SPBRGbits @ 0x099;
[; ;pic16f876a.h: 826: extern volatile unsigned char CMCON @ 0x09C;
[; ;pic16f876a.h: 828: extern volatile union {
[; ;pic16f876a.h: 829: struct {
[; ;pic16f876a.h: 830: unsigned CM :3;
[; ;pic16f876a.h: 831: unsigned CIS :1;
[; ;pic16f876a.h: 832: unsigned C1INV :1;
[; ;pic16f876a.h: 833: unsigned C2INV :1;
[; ;pic16f876a.h: 834: unsigned C1OUT :1;
[; ;pic16f876a.h: 835: unsigned C2OUT :1;
[; ;pic16f876a.h: 836: };
[; ;pic16f876a.h: 837: struct {
[; ;pic16f876a.h: 838: unsigned CM0 :1;
[; ;pic16f876a.h: 839: unsigned CM1 :1;
[; ;pic16f876a.h: 840: unsigned CM2 :1;
[; ;pic16f876a.h: 841: };
[; ;pic16f876a.h: 842: } CMCONbits @ 0x09C;
[; ;pic16f876a.h: 845: extern volatile unsigned char CVRCON @ 0x09D;
[; ;pic16f876a.h: 847: extern volatile union {
[; ;pic16f876a.h: 848: struct {
[; ;pic16f876a.h: 849: unsigned CVR :4;
[; ;pic16f876a.h: 850: unsigned :1;
[; ;pic16f876a.h: 851: unsigned CVRR :1;
[; ;pic16f876a.h: 852: unsigned CVROE :1;
[; ;pic16f876a.h: 853: unsigned CVREN :1;
[; ;pic16f876a.h: 854: };
[; ;pic16f876a.h: 855: struct {
[; ;pic16f876a.h: 856: unsigned CVR0 :1;
[; ;pic16f876a.h: 857: unsigned CVR1 :1;
[; ;pic16f876a.h: 858: unsigned CVR2 :1;
[; ;pic16f876a.h: 859: unsigned CVR3 :1;
[; ;pic16f876a.h: 860: };
[; ;pic16f876a.h: 861: } CVRCONbits @ 0x09D;
[; ;pic16f876a.h: 864: extern volatile unsigned char ADRESL @ 0x09E;
[; ;pic16f876a.h: 866: extern volatile union {
[; ;pic16f876a.h: 867: struct {
[; ;pic16f876a.h: 868: unsigned ADRESL :8;
[; ;pic16f876a.h: 869: };
[; ;pic16f876a.h: 870: } ADRESLbits @ 0x09E;
[; ;pic16f876a.h: 873: extern volatile unsigned char ADCON1 @ 0x09F;
[; ;pic16f876a.h: 875: extern volatile union {
[; ;pic16f876a.h: 876: struct {
[; ;pic16f876a.h: 877: unsigned PCFG :4;
[; ;pic16f876a.h: 878: unsigned :2;
[; ;pic16f876a.h: 879: unsigned ADCS2 :1;
[; ;pic16f876a.h: 880: unsigned ADFM :1;
[; ;pic16f876a.h: 881: };
[; ;pic16f876a.h: 882: struct {
[; ;pic16f876a.h: 883: unsigned PCFG0 :1;
[; ;pic16f876a.h: 884: unsigned PCFG1 :1;
[; ;pic16f876a.h: 885: unsigned PCFG2 :1;
[; ;pic16f876a.h: 886: unsigned PCFG3 :1;
[; ;pic16f876a.h: 887: };
[; ;pic16f876a.h: 888: } ADCON1bits @ 0x09F;
[; ;pic16f876a.h: 891: extern volatile unsigned char EEDATA @ 0x10C;
[; ;pic16f876a.h: 893: extern volatile union {
[; ;pic16f876a.h: 894: struct {
[; ;pic16f876a.h: 895: unsigned EEDATA :8;
[; ;pic16f876a.h: 896: };
[; ;pic16f876a.h: 897: } EEDATAbits @ 0x10C;
[; ;pic16f876a.h: 900: extern volatile unsigned char EEADR @ 0x10D;
[; ;pic16f876a.h: 902: extern volatile union {
[; ;pic16f876a.h: 903: struct {
[; ;pic16f876a.h: 904: unsigned EEADR :8;
[; ;pic16f876a.h: 905: };
[; ;pic16f876a.h: 906: } EEADRbits @ 0x10D;
[; ;pic16f876a.h: 909: extern volatile unsigned char EEDATH @ 0x10E;
[; ;pic16f876a.h: 911: extern volatile union {
[; ;pic16f876a.h: 912: struct {
[; ;pic16f876a.h: 913: unsigned EEDATH :6;
[; ;pic16f876a.h: 914: };
[; ;pic16f876a.h: 915: } EEDATHbits @ 0x10E;
[; ;pic16f876a.h: 918: extern volatile unsigned char EEADRH @ 0x10F;
[; ;pic16f876a.h: 920: extern volatile union {
[; ;pic16f876a.h: 921: struct {
[; ;pic16f876a.h: 922: unsigned EEADRH :5;
[; ;pic16f876a.h: 923: };
[; ;pic16f876a.h: 924: } EEADRHbits @ 0x10F;
[; ;pic16f876a.h: 927: extern volatile unsigned char EECON1 @ 0x18C;
[; ;pic16f876a.h: 929: extern volatile union {
[; ;pic16f876a.h: 930: struct {
[; ;pic16f876a.h: 931: unsigned RD :1;
[; ;pic16f876a.h: 932: unsigned WR :1;
[; ;pic16f876a.h: 933: unsigned WREN :1;
[; ;pic16f876a.h: 934: unsigned WRERR :1;
[; ;pic16f876a.h: 935: unsigned :3;
[; ;pic16f876a.h: 936: unsigned EEPGD :1;
[; ;pic16f876a.h: 937: };
[; ;pic16f876a.h: 938: } EECON1bits @ 0x18C;
[; ;pic16f876a.h: 941: extern volatile unsigned char EECON2 @ 0x18D;
[; ;pic16f876a.h: 943: extern volatile union {
[; ;pic16f876a.h: 944: struct {
[; ;pic16f876a.h: 945: unsigned EECON2 :8;
[; ;pic16f876a.h: 946: };
[; ;pic16f876a.h: 947: } EECON2bits @ 0x18D;
[; ;pic16f876a.h: 953: extern volatile bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f876a.h: 954: extern volatile bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f876a.h: 955: extern volatile bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f876a.h: 956: extern volatile bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f876a.h: 957: extern volatile bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f876a.h: 958: extern volatile bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f876a.h: 959: extern volatile bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f876a.h: 960: extern volatile bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f876a.h: 961: extern volatile bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f876a.h: 962: extern volatile bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f876a.h: 963: extern volatile bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f876a.h: 964: extern volatile bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f876a.h: 965: extern volatile bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f876a.h: 966: extern volatile bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f876a.h: 967: extern volatile bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f876a.h: 968: extern volatile bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f876a.h: 969: extern volatile bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f876a.h: 970: extern volatile bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f876a.h: 971: extern volatile bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f876a.h: 972: extern volatile bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f876a.h: 973: extern volatile bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f876a.h: 974: extern volatile bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f876a.h: 975: extern volatile bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f876a.h: 976: extern volatile bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f876a.h: 977: extern volatile bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f876a.h: 978: extern volatile bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f876a.h: 979: extern volatile bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f876a.h: 980: extern volatile bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f876a.h: 981: extern volatile bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f876a.h: 982: extern volatile bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f876a.h: 983: extern volatile bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f876a.h: 984: extern volatile bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f876a.h: 985: extern volatile bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f876a.h: 986: extern volatile bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f876a.h: 987: extern volatile bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f876a.h: 988: extern volatile bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f876a.h: 989: extern volatile bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f876a.h: 990: extern volatile bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f876a.h: 991: extern volatile bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f876a.h: 992: extern volatile bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f876a.h: 993: extern volatile bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f876a.h: 994: extern volatile bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f876a.h: 995: extern volatile bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f876a.h: 996: extern volatile bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f876a.h: 997: extern volatile bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f876a.h: 998: extern volatile bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f876a.h: 999: extern volatile bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f876a.h: 1000: extern volatile bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f876a.h: 1001: extern volatile bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f876a.h: 1002: extern volatile bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f876a.h: 1003: extern volatile bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f876a.h: 1004: extern volatile bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f876a.h: 1005: extern volatile bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f876a.h: 1006: extern volatile bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f876a.h: 1007: extern volatile bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f876a.h: 1008: extern volatile bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f876a.h: 1009: extern volatile bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1010: extern volatile bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f876a.h: 1011: extern volatile bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1012: extern volatile bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1013: extern volatile bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f876a.h: 1014: extern volatile bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f876a.h: 1015: extern volatile bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f876a.h: 1016: extern volatile bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f876a.h: 1017: extern volatile bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f876a.h: 1018: extern volatile bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f876a.h: 1019: extern volatile bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1020: extern volatile bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1021: extern volatile bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1022: extern volatile bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1023: extern volatile bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1024: extern volatile bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f876a.h: 1025: extern volatile bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f876a.h: 1026: extern volatile bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f876a.h: 1027: extern volatile bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f876a.h: 1028: extern volatile bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f876a.h: 1029: extern volatile bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f876a.h: 1030: extern volatile bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f876a.h: 1031: extern volatile bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f876a.h: 1032: extern volatile bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f876a.h: 1033: extern volatile bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f876a.h: 1034: extern volatile bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f876a.h: 1035: extern volatile bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f876a.h: 1036: extern volatile bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f876a.h: 1037: extern volatile bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f876a.h: 1038: extern volatile bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f876a.h: 1039: extern volatile bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f876a.h: 1040: extern volatile bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f876a.h: 1041: extern volatile bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f876a.h: 1042: extern volatile bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f876a.h: 1043: extern volatile bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f876a.h: 1044: extern volatile bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f876a.h: 1045: extern volatile bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f876a.h: 1046: extern volatile bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f876a.h: 1047: extern volatile bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f876a.h: 1048: extern volatile bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f876a.h: 1049: extern volatile bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f876a.h: 1050: extern volatile bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f876a.h: 1051: extern volatile bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f876a.h: 1052: extern volatile bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f876a.h: 1053: extern volatile bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f876a.h: 1054: extern volatile bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f876a.h: 1055: extern volatile bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f876a.h: 1056: extern volatile bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f876a.h: 1057: extern volatile bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f876a.h: 1058: extern volatile bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f876a.h: 1059: extern volatile bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f876a.h: 1060: extern volatile bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f876a.h: 1061: extern volatile bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f876a.h: 1062: extern volatile bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f876a.h: 1063: extern volatile bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f876a.h: 1064: extern volatile bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f876a.h: 1065: extern volatile bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1066: extern volatile bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1067: extern volatile bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f876a.h: 1068: extern volatile bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f876a.h: 1069: extern volatile bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f876a.h: 1070: extern volatile bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f876a.h: 1071: extern volatile bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f876a.h: 1072: extern volatile bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1073: extern volatile bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f876a.h: 1074: extern volatile bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f876a.h: 1075: extern volatile bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f876a.h: 1076: extern volatile bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1077: extern volatile bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f876a.h: 1078: extern volatile bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1079: extern volatile bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1080: extern volatile bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f876a.h: 1081: extern volatile bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f876a.h: 1082: extern volatile bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f876a.h: 1083: extern volatile bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f876a.h: 1084: extern volatile bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f876a.h: 1085: extern volatile bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f876a.h: 1086: extern volatile bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f876a.h: 1087: extern volatile bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f876a.h: 1088: extern volatile bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f876a.h: 1089: extern volatile bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f876a.h: 1090: extern volatile bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f876a.h: 1091: extern volatile bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f876a.h: 1092: extern volatile bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f876a.h: 1093: extern volatile bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f876a.h: 1094: extern volatile bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f876a.h: 1095: extern volatile bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f876a.h: 1096: extern volatile bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f876a.h: 1097: extern volatile bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f876a.h: 1098: extern volatile bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f876a.h: 1099: extern volatile bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 1100: extern volatile bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f876a.h: 1101: extern volatile bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 1102: extern volatile bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f876a.h: 1103: extern volatile bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f876a.h: 1104: extern volatile bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f876a.h: 1105: extern volatile bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f876a.h: 1106: extern volatile bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f876a.h: 1107: extern volatile bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f876a.h: 1108: extern volatile bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f876a.h: 1109: extern volatile bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f876a.h: 1110: extern volatile bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f876a.h: 1111: extern volatile bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f876a.h: 1112: extern volatile bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f876a.h: 1113: extern volatile bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f876a.h: 1114: extern volatile bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f876a.h: 1115: extern volatile bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f876a.h: 1116: extern volatile bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f876a.h: 1117: extern volatile bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f876a.h: 1118: extern volatile bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f876a.h: 1119: extern volatile bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f876a.h: 1120: extern volatile bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f876a.h: 1121: extern volatile bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f876a.h: 1122: extern volatile bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f876a.h: 1123: extern volatile bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f876a.h: 1124: extern volatile bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f876a.h: 1125: extern volatile bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f876a.h: 1126: extern volatile bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f876a.h: 1127: extern volatile bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f876a.h: 1128: extern volatile bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f876a.h: 1129: extern volatile bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f876a.h: 1130: extern volatile bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f876a.h: 1131: extern volatile bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f876a.h: 1132: extern volatile bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f876a.h: 1133: extern volatile bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f876a.h: 1134: extern volatile bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f876a.h: 1135: extern volatile bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f876a.h: 1136: extern volatile bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f876a.h: 1137: extern volatile bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f876a.h: 1138: extern volatile bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f876a.h: 1139: extern volatile bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f876a.h: 1140: extern volatile bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 1141: extern volatile bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 1142: extern volatile bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f876a.h: 1143: extern volatile bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f876a.h: 1144: extern volatile bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f876a.h: 1145: extern volatile bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f876a.h: 1146: extern volatile bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f876a.h: 1147: extern volatile bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f876a.h: 1148: extern volatile bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f876a.h: 1149: extern volatile bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f876a.h: 1150: extern volatile bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f876a.h: 1151: extern volatile bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f876a.h: 1152: extern volatile bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f876a.h: 1153: extern volatile bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1154: extern volatile bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1155: extern volatile bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f876a.h: 1156: extern volatile bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f876a.h: 1157: extern volatile bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1158: extern volatile bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f876a.h: 1159: extern volatile bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f876a.h: 1160: extern volatile bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f876a.h: 1161: extern volatile bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1162: extern volatile bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 1163: extern volatile bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f876a.h: 1164: extern volatile bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 1165: extern volatile bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1166: extern volatile bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void _nop(void);
[; ;pic.h: 82: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 156: extern void _delay(unsigned long);
"13 PR22.c
[; ;PR22.c: 13: asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x3F32");
[; <" 	psect config,class=CONFIG,delta=2 ;# ">
[; <" 	dw 0x3F32 ;# ">
[; ;PR22.c: 37: void mode1(void);
[; ;PR22.c: 38: void mode2(void);
[; ;PR22.c: 39: void mode3(void);
[; ;PR22.c: 41: void delay(unsigned long data);
[; ;PR22.c: 43: void send_config(unsigned char data);
[; ;PR22.c: 44: void send_char(unsigned char data);
[; ;PR22.c: 45: void lcd_goto(unsigned char data);
[; ;PR22.c: 46: void lcd_clr(void);
[; ;PR22.c: 47: void send_string(const char *s);
[; ;PR22.c: 49: void i2c_start(unsigned char address, unsigned char size, unsigned operation);
[; ;PR22.c: 51: void spi_baro(unsigned char register_address, unsigned char data, unsigned operation);
[; ;PR22.c: 52: unsigned char spi_start(unsigned char data);
"56
[v _mode `uc ~T0 1 e ]
[; ;PR22.c: 56: unsigned char mode;
"58
[v _i2c_master_data `uc ~T0 -> 7 `i e ]
[i _i2c_master_data
:U ..
-> -> 0 `i `uc
..
]
[; ;PR22.c: 58: unsigned char i2c_master_data[7] = {0};
"59
[v _i2c_master_rcvb `uc ~T0 -> 7 `i e ]
[i _i2c_master_rcvb
:U ..
-> -> 0 `i `uc
..
]
[; ;PR22.c: 59: unsigned char i2c_master_rcvb[7] = {0};
"61
[v _spi_baro_rcvb `uc ~T0 -> 2 `i e ]
[i _spi_baro_rcvb
:U ..
-> -> 0 `i `uc
..
]
[; ;PR22.c: 61: unsigned char spi_baro_rcvb[2] = {0};
"66
[v _main `(v ~T0 1 ef ]
{
[; ;PR22.c: 65: void main()
[; ;PR22.c: 66: {
[e :U _main ]
[f ]
[; ;PR22.c: 68: TRISB = 0b00000000;
"68
[e = _TRISB -> -> 0 `i `uc ]
[; ;PR22.c: 69: TRISC = 0b00111000;
"69
[e = _TRISC -> -> 56 `i `uc ]
[; ;PR22.c: 70: TRISA = 0b00010111;
"70
[e = _TRISA -> -> 23 `i `uc ]
[; ;PR22.c: 73: SSPBUF = 0;
"73
[e = _SSPBUF -> -> 0 `i `uc ]
[; ;PR22.c: 74: SSPSTAT = 0b11000000;
"74
[e = _SSPSTAT -> -> 192 `i `uc ]
[; ;PR22.c: 75: SSPCON = 0b00111000;
"75
[e = _SSPCON -> -> 56 `i `uc ]
[; ;PR22.c: 76: SSPCON2 = 0b00000000;
"76
[e = _SSPCON2 -> -> 0 `i `uc ]
[; ;PR22.c: 77: SSPADD = 0x32;
"77
[e = _SSPADD -> -> 50 `i `uc ]
[; ;PR22.c: 78: SSPIF = 0;
"78
[e = _SSPIF -> -> 0 `i `b ]
[; ;PR22.c: 81: RC6 = 1;
"81
[e = _RC6 -> -> 1 `i `b ]
[; ;PR22.c: 82: RC7 = 1;
"82
[e = _RC7 -> -> 1 `i `b ]
[; ;PR22.c: 83: RA3 = 1;
"83
[e = _RA3 -> -> 1 `i `b ]
[; ;PR22.c: 86: ADCON1 = 0b00000110;
"86
[e = _ADCON1 -> -> 6 `i `uc ]
[; ;PR22.c: 89: send_config(0b00000001);
"89
[e ( _send_config (1 -> -> 1 `i `uc ]
[; ;PR22.c: 90: send_config(0b00000010);
"90
[e ( _send_config (1 -> -> 2 `i `uc ]
[; ;PR22.c: 91: send_config(0b00000110);
"91
[e ( _send_config (1 -> -> 6 `i `uc ]
[; ;PR22.c: 92: send_config(0b00001100);
"92
[e ( _send_config (1 -> -> 12 `i `uc ]
[; ;PR22.c: 93: send_config(0b00111000);
"93
[e ( _send_config (1 -> -> 56 `i `uc ]
[; ;PR22.c: 96: CCP1CON = 0b00001100;
"96
[e = _CCP1CON -> -> 12 `i `uc ]
[; ;PR22.c: 97: CCP2CON = 0b00001100;
"97
[e = _CCP2CON -> -> 12 `i `uc ]
[; ;PR22.c: 98: PR2 = 0xFF;
"98
[e = _PR2 -> -> 255 `i `uc ]
[; ;PR22.c: 99: T2CON = 0b00000101;
"99
[e = _T2CON -> -> 5 `i `uc ]
[; ;PR22.c: 100: CCPR2L = 50;
"100
[e = _CCPR2L -> -> 50 `i `uc ]
[; ;PR22.c: 101: CCPR1L = 0;
"101
[e = _CCPR1L -> -> 0 `i `uc ]
[; ;PR22.c: 104: lcd_clr();
"104
[e ( _lcd_clr ..  ]
[; ;PR22.c: 105: lcd_goto(0);
"105
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR22.c: 106: send_string("Cytron Tech.");
"106
[e ( _send_string (1 :s 1C ]
[; ;PR22.c: 107: lcd_goto(20);
"107
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR22.c: 108: send_string("PR22");
"108
[e ( _send_string (1 :s 2C ]
[; ;PR22.c: 110: delay(200000);
"110
[e ( _delay (1 -> -> 200000 `l `ul ]
[; ;PR22.c: 112: mode = 1;
"112
[e = _mode -> -> 1 `i `uc ]
[; ;PR22.c: 114: while(1)
"114
[e :U 153 ]
[; ;PR22.c: 115: {
"115
{
[; ;PR22.c: 116: lcd_clr();
"116
[e ( _lcd_clr ..  ]
[; ;PR22.c: 117: lcd_goto(0);
"117
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR22.c: 118: send_string("Sensor:");
"118
[e ( _send_string (1 :s 3C ]
[; ;PR22.c: 119: lcd_goto(20);
"119
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR22.c: 120: send_string("OK");
"120
[e ( _send_string (1 :s 4C ]
[; ;PR22.c: 122: while(RA2)
"122
[e $U 155  ]
[e :U 156 ]
[; ;PR22.c: 123: {
"123
{
[; ;PR22.c: 124: if(!RA0)
"124
[e $ ! ! _RA0 158  ]
[; ;PR22.c: 125: {
"125
{
[; ;PR22.c: 127: if(mode > 1)
"127
[e $ ! > -> _mode `i -> 1 `i 159  ]
[; ;PR22.c: 128: mode--;
"128
[e -- _mode -> -> 1 `i `uc ]
[e :U 159 ]
"129
}
[; ;PR22.c: 129: }
[e $U 160  ]
"130
[e :U 158 ]
[; ;PR22.c: 130: else if(!RA1)
[e $ ! ! _RA1 161  ]
[; ;PR22.c: 131: {
"131
{
[; ;PR22.c: 133: if(mode < 3)
"133
[e $ ! < -> _mode `i -> 3 `i 162  ]
[; ;PR22.c: 134: mode++;
"134
[e ++ _mode -> -> 1 `i `uc ]
[e :U 162 ]
"135
}
[e :U 161 ]
"138
[e :U 160 ]
[; ;PR22.c: 135: }
[; ;PR22.c: 138: lcd_goto(8);
[e ( _lcd_goto (1 -> -> 8 `i `uc ]
[; ;PR22.c: 139: switch(mode)
"139
[e $U 164  ]
[; ;PR22.c: 140: {
"140
{
[; ;PR22.c: 141: case 1 : send_string("HMC6352");
"141
[e :U 165 ]
[e ( _send_string (1 :s 5C ]
[; ;PR22.c: 142: break;
"142
[e $U 163  ]
[; ;PR22.c: 144: case 2 : send_string("AD7746 ");
"144
[e :U 166 ]
[e ( _send_string (1 :s 6C ]
[; ;PR22.c: 145: break;
"145
[e $U 163  ]
[; ;PR22.c: 147: case 3 : send_string("SCP1000");
"147
[e :U 167 ]
[e ( _send_string (1 :s 7C ]
[; ;PR22.c: 148: break;
"148
[e $U 163  ]
"149
}
[; ;PR22.c: 149: }
[e $U 163  ]
"139
[e :U 164 ]
[e [\ _mode , $ -> -> 1 `i `uc 165
 , $ -> -> 2 `i `uc 166
 , $ -> -> 3 `i `uc 167
 163 ]
"149
[e :U 163 ]
[; ;PR22.c: 151: delay(30000);
"151
[e ( _delay (1 -> -> -> 30000 `i `l `ul ]
"153
}
[e :U 155 ]
"122
[e $ _RA2 156  ]
[e :U 157 ]
[; ;PR22.c: 153: }
[; ;PR22.c: 155: delay(10000);
"155
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 156: while(!RA2);
"156
[e $U 168  ]
[e :U 169 ]
[e :U 168 ]
[e $ ! _RA2 169  ]
[e :U 170 ]
[; ;PR22.c: 157: delay(10000);
"157
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 159: switch(mode)
"159
[e $U 172  ]
[; ;PR22.c: 160: {
"160
{
[; ;PR22.c: 161: case 1 : mode1();
"161
[e :U 173 ]
[e ( _mode1 ..  ]
[; ;PR22.c: 162: break;
"162
[e $U 171  ]
[; ;PR22.c: 164: case 2 : mode2();
"164
[e :U 174 ]
[e ( _mode2 ..  ]
[; ;PR22.c: 165: break;
"165
[e $U 171  ]
[; ;PR22.c: 167: case 3 : mode3();
"167
[e :U 175 ]
[e ( _mode3 ..  ]
[; ;PR22.c: 168: break;
"168
[e $U 171  ]
"169
}
[; ;PR22.c: 169: }
[e $U 171  ]
"159
[e :U 172 ]
[e [\ _mode , $ -> -> 1 `i `uc 173
 , $ -> -> 2 `i `uc 174
 , $ -> -> 3 `i `uc 175
 171 ]
"169
[e :U 171 ]
"170
}
[e :U 152 ]
"114
[e $U 153  ]
[e :U 154 ]
[; ;PR22.c: 170: }
[; ;PR22.c: 171: }
"171
[e :UE 151 ]
}
"176
[v _mode1 `(v ~T0 1 ef ]
{
[; ;PR22.c: 175: void mode1(void)
[; ;PR22.c: 176: {
[e :U _mode1 ]
[f ]
"177
[v _result `ui ~T0 1 a ]
"178
[v _submode `uc ~T0 1 a ]
[; ;PR22.c: 177: unsigned int result;
[; ;PR22.c: 178: unsigned char submode = 1;
[e = _submode -> -> 1 `i `uc ]
[; ;PR22.c: 180: lcd_clr();
"180
[e ( _lcd_clr ..  ]
[; ;PR22.c: 181: while(1)
"181
[e :U 178 ]
[; ;PR22.c: 182: {
"182
{
[; ;PR22.c: 183: lcd_goto(20);
"183
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR22.c: 184: send_string("OK");
"184
[e ( _send_string (1 :s 8C ]
[; ;PR22.c: 186: if(!RA0)
"186
[e $ ! ! _RA0 180  ]
[; ;PR22.c: 187: {
"187
{
[; ;PR22.c: 189: if(submode > 1)
"189
[e $ ! > -> _submode `i -> 1 `i 181  ]
[; ;PR22.c: 190: submode--;
"190
[e -- _submode -> -> 1 `i `uc ]
[e :U 181 ]
"191
}
[; ;PR22.c: 191: }
[e $U 182  ]
"192
[e :U 180 ]
[; ;PR22.c: 192: else if(!RA1)
[e $ ! ! _RA1 183  ]
[; ;PR22.c: 193: {
"193
{
[; ;PR22.c: 195: if(submode < 4)
"195
[e $ ! < -> _submode `i -> 4 `i 184  ]
[; ;PR22.c: 196: submode++;
"196
[e ++ _submode -> -> 1 `i `uc ]
[e :U 184 ]
"197
}
[e :U 183 ]
"200
[e :U 182 ]
[; ;PR22.c: 197: }
[; ;PR22.c: 200: lcd_goto(0);
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR22.c: 201: switch(submode)
"201
[e $U 186  ]
[; ;PR22.c: 202: {
"202
{
[; ;PR22.c: 203: case 1 : send_string("Heading Output?");
"203
[e :U 187 ]
[e ( _send_string (1 :s 9C ]
[; ;PR22.c: 204: break;
"204
[e $U 185  ]
[; ;PR22.c: 206: case 2 : send_string("Calibration?   ");
"206
[e :U 188 ]
[e ( _send_string (1 :s 10C ]
[; ;PR22.c: 207: break;
"207
[e $U 185  ]
[; ;PR22.c: 209: case 3 : send_string("Reset Offset?  ");
"209
[e :U 189 ]
[e ( _send_string (1 :s 11C ]
[; ;PR22.c: 210: break;
"210
[e $U 185  ]
[; ;PR22.c: 212: case 4 : send_string("Exit?          ");
"212
[e :U 190 ]
[e ( _send_string (1 :s 12C ]
[; ;PR22.c: 213: break;
"213
[e $U 185  ]
"214
}
[; ;PR22.c: 214: }
[e $U 185  ]
"201
[e :U 186 ]
[e [\ _submode , $ -> -> 1 `i `uc 187
 , $ -> -> 2 `i `uc 188
 , $ -> -> 3 `i `uc 189
 , $ -> -> 4 `i `uc 190
 185 ]
"214
[e :U 185 ]
[; ;PR22.c: 216: if(!RA2)
"216
[e $ ! ! _RA2 191  ]
[; ;PR22.c: 217: {
"217
{
[; ;PR22.c: 218: delay(10000);
"218
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 219: while(!RA2);
"219
[e $U 192  ]
[e :U 193 ]
[e :U 192 ]
[e $ ! _RA2 193  ]
[e :U 194 ]
[; ;PR22.c: 220: delay(10000);
"220
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 222: lcd_clr();
"222
[e ( _lcd_clr ..  ]
[; ;PR22.c: 223: lcd_goto(0);
"223
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR22.c: 225: switch(submode)
"225
[e $U 196  ]
[; ;PR22.c: 226: {
"226
{
[; ;PR22.c: 227: case 1 :
"227
[e :U 197 ]
[; ;PR22.c: 229: send_string("Heading:");
"229
[e ( _send_string (1 :s 13C ]
[; ;PR22.c: 230: lcd_goto(20);
"230
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR22.c: 231: send_string("Exit");
"231
[e ( _send_string (1 :s 14C ]
[; ;PR22.c: 234: i2c_master_data[0] = 'O';
"234
[e = *U + &U _i2c_master_data * -> -> -> 0 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 79 `ui `uc ]
[; ;PR22.c: 235: i2c_start(0x42, 1, 0);
"235
[e ( _i2c_start (3 , , -> -> 66 `i `uc -> -> 1 `i `uc -> -> 0 `i `ui ]
[; ;PR22.c: 236: delay(10000);
"236
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 238: while(RA2)
"238
[e $U 198  ]
[e :U 199 ]
[; ;PR22.c: 239: {
"239
{
[; ;PR22.c: 241: i2c_master_data[0] = 'A';
"241
[e = *U + &U _i2c_master_data * -> -> -> 0 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 65 `ui `uc ]
[; ;PR22.c: 242: i2c_start(0x42, 1, 0);
"242
[e ( _i2c_start (3 , , -> -> 66 `i `uc -> -> 1 `i `uc -> -> 0 `i `ui ]
[; ;PR22.c: 243: delay(10000);
"243
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 245: i2c_start(0x42, 2, 1);
"245
[e ( _i2c_start (3 , , -> -> 66 `i `uc -> -> 2 `i `uc -> -> 1 `i `ui ]
[; ;PR22.c: 247: lcd_goto(9);
"247
[e ( _lcd_goto (1 -> -> 9 `i `uc ]
[; ;PR22.c: 250: result = (i2c_master_rcvb[0] << 8) + i2c_master_rcvb[1];
"250
[e = _result -> + << -> *U + &U _i2c_master_rcvb * -> -> -> 0 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `i -> 8 `i -> *U + &U _i2c_master_rcvb * -> -> -> 1 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `i `ui ]
[; ;PR22.c: 253: send_char('0' + (result % 10000) / 1000);
"253
[e ( _send_char (1 -> + -> 48 `ui / % _result -> -> 10000 `i `ui -> -> 1000 `i `ui `uc ]
[; ;PR22.c: 254: send_char('0' + (result % 1000) / 100);
"254
[e ( _send_char (1 -> + -> 48 `ui / % _result -> -> 1000 `i `ui -> -> 100 `i `ui `uc ]
[; ;PR22.c: 255: send_char('0' + (result % 100) / 10);
"255
[e ( _send_char (1 -> + -> 48 `ui / % _result -> -> 100 `i `ui -> -> 10 `i `ui `uc ]
[; ;PR22.c: 256: send_char('.');
"256
[e ( _send_char (1 -> -> 46 `ui `uc ]
[; ;PR22.c: 257: send_char('0' + (result % 10));
"257
[e ( _send_char (1 -> + -> 48 `ui % _result -> -> 10 `i `ui `uc ]
[; ;PR22.c: 258: delay(10000);
"258
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"259
}
[e :U 198 ]
"238
[e $ _RA2 199  ]
[e :U 200 ]
[; ;PR22.c: 259: }
[; ;PR22.c: 261: delay(10000);
"261
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 262: while(!RA2);
"262
[e $U 201  ]
[e :U 202 ]
[e :U 201 ]
[e $ ! _RA2 202  ]
[e :U 203 ]
[; ;PR22.c: 263: delay(10000);
"263
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 265: lcd_clr();
"265
[e ( _lcd_clr ..  ]
[; ;PR22.c: 266: break;
"266
[e $U 195  ]
[; ;PR22.c: 268: case 2 :
"268
[e :U 204 ]
[; ;PR22.c: 270: lcd_clr();
"270
[e ( _lcd_clr ..  ]
[; ;PR22.c: 271: lcd_goto(0);
"271
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR22.c: 272: send_string("Calibrating...");
"272
[e ( _send_string (1 :s 15C ]
[; ;PR22.c: 273: lcd_goto(20);
"273
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR22.c: 274: send_string("Exit");
"274
[e ( _send_string (1 :s 16C ]
[; ;PR22.c: 277: i2c_master_data[0] = 'C';
"277
[e = *U + &U _i2c_master_data * -> -> -> 0 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 67 `ui `uc ]
[; ;PR22.c: 278: i2c_start(0x42, 1, 0);
"278
[e ( _i2c_start (3 , , -> -> 66 `i `uc -> -> 1 `i `uc -> -> 0 `i `ui ]
[; ;PR22.c: 280: while(RA2);
"280
[e $U 205  ]
[e :U 206 ]
[e :U 205 ]
[e $ _RA2 206  ]
[e :U 207 ]
[; ;PR22.c: 281: delay(10000);
"281
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 282: while(!RA2);
"282
[e $U 208  ]
[e :U 209 ]
[e :U 208 ]
[e $ ! _RA2 209  ]
[e :U 210 ]
[; ;PR22.c: 283: delay(10000);
"283
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 286: i2c_master_data[0] = 'E';
"286
[e = *U + &U _i2c_master_data * -> -> -> 0 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 69 `ui `uc ]
[; ;PR22.c: 287: i2c_start(0x42, 1, 0);
"287
[e ( _i2c_start (3 , , -> -> 66 `i `uc -> -> 1 `i `uc -> -> 0 `i `ui ]
[; ;PR22.c: 289: lcd_clr();
"289
[e ( _lcd_clr ..  ]
[; ;PR22.c: 290: lcd_goto(0);
"290
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR22.c: 291: send_string("Done");
"291
[e ( _send_string (1 :s 17C ]
[; ;PR22.c: 292: delay(200000);
"292
[e ( _delay (1 -> -> 200000 `l `ul ]
[; ;PR22.c: 293: break;
"293
[e $U 195  ]
[; ;PR22.c: 295: case 3 :
"295
[e :U 211 ]
[; ;PR22.c: 298: i2c_master_data[0] = 'w';
"298
[e = *U + &U _i2c_master_data * -> -> -> 0 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 119 `ui `uc ]
[; ;PR22.c: 299: i2c_master_data[1] = 0x01;
"299
[e = *U + &U _i2c_master_data * -> -> -> 1 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 1 `i `uc ]
[; ;PR22.c: 300: i2c_master_data[2] = 0;
"300
[e = *U + &U _i2c_master_data * -> -> -> 2 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 0 `i `uc ]
[; ;PR22.c: 301: i2c_start(0x42, 3, 0);
"301
[e ( _i2c_start (3 , , -> -> 66 `i `uc -> -> 3 `i `uc -> -> 0 `i `ui ]
[; ;PR22.c: 302: delay(10000);
"302
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 304: i2c_master_data[1] = 0x02;
"304
[e = *U + &U _i2c_master_data * -> -> -> 1 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 2 `i `uc ]
[; ;PR22.c: 305: i2c_start(0x42, 3, 0);
"305
[e ( _i2c_start (3 , , -> -> 66 `i `uc -> -> 3 `i `uc -> -> 0 `i `ui ]
[; ;PR22.c: 306: delay(10000);
"306
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 308: i2c_master_data[1] = 0x03;
"308
[e = *U + &U _i2c_master_data * -> -> -> 1 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 3 `i `uc ]
[; ;PR22.c: 309: i2c_start(0x42, 3, 0);
"309
[e ( _i2c_start (3 , , -> -> 66 `i `uc -> -> 3 `i `uc -> -> 0 `i `ui ]
[; ;PR22.c: 310: delay(10000);
"310
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 312: i2c_master_data[1] = 0x04;
"312
[e = *U + &U _i2c_master_data * -> -> -> 1 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 4 `i `uc ]
[; ;PR22.c: 313: i2c_start(0x42, 3, 0);
"313
[e ( _i2c_start (3 , , -> -> 66 `i `uc -> -> 3 `i `uc -> -> 0 `i `ui ]
[; ;PR22.c: 315: lcd_clr();
"315
[e ( _lcd_clr ..  ]
[; ;PR22.c: 316: lcd_goto(0);
"316
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR22.c: 317: send_string("Done");
"317
[e ( _send_string (1 :s 18C ]
[; ;PR22.c: 318: delay(200000);
"318
[e ( _delay (1 -> -> 200000 `l `ul ]
[; ;PR22.c: 319: break;
"319
[e $U 195  ]
[; ;PR22.c: 321: case 4 :
"321
[e :U 212 ]
[; ;PR22.c: 323: return;
"323
[e $UE 176  ]
[; ;PR22.c: 325: default : break;
"325
[e :U 213 ]
[e $U 195  ]
"326
}
[; ;PR22.c: 326: }
[e $U 195  ]
"225
[e :U 196 ]
[e [\ _submode , $ -> -> 1 `i `uc 197
 , $ -> -> 2 `i `uc 204
 , $ -> -> 3 `i `uc 211
 , $ -> -> 4 `i `uc 212
 213 ]
"326
[e :U 195 ]
"327
}
[e :U 191 ]
[; ;PR22.c: 327: }
[; ;PR22.c: 328: delay(30000);
"328
[e ( _delay (1 -> -> -> 30000 `i `l `ul ]
"330
}
[e :U 177 ]
"181
[e $U 178  ]
[e :U 179 ]
[; ;PR22.c: 330: }
[; ;PR22.c: 331: }
"331
[e :UE 176 ]
}
"334
[v _mode2 `(v ~T0 1 ef ]
{
[; ;PR22.c: 333: void mode2(void)
[; ;PR22.c: 334: {
[e :U _mode2 ]
[f ]
"335
[v _i `uc ~T0 1 a ]
"336
[v _temperature `uc ~T0 1 a ]
"337
[v _capacitance `ui ~T0 1 a ]
"338
[v _capacitance_raw `ul ~T0 1 a ]
[v _temperature_raw `ul ~T0 1 a ]
[; ;PR22.c: 335: unsigned char i;
[; ;PR22.c: 336: unsigned char temperature;
[; ;PR22.c: 337: unsigned int capacitance;
[; ;PR22.c: 338: unsigned long capacitance_raw, temperature_raw;
[; ;PR22.c: 340: lcd_goto(20);
"340
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR22.c: 341: send_string("Calibrating...  ");
"341
[e ( _send_string (1 :s 19C ]
[; ;PR22.c: 344: for(i = 0; i < 7; i++)
"344
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 7 `i 215  ]
[e $U 216  ]
"345
[e :U 215 ]
[; ;PR22.c: 345: i2c_master_data[i] = i2c_master_rcvb[i] = 0;
[e = *U + &U _i2c_master_data * -> _i `ux -> -> # *U &U _i2c_master_data `ui `ux = *U + &U _i2c_master_rcvb * -> _i `ux -> -> # *U &U _i2c_master_rcvb `ui `ux -> -> 0 `i `uc ]
"344
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 7 `i 215  ]
[e :U 216 ]
"345
}
[; ;PR22.c: 347: i2c_master_data[5] = 0b10000000;
"347
[e = *U + &U _i2c_master_data * -> -> -> 5 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 128 `i `uc ]
[; ;PR22.c: 357: i2c_master_data[0] = 0x07;
"357
[e = *U + &U _i2c_master_data * -> -> -> 0 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 7 `i `uc ]
[; ;PR22.c: 358: i2c_master_data[1] = 0b10000000;
"358
[e = *U + &U _i2c_master_data * -> -> -> 1 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 128 `i `uc ]
[; ;PR22.c: 364: i2c_master_data[2] = 0b10000001;
"364
[e = *U + &U _i2c_master_data * -> -> -> 2 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 129 `i `uc ]
[; ;PR22.c: 365: i2c_master_data[3] = 0b00001011;
"365
[e = *U + &U _i2c_master_data * -> -> -> 3 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 11 `i `uc ]
[; ;PR22.c: 371: i2c_master_data[4] = 0b00010001;
"371
[e = *U + &U _i2c_master_data * -> -> -> 4 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 17 `i `uc ]
[; ;PR22.c: 376: do
"376
[e :U 220 ]
[; ;PR22.c: 377: {
"377
{
[; ;PR22.c: 378: i2c_start(0x90, 6, 0);
"378
[e ( _i2c_start (3 , , -> -> 144 `i `uc -> -> 6 `i `uc -> -> 0 `i `ui ]
[; ;PR22.c: 380: do
"380
[e :U 223 ]
[; ;PR22.c: 381: i2c_start(0x90, 1, 1);
"381
[e ( _i2c_start (3 , , -> -> 144 `i `uc -> -> 1 `i `uc -> -> 1 `i `ui ]
[; ;PR22.c: 382: while(i2c_master_rcvb[0] != 0);
"382
[e $ != -> *U + &U _i2c_master_rcvb * -> -> -> 0 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `i -> 0 `i 223  ]
[e :U 222 ]
[; ;PR22.c: 384: i2c_start(0x90, 4, 1);
"384
[e ( _i2c_start (3 , , -> -> 144 `i `uc -> -> 4 `i `uc -> -> 1 `i `ui ]
[; ;PR22.c: 386: if(i2c_master_data[5] < 0xFF)
"386
[e $ ! < -> *U + &U _i2c_master_data * -> -> -> 5 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux `i -> 255 `i 224  ]
[; ;PR22.c: 387: {
"387
{
[; ;PR22.c: 388: if(i2c_master_rcvb[1] != 0)
"388
[e $ ! != -> *U + &U _i2c_master_rcvb * -> -> -> 1 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `i -> 0 `i 225  ]
[; ;PR22.c: 389: i2c_master_data[5]++;
"389
[e ++ *U + &U _i2c_master_data * -> -> -> 5 `i `ui `ux -> -> # *U &U _i2c_master_data `ui `ux -> -> 1 `i `uc ]
[e :U 225 ]
"390
}
[; ;PR22.c: 390: }
[e $U 226  ]
"391
[e :U 224 ]
[; ;PR22.c: 391: else
[; ;PR22.c: 392: {
"392
{
[; ;PR22.c: 393: lcd_clr();
"393
[e ( _lcd_clr ..  ]
[; ;PR22.c: 394: lcd_goto(0);
"394
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR22.c: 395: send_string("Calibration Fail");
"395
[e ( _send_string (1 :s 20C ]
[; ;PR22.c: 396: delay(200000);
"396
[e ( _delay (1 -> -> 200000 `l `ul ]
[; ;PR22.c: 397: return;
"397
[e $UE 214  ]
"398
}
[e :U 226 ]
"399
}
[; ;PR22.c: 398: }
[; ;PR22.c: 399: } while(i2c_master_rcvb[1] != 0);
[e $ != -> *U + &U _i2c_master_rcvb * -> -> -> 1 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `i -> 0 `i 220  ]
[e :U 219 ]
[; ;PR22.c: 403: lcd_clr();
"403
[e ( _lcd_clr ..  ]
[; ;PR22.c: 404: lcd_goto(0);
"404
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR22.c: 405: send_string("Cap.:");
"405
[e ( _send_string (1 :s 21C ]
[; ;PR22.c: 406: lcd_goto(20);
"406
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR22.c: 407: send_string("Tem.:");
"407
[e ( _send_string (1 :s 22C ]
[; ;PR22.c: 409: while(RA2)
"409
[e $U 227  ]
[e :U 228 ]
[; ;PR22.c: 410: {
"410
{
[; ;PR22.c: 413: do
"413
[e :U 232 ]
[; ;PR22.c: 414: i2c_start(0x90, 1, 1);
"414
[e ( _i2c_start (3 , , -> -> 144 `i `uc -> -> 1 `i `uc -> -> 1 `i `ui ]
[; ;PR22.c: 415: while(i2c_master_rcvb[0] != 0);
"415
[e $ != -> *U + &U _i2c_master_rcvb * -> -> -> 0 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `i -> 0 `i 232  ]
[e :U 231 ]
[; ;PR22.c: 417: i2c_start(0x90, 7, 1);
"417
[e ( _i2c_start (3 , , -> -> 144 `i `uc -> -> 7 `i `uc -> -> 1 `i `ui ]
[; ;PR22.c: 430: capacitance_raw = i2c_master_rcvb[1];
"430
[e = _capacitance_raw -> *U + &U _i2c_master_rcvb * -> -> -> 1 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `ul ]
[; ;PR22.c: 431: capacitance_raw <<= 8;
"431
[e =<< _capacitance_raw -> 8 `i ]
[; ;PR22.c: 432: capacitance_raw += i2c_master_rcvb[2];
"432
[e =+ _capacitance_raw -> *U + &U _i2c_master_rcvb * -> -> -> 2 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `ul ]
[; ;PR22.c: 433: capacitance_raw <<= 8;
"433
[e =<< _capacitance_raw -> 8 `i ]
[; ;PR22.c: 434: capacitance_raw += i2c_master_rcvb[3];
"434
[e =+ _capacitance_raw -> *U + &U _i2c_master_rcvb * -> -> -> 3 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `ul ]
[; ;PR22.c: 435: capacitance = capacitance_raw / 2048;
"435
[e = _capacitance -> / _capacitance_raw -> -> -> 2048 `i `l `ul `ui ]
[; ;PR22.c: 438: temperature_raw = i2c_master_rcvb[4];
"438
[e = _temperature_raw -> *U + &U _i2c_master_rcvb * -> -> -> 4 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `ul ]
[; ;PR22.c: 439: temperature_raw <<= 8;
"439
[e =<< _temperature_raw -> 8 `i ]
[; ;PR22.c: 440: temperature_raw += i2c_master_rcvb[5];
"440
[e =+ _temperature_raw -> *U + &U _i2c_master_rcvb * -> -> -> 5 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `ul ]
[; ;PR22.c: 441: temperature_raw <<= 8;
"441
[e =<< _temperature_raw -> 8 `i ]
[; ;PR22.c: 442: temperature_raw += i2c_master_rcvb[6];
"442
[e =+ _temperature_raw -> *U + &U _i2c_master_rcvb * -> -> -> 6 `i `ui `ux -> -> # *U &U _i2c_master_rcvb `ui `ux `ul ]
[; ;PR22.c: 443: temperature = (temperature_raw / 2048) - 4096;
"443
[e = _temperature -> - / _temperature_raw -> -> -> 2048 `i `l `ul -> -> -> 4096 `i `l `ul `uc ]
[; ;PR22.c: 446: lcd_goto(6);
"446
[e ( _lcd_goto (1 -> -> 6 `i `uc ]
[; ;PR22.c: 447: if(capacitance >= 8191)
"447
[e $ ! >= _capacitance -> -> 8191 `i `ui 233  ]
[; ;PR22.c: 448: send_string("Saturated");
"448
[e ( _send_string (1 :s 23C ]
[e $U 234  ]
"449
[e :U 233 ]
[; ;PR22.c: 449: else
[; ;PR22.c: 450: {
"450
{
[; ;PR22.c: 451: send_char('0' + capacitance / 1000);
"451
[e ( _send_char (1 -> + -> 48 `ui / _capacitance -> -> 1000 `i `ui `uc ]
[; ;PR22.c: 452: send_char('.');
"452
[e ( _send_char (1 -> -> 46 `ui `uc ]
[; ;PR22.c: 453: send_char('0' + (capacitance % 1000) / 100);
"453
[e ( _send_char (1 -> + -> 48 `ui / % _capacitance -> -> 1000 `i `ui -> -> 100 `i `ui `uc ]
[; ;PR22.c: 454: send_char('0' + (capacitance % 100) / 10);
"454
[e ( _send_char (1 -> + -> 48 `ui / % _capacitance -> -> 100 `i `ui -> -> 10 `i `ui `uc ]
[; ;PR22.c: 455: send_char('0' + (capacitance % 10));
"455
[e ( _send_char (1 -> + -> 48 `ui % _capacitance -> -> 10 `i `ui `uc ]
[; ;PR22.c: 456: send_string("pF  ");
"456
[e ( _send_string (1 :s 24C ]
"457
}
[e :U 234 ]
[; ;PR22.c: 457: }
[; ;PR22.c: 460: lcd_goto(26);
"460
[e ( _lcd_goto (1 -> -> 26 `i `uc ]
[; ;PR22.c: 461: send_char('0' + (temperature % 100) / 10);
"461
[e ( _send_char (1 -> + -> 48 `ui -> / % -> _temperature `i -> 100 `i -> 10 `i `ui `uc ]
[; ;PR22.c: 462: send_char('0' + (temperature % 10));
"462
[e ( _send_char (1 -> + -> 48 `ui -> % -> _temperature `i -> 10 `i `ui `uc ]
[; ;PR22.c: 463: send_char('C');
"463
[e ( _send_char (1 -> -> 67 `ui `uc ]
[; ;PR22.c: 465: delay(10000);
"465
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"466
}
[e :U 227 ]
"409
[e $ _RA2 228  ]
[e :U 229 ]
[; ;PR22.c: 466: }
[; ;PR22.c: 468: delay(10000);
"468
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 469: while(!RA2);
"469
[e $U 235  ]
[e :U 236 ]
[e :U 235 ]
[e $ ! _RA2 236  ]
[e :U 237 ]
[; ;PR22.c: 470: delay(10000);
"470
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 471: }
"471
[e :UE 214 ]
}
"474
[v _mode3 `(v ~T0 1 ef ]
{
[; ;PR22.c: 473: void mode3(void)
[; ;PR22.c: 474: {
[e :U _mode3 ]
[f ]
"475
[v _temp `ui ~T0 1 a ]
"476
[v _temperature `ui ~T0 1 a ]
"477
[v _temperature_raw `ui ~T0 1 a ]
"478
[v _pressure `ul ~T0 1 a ]
"479
[v _pressure_raw `ul ~T0 1 a ]
[; ;PR22.c: 475: unsigned int temp;
[; ;PR22.c: 476: unsigned int temperature;
[; ;PR22.c: 477: unsigned int temperature_raw;
[; ;PR22.c: 478: unsigned long pressure;
[; ;PR22.c: 479: unsigned long pressure_raw;
[; ;PR22.c: 481: spi_baro(0x03, 0x09, 0);
"481
[e ( _spi_baro (3 , , -> -> 3 `i `uc -> -> 9 `i `uc -> -> 0 `i `ui ]
[; ;PR22.c: 482: lcd_clr();
"482
[e ( _lcd_clr ..  ]
[; ;PR22.c: 483: lcd_goto(0);
"483
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR22.c: 484: send_string("Pre.:");
"484
[e ( _send_string (1 :s 25C ]
[; ;PR22.c: 485: lcd_goto(20);
"485
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR22.c: 486: send_string("Tem.:");
"486
[e ( _send_string (1 :s 26C ]
[; ;PR22.c: 488: while(RA2)
"488
[e $U 239  ]
[e :U 240 ]
[; ;PR22.c: 489: {
"489
{
[; ;PR22.c: 490: do
"490
[e :U 244 ]
[; ;PR22.c: 491: spi_baro(0x07, 0, 1);
"491
[e ( _spi_baro (3 , , -> -> 7 `i `uc -> -> 0 `i `uc -> -> 1 `i `ui ]
[; ;PR22.c: 492: while(!(0b00100000 & spi_baro_rcvb[0]));
"492
[e $ ! != & -> 32 `i -> *U + &U _spi_baro_rcvb * -> -> -> 0 `i `ui `ux -> -> # *U &U _spi_baro_rcvb `ui `ux `i -> 0 `i 244  ]
[e :U 243 ]
[; ;PR22.c: 495: spi_baro(0x1F, 0, 1);
"495
[e ( _spi_baro (3 , , -> -> 31 `i `uc -> -> 0 `i `uc -> -> 1 `i `ui ]
[; ;PR22.c: 496: pressure_raw = (0b00000111 & spi_baro_rcvb[0]);
"496
[e = _pressure_raw -> -> & -> 7 `i -> *U + &U _spi_baro_rcvb * -> -> -> 0 `i `ui `ux -> -> # *U &U _spi_baro_rcvb `ui `ux `i `l `ul ]
[; ;PR22.c: 497: pressure_raw <<= 16;
"497
[e =<< _pressure_raw -> 16 `i ]
[; ;PR22.c: 498: spi_baro(0x20, 0, 1);
"498
[e ( _spi_baro (3 , , -> -> 32 `i `uc -> -> 0 `i `uc -> -> 1 `i `ui ]
[; ;PR22.c: 499: pressure_raw += ((spi_baro_rcvb[0] << 8) + spi_baro_rcvb[1]);
"499
[e =+ _pressure_raw -> -> + << -> *U + &U _spi_baro_rcvb * -> -> -> 0 `i `ui `ux -> -> # *U &U _spi_baro_rcvb `ui `ux `i -> 8 `i -> *U + &U _spi_baro_rcvb * -> -> -> 1 `i `ui `ux -> -> # *U &U _spi_baro_rcvb `ui `ux `i `l `ul ]
[; ;PR22.c: 502: spi_baro(0x21, 0, 1);
"502
[e ( _spi_baro (3 , , -> -> 33 `i `uc -> -> 0 `i `uc -> -> 1 `i `ui ]
[; ;PR22.c: 503: temperature_raw = (spi_baro_rcvb[0] << 8) + spi_baro_rcvb[1];
"503
[e = _temperature_raw -> + << -> *U + &U _spi_baro_rcvb * -> -> -> 0 `i `ui `ux -> -> # *U &U _spi_baro_rcvb `ui `ux `i -> 8 `i -> *U + &U _spi_baro_rcvb * -> -> -> 1 `i `ui `ux -> -> # *U &U _spi_baro_rcvb `ui `ux `i `ui ]
[; ;PR22.c: 506: lcd_goto(6);
"506
[e ( _lcd_goto (1 -> -> 6 `i `uc ]
[; ;PR22.c: 507: pressure = pressure_raw >> 2;
"507
[e = _pressure >> _pressure_raw -> 2 `i ]
[; ;PR22.c: 508: temp = pressure / 1000;
"508
[e = _temp -> / _pressure -> -> -> 1000 `i `l `ul `ui ]
[; ;PR22.c: 509: send_char('0' + (temp % 1000) / 100);
"509
[e ( _send_char (1 -> + -> 48 `ui / % _temp -> -> 1000 `i `ui -> -> 100 `i `ui `uc ]
[; ;PR22.c: 510: send_char('0' + (temp % 100) / 10);
"510
[e ( _send_char (1 -> + -> 48 `ui / % _temp -> -> 100 `i `ui -> -> 10 `i `ui `uc ]
[; ;PR22.c: 511: send_char('0' + (temp % 10));
"511
[e ( _send_char (1 -> + -> 48 `ui % _temp -> -> 10 `i `ui `uc ]
[; ;PR22.c: 512: send_char('.');
"512
[e ( _send_char (1 -> -> 46 `ui `uc ]
[; ;PR22.c: 513: temp = pressure % 1000;
"513
[e = _temp -> % _pressure -> -> -> 1000 `i `l `ul `ui ]
[; ;PR22.c: 514: send_char('0' + temp / 100);
"514
[e ( _send_char (1 -> + -> 48 `ui / _temp -> -> 100 `i `ui `uc ]
[; ;PR22.c: 515: send_char('0' + (temp % 100) / 10);
"515
[e ( _send_char (1 -> + -> 48 `ui / % _temp -> -> 100 `i `ui -> -> 10 `i `ui `uc ]
[; ;PR22.c: 516: send_char('0' + (temp % 10));
"516
[e ( _send_char (1 -> + -> 48 `ui % _temp -> -> 10 `i `ui `uc ]
[; ;PR22.c: 517: send_string("kPa");
"517
[e ( _send_string (1 :s 27C ]
[; ;PR22.c: 520: lcd_goto(26);
"520
[e ( _lcd_goto (1 -> -> 26 `i `uc ]
[; ;PR22.c: 521: temperature = temperature_raw >> 1;
"521
[e = _temperature >> _temperature_raw -> 1 `i ]
[; ;PR22.c: 523: if(temperature & 0x1000)
"523
[e $ ! != & _temperature -> -> 4096 `i `ui -> -> 0 `i `ui 245  ]
[; ;PR22.c: 524: {
"524
{
[; ;PR22.c: 525: temperature = (~temperature) + 1;
"525
[e = _temperature + ~ _temperature -> -> 1 `i `ui ]
[; ;PR22.c: 526: send_char('-');
"526
[e ( _send_char (1 -> -> 45 `ui `uc ]
"527
}
[; ;PR22.c: 527: }
[e $U 246  ]
"528
[e :U 245 ]
[; ;PR22.c: 528: else
[; ;PR22.c: 529: send_char('+');
"529
[e ( _send_char (1 -> -> 43 `ui `uc ]
[e :U 246 ]
[; ;PR22.c: 532: send_char('0' + temperature / 1000);
"532
[e ( _send_char (1 -> + -> 48 `ui / _temperature -> -> 1000 `i `ui `uc ]
[; ;PR22.c: 533: send_char('0' + (temperature % 1000) / 100);
"533
[e ( _send_char (1 -> + -> 48 `ui / % _temperature -> -> 1000 `i `ui -> -> 100 `i `ui `uc ]
[; ;PR22.c: 534: send_char('0' + (temperature % 100) / 10);
"534
[e ( _send_char (1 -> + -> 48 `ui / % _temperature -> -> 100 `i `ui -> -> 10 `i `ui `uc ]
[; ;PR22.c: 535: send_char('.');
"535
[e ( _send_char (1 -> -> 46 `ui `uc ]
[; ;PR22.c: 536: send_char('0' + temperature % 10);
"536
[e ( _send_char (1 -> + -> 48 `ui % _temperature -> -> 10 `i `ui `uc ]
[; ;PR22.c: 537: send_char('C');
"537
[e ( _send_char (1 -> -> 67 `ui `uc ]
"538
}
[e :U 239 ]
"488
[e $ _RA2 240  ]
[e :U 241 ]
[; ;PR22.c: 538: }
[; ;PR22.c: 540: delay(10000);
"540
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 541: while(!RA2);
"541
[e $U 247  ]
[e :U 248 ]
[e :U 247 ]
[e $ ! _RA2 248  ]
[e :U 249 ]
[; ;PR22.c: 542: spi_baro(0x03, 0, 0);
"542
[e ( _spi_baro (3 , , -> -> 3 `i `uc -> -> 0 `i `uc -> -> 0 `i `ui ]
[; ;PR22.c: 543: delay(10000);
"543
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR22.c: 544: }
"544
[e :UE 238 ]
}
"547
[v _delay `(v ~T0 1 ef1`ul ]
{
[; ;PR22.c: 546: void delay(unsigned long data)
[; ;PR22.c: 547: {
[e :U _delay ]
[v _data `ul ~T0 1 r1 ]
[f ]
[; ;PR22.c: 548: for( ;data>0;data--);
"548
{
[e $ > _data -> -> -> 0 `i `l `ul 251  ]
[e $U 252  ]
[e :U 251 ]
[e -- _data -> -> -> 1 `i `l `ul ]
[e $ > _data -> -> -> 0 `i `l `ul 251  ]
[e :U 252 ]
}
[; ;PR22.c: 549: }
"549
[e :UE 250 ]
}
"552
[v _send_config `(v ~T0 1 ef1`uc ]
{
[; ;PR22.c: 551: void send_config(unsigned char data)
[; ;PR22.c: 552: {
[e :U _send_config ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR22.c: 553: RC0=0;
"553
[e = _RC0 -> -> 0 `i `b ]
[; ;PR22.c: 554: PORTB=data;
"554
[e = _PORTB _data ]
[; ;PR22.c: 555: RA5=1;
"555
[e = _RA5 -> -> 1 `i `b ]
[; ;PR22.c: 556: delay(50);
"556
[e ( _delay (1 -> -> -> 50 `i `l `ul ]
[; ;PR22.c: 557: RA5=0;
"557
[e = _RA5 -> -> 0 `i `b ]
[; ;PR22.c: 558: delay(50);
"558
[e ( _delay (1 -> -> -> 50 `i `l `ul ]
[; ;PR22.c: 559: }
"559
[e :UE 254 ]
}
"562
[v _send_char `(v ~T0 1 ef1`uc ]
{
[; ;PR22.c: 561: void send_char(unsigned char data)
[; ;PR22.c: 562: {
[e :U _send_char ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR22.c: 563: RC0=1;
"563
[e = _RC0 -> -> 1 `i `b ]
[; ;PR22.c: 564: PORTB=data;
"564
[e = _PORTB _data ]
[; ;PR22.c: 565: RA5=1;
"565
[e = _RA5 -> -> 1 `i `b ]
[; ;PR22.c: 566: delay(10);
"566
[e ( _delay (1 -> -> -> 10 `i `l `ul ]
[; ;PR22.c: 567: RA5=0;
"567
[e = _RA5 -> -> 0 `i `b ]
[; ;PR22.c: 568: delay(10);
"568
[e ( _delay (1 -> -> -> 10 `i `l `ul ]
[; ;PR22.c: 569: }
"569
[e :UE 255 ]
}
"572
[v _lcd_goto `(v ~T0 1 ef1`uc ]
{
[; ;PR22.c: 571: void lcd_goto(unsigned char data)
[; ;PR22.c: 572: {
[e :U _lcd_goto ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR22.c: 573: if(data<16)
"573
[e $ ! < -> _data `i -> 16 `i 257  ]
[; ;PR22.c: 574: {
"574
{
[; ;PR22.c: 575: send_config(0x80+data);
"575
[e ( _send_config (1 -> + -> 128 `i -> _data `i `uc ]
"576
}
[; ;PR22.c: 576: }
[e $U 258  ]
"577
[e :U 257 ]
[; ;PR22.c: 577: else
[; ;PR22.c: 578: {
"578
{
[; ;PR22.c: 579: data=data-20;
"579
[e = _data -> - -> _data `i -> 20 `i `uc ]
[; ;PR22.c: 580: send_config(0xc0+data);
"580
[e ( _send_config (1 -> + -> 192 `i -> _data `i `uc ]
"581
}
[e :U 258 ]
[; ;PR22.c: 581: }
[; ;PR22.c: 582: }
"582
[e :UE 256 ]
}
"585
[v _lcd_clr `(v ~T0 1 ef ]
{
[; ;PR22.c: 584: void lcd_clr(void)
[; ;PR22.c: 585: {
[e :U _lcd_clr ]
[f ]
[; ;PR22.c: 586: send_config(0x01);
"586
[e ( _send_config (1 -> -> 1 `i `uc ]
[; ;PR22.c: 587: delay(600);
"587
[e ( _delay (1 -> -> -> 600 `i `l `ul ]
[; ;PR22.c: 588: }
"588
[e :UE 259 ]
}
"591
[v _send_string `(v ~T0 1 ef1`*Cuc ]
{
[; ;PR22.c: 590: void send_string(const char *s)
[; ;PR22.c: 591: {
[e :U _send_string ]
[v _s `*Cuc ~T0 1 r1 ]
[f ]
[; ;PR22.c: 592: while (s && *s)send_char (*s++);
"592
[e $U 261  ]
[e :U 262 ]
[e ( _send_char (1 *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e :U 261 ]
[e $ && != _s -> -> 0 `i `*Cuc != -> *U _s `i -> -> -> 0 `i `Cuc `i 262  ]
[e :U 263 ]
[; ;PR22.c: 593: }
"593
[e :UE 260 ]
}
"596
[v _i2c_start `(v ~T0 1 ef3`uc`uc`ui ]
{
[; ;PR22.c: 595: void i2c_start(unsigned char address, unsigned char size, unsigned operation)
[; ;PR22.c: 596: {
[e :U _i2c_start ]
[v _address `uc ~T0 1 r1 ]
[v _size `uc ~T0 1 r2 ]
[v _operation `ui ~T0 1 r3 ]
[f ]
"597
[v _i `uc ~T0 1 a ]
[; ;PR22.c: 597: unsigned char i;
[; ;PR22.c: 599: SEN = 1;
"599
[e = _SEN -> -> 1 `i `b ]
[; ;PR22.c: 600: while(!SSPIF);
"600
[e $U 265  ]
[e :U 266 ]
[e :U 265 ]
[e $ ! _SSPIF 266  ]
[e :U 267 ]
[; ;PR22.c: 601: SSPIF = 0;
"601
[e = _SSPIF -> -> 0 `i `b ]
[; ;PR22.c: 602: SSPBUF = address + operation;
"602
[e = _SSPBUF -> + -> _address `ui _operation `uc ]
[; ;PR22.c: 603: while(!SSPIF);
"603
[e $U 268  ]
[e :U 269 ]
[e :U 268 ]
[e $ ! _SSPIF 269  ]
[e :U 270 ]
[; ;PR22.c: 604: SSPIF = 0;
"604
[e = _SSPIF -> -> 0 `i `b ]
[; ;PR22.c: 605: if(operation == 0)
"605
[e $ ! == _operation -> -> 0 `i `ui 271  ]
[; ;PR22.c: 606: {
"606
{
[; ;PR22.c: 607: for(i = 0; i < size; i++)
"607
{
[e = _i -> -> 0 `i `uc ]
[e $U 275  ]
"608
[e :U 272 ]
[; ;PR22.c: 608: {
{
[; ;PR22.c: 609: SSPBUF = i2c_master_data[i];
"609
[e = _SSPBUF *U + &U _i2c_master_data * -> _i `ux -> -> # *U &U _i2c_master_data `ui `ux ]
[; ;PR22.c: 610: while(!SSPIF);
"610
[e $U 276  ]
[e :U 277 ]
[e :U 276 ]
[e $ ! _SSPIF 277  ]
[e :U 278 ]
[; ;PR22.c: 611: SSPIF = 0;
"611
[e = _SSPIF -> -> 0 `i `b ]
"612
}
"607
[e ++ _i -> -> 1 `i `uc ]
[e :U 275 ]
[e $ < -> _i `i -> _size `i 272  ]
[e :U 273 ]
"612
}
[; ;PR22.c: 612: }
[; ;PR22.c: 613: PEN = 1;
"613
[e = _PEN -> -> 1 `i `b ]
[; ;PR22.c: 614: while(!SSPIF);
"614
[e $U 279  ]
[e :U 280 ]
[e :U 279 ]
[e $ ! _SSPIF 280  ]
[e :U 281 ]
[; ;PR22.c: 615: SSPIF = 0;
"615
[e = _SSPIF -> -> 0 `i `b ]
"616
}
[; ;PR22.c: 616: }
[e $U 282  ]
"617
[e :U 271 ]
[; ;PR22.c: 617: else if(operation == 1)
[e $ ! == _operation -> -> 1 `i `ui 283  ]
[; ;PR22.c: 618: {
"618
{
[; ;PR22.c: 619: for(i = 0; i < size; i++)
"619
{
[e = _i -> -> 0 `i `uc ]
[e $U 287  ]
"620
[e :U 284 ]
[; ;PR22.c: 620: {
{
[; ;PR22.c: 621: RCEN = 1;
"621
[e = _RCEN -> -> 1 `i `b ]
[; ;PR22.c: 622: while(!SSPIF);
"622
[e $U 288  ]
[e :U 289 ]
[e :U 288 ]
[e $ ! _SSPIF 289  ]
[e :U 290 ]
[; ;PR22.c: 623: SSPIF = 0;
"623
[e = _SSPIF -> -> 0 `i `b ]
[; ;PR22.c: 624: i2c_master_rcvb[i] = SSPBUF;
"624
[e = *U + &U _i2c_master_rcvb * -> _i `ux -> -> # *U &U _i2c_master_rcvb `ui `ux _SSPBUF ]
[; ;PR22.c: 625: if(i == (size - 1))
"625
[e $ ! == -> _i `i - -> _size `i -> 1 `i 291  ]
[; ;PR22.c: 626: ACKDT = 1;
"626
[e = _ACKDT -> -> 1 `i `b ]
[e $U 292  ]
"627
[e :U 291 ]
[; ;PR22.c: 627: else
[; ;PR22.c: 628: ACKDT = 0;
"628
[e = _ACKDT -> -> 0 `i `b ]
[e :U 292 ]
[; ;PR22.c: 629: ACKEN = 1;
"629
[e = _ACKEN -> -> 1 `i `b ]
[; ;PR22.c: 630: while(!SSPIF);
"630
[e $U 293  ]
[e :U 294 ]
[e :U 293 ]
[e $ ! _SSPIF 294  ]
[e :U 295 ]
[; ;PR22.c: 631: SSPIF = 0;
"631
[e = _SSPIF -> -> 0 `i `b ]
"632
}
"619
[e ++ _i -> -> 1 `i `uc ]
[e :U 287 ]
[e $ < -> _i `i -> _size `i 284  ]
[e :U 285 ]
"632
}
[; ;PR22.c: 632: }
[; ;PR22.c: 633: PEN = 1;
"633
[e = _PEN -> -> 1 `i `b ]
[; ;PR22.c: 634: while(!SSPIF);
"634
[e $U 296  ]
[e :U 297 ]
[e :U 296 ]
[e $ ! _SSPIF 297  ]
[e :U 298 ]
[; ;PR22.c: 635: SSPIF = 0;
"635
[e = _SSPIF -> -> 0 `i `b ]
"636
}
[e :U 283 ]
"637
[e :U 282 ]
[; ;PR22.c: 636: }
[; ;PR22.c: 637: }
[e :UE 264 ]
}
"640
[v _spi_baro `(v ~T0 1 ef3`uc`uc`ui ]
{
[; ;PR22.c: 639: void spi_baro(unsigned char register_address, unsigned char data, unsigned operation)
[; ;PR22.c: 640: {
[e :U _spi_baro ]
[v _register_address `uc ~T0 1 r1 ]
[v _data `uc ~T0 1 r2 ]
[v _operation `ui ~T0 1 r3 ]
[f ]
[; ;PR22.c: 641: RA3 = 0;
"641
[e = _RA3 -> -> 0 `i `b ]
[; ;PR22.c: 642: spi_start(((register_address << 1) + !operation) << 1);
"642
[e ( _spi_start (1 -> << + << -> _register_address `i -> 1 `i -> ! != _operation -> -> 0 `i `ui `i -> 1 `i `uc ]
[; ;PR22.c: 644: if(operation == 0)
"644
[e $ ! == _operation -> -> 0 `i `ui 300  ]
[; ;PR22.c: 645: spi_start(data);
"645
[e ( _spi_start (1 _data ]
[e $U 301  ]
"646
[e :U 300 ]
[; ;PR22.c: 646: else
[; ;PR22.c: 647: {
"647
{
[; ;PR22.c: 649: spi_baro_rcvb[0] = spi_start(0);
"649
[e = *U + &U _spi_baro_rcvb * -> -> -> 0 `i `ui `ux -> -> # *U &U _spi_baro_rcvb `ui `ux ( _spi_start (1 -> -> 0 `i `uc ]
[; ;PR22.c: 651: if((register_address == 0x20) || (register_address == 0x21))
"651
[e $ ! || == -> _register_address `i -> 32 `i == -> _register_address `i -> 33 `i 302  ]
[; ;PR22.c: 653: spi_baro_rcvb[1] = spi_start(0);
"653
[e = *U + &U _spi_baro_rcvb * -> -> -> 1 `i `ui `ux -> -> # *U &U _spi_baro_rcvb `ui `ux ( _spi_start (1 -> -> 0 `i `uc ]
[e :U 302 ]
"654
}
[e :U 301 ]
[; ;PR22.c: 654: }
[; ;PR22.c: 655: RA3 = 1;
"655
[e = _RA3 -> -> 1 `i `b ]
[; ;PR22.c: 656: }
"656
[e :UE 299 ]
}
"659
[v _spi_start `(uc ~T0 1 ef1`uc ]
{
[; ;PR22.c: 658: unsigned char spi_start(unsigned char data)
[; ;PR22.c: 659: {
[e :U _spi_start ]
[v _data `uc ~T0 1 r1 ]
[f ]
"660
[v _rcvb `uc ~T0 1 a ]
[; ;PR22.c: 660: unsigned char rcvb = 0;
[e = _rcvb -> -> 0 `i `uc ]
"661
[v _i `uc ~T0 1 a ]
[; ;PR22.c: 661: unsigned char i;
[; ;PR22.c: 663: for(i = 0; i < 8; i ++)
"663
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 304  ]
[e $U 305  ]
"664
[e :U 304 ]
[; ;PR22.c: 664: {
{
[; ;PR22.c: 665: RC6 = 0;
"665
[e = _RC6 -> -> 0 `i `b ]
[; ;PR22.c: 666: delay(100);
"666
[e ( _delay (1 -> -> -> 100 `i `l `ul ]
[; ;PR22.c: 667: RC7 = (data & 0x80)? 1: 0;
"667
[e = _RC7 -> ? != & -> _data `i -> 128 `i -> 0 `i : -> 1 `i -> 0 `i `b ]
[; ;PR22.c: 668: rcvb += RC5;
"668
[e =+ _rcvb -> -> _RC5 `i `uc ]
[; ;PR22.c: 669: data <<= 1;
"669
[e =<< _data -> 1 `i ]
[; ;PR22.c: 670: if(i < 7)
"670
[e $ ! < -> _i `i -> 7 `i 307  ]
[; ;PR22.c: 671: rcvb <<= 1;
"671
[e =<< _rcvb -> 1 `i ]
[e :U 307 ]
[; ;PR22.c: 672: RC6 = 1;
"672
[e = _RC6 -> -> 1 `i `b ]
[; ;PR22.c: 673: delay(100);
"673
[e ( _delay (1 -> -> -> 100 `i `l `ul ]
"674
}
"663
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 304  ]
[e :U 305 ]
"674
}
[; ;PR22.c: 674: }
[; ;PR22.c: 675: return rcvb;
"675
[e ) _rcvb ]
[e $UE 303  ]
[; ;PR22.c: 676: }
"676
[e :UE 303 ]
}
[a 14C 69 120 105 116 0 ]
[a 16C 69 120 105 116 0 ]
[a 20C 67 97 108 105 98 114 97 116 105 111 110 32 70 97 105 108 0 ]
[a 17C 68 111 110 101 0 ]
[a 18C 68 111 110 101 0 ]
[a 23C 83 97 116 117 114 97 116 101 100 0 ]
[a 27C 107 80 97 0 ]
[a 4C 79 75 0 ]
[a 8C 79 75 0 ]
[a 9C 72 101 97 100 105 110 103 32 79 117 116 112 117 116 63 0 ]
[a 3C 83 101 110 115 111 114 58 0 ]
[a 13C 72 101 97 100 105 110 103 58 0 ]
[a 21C 67 97 112 46 58 0 ]
[a 22C 84 101 109 46 58 0 ]
[a 26C 84 101 109 46 58 0 ]
[a 25C 80 114 101 46 58 0 ]
[a 5C 72 77 67 54 51 53 50 0 ]
[a 2C 80 82 50 50 0 ]
[a 7C 83 67 80 49 48 48 48 0 ]
[a 1C 67 121 116 114 111 110 32 84 101 99 104 46 0 ]
[a 15C 67 97 108 105 98 114 97 116 105 110 103 46 46 46 0 ]
[a 6C 65 68 55 55 52 54 32 0 ]
[a 24C 112 70 32 32 0 ]
[a 11C 82 101 115 101 116 32 79 102 102 115 101 116 63 32 32 0 ]
[a 19C 67 97 108 105 98 114 97 116 105 110 103 46 46 46 32 32 0 ]
[a 10C 67 97 108 105 98 114 97 116 105 111 110 63 32 32 32 0 ]
[a 12C 69 120 105 116 63 32 32 32 32 32 32 32 32 32 32 0 ]
