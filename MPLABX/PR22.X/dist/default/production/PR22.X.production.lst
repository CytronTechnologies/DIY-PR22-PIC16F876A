

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jul 21 10:58:05 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  000D                     	;# 
    42  000E                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0013                     	;# 
    49  0014                     	;# 
    50  0015                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0017                     	;# 
    54  0018                     	;# 
    55  0019                     	;# 
    56  001A                     	;# 
    57  001B                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  001D                     	;# 
    61  001E                     	;# 
    62  001F                     	;# 
    63  0081                     	;# 
    64  0085                     	;# 
    65  0086                     	;# 
    66  0087                     	;# 
    67  008C                     	;# 
    68  008D                     	;# 
    69  008E                     	;# 
    70  0091                     	;# 
    71  0092                     	;# 
    72  0093                     	;# 
    73  0094                     	;# 
    74  0098                     	;# 
    75  0099                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  009F                     	;# 
    80  010C                     	;# 
    81  010D                     	;# 
    82  010E                     	;# 
    83  010F                     	;# 
    84  018C                     	;# 
    85  018D                     	;# 
    86  0017                     _CCP1CON	set	23
    87  001D                     _CCP2CON	set	29
    88  0015                     _CCPR1L	set	21
    89  001B                     _CCPR2L	set	27
    90  0006                     _PORTB	set	6
    91  0013                     _SSPBUF	set	19
    92  0014                     _SSPCON	set	20
    93  0012                     _T2CON	set	18
    94  0028                     _RA0	set	40
    95  0029                     _RA1	set	41
    96  002A                     _RA2	set	42
    97  002B                     _RA3	set	43
    98  002D                     _RA5	set	45
    99  0038                     _RC0	set	56
   100  003D                     _RC5	set	61
   101  003E                     _RC6	set	62
   102  003F                     _RC7	set	63
   103  0063                     _SSPIF	set	99
   104  009F                     _ADCON1	set	159
   105  0092                     _PR2	set	146
   106  0093                     _SSPADD	set	147
   107  0091                     _SSPCON2	set	145
   108  0094                     _SSPSTAT	set	148
   109  0085                     _TRISA	set	133
   110  0086                     _TRISB	set	134
   111  0087                     _TRISC	set	135
   112  048D                     _ACKDT	set	1165
   113  048C                     _ACKEN	set	1164
   114  048A                     _PEN	set	1162
   115  048B                     _RCEN	set	1163
   116  0488                     _SEN	set	1160
   117                           
   118                           	psect	strings
   119  0003                     __pstrings:	
   120  0003                     stringtab:	
   121  0003                     __stringtab:	
   122  0003                     stringcode:	
   123                           ;	String table - string pointers are 1 byte each
   124                           
   125  0003                     stringdir:	
   126  0003  3000               	movlw	high stringdir
   127  0004  008A               	movwf	10
   128  0005  0804               	movf	4,w
   129  0006  0A84               	incf	4,f
   130  0007  0782               	addwf	2,f
   131  0008                     __stringbase:	
   132  0008  3400               	retlw	0
   133  0009                     __end_of__stringtab:	
   134  0009                     STR_19:	
   135  0009  3443               	retlw	67	;'C'
   136  000A  3461               	retlw	97	;'a'
   137  000B  346C               	retlw	108	;'l'
   138  000C  3469               	retlw	105	;'i'
   139  000D  3462               	retlw	98	;'b'
   140  000E  3472               	retlw	114	;'r'
   141  000F  3461               	retlw	97	;'a'
   142  0010  3474               	retlw	116	;'t'
   143  0011  3469               	retlw	105	;'i'
   144  0012  346E               	retlw	110	;'n'
   145  0013  3467               	retlw	103	;'g'
   146  0014  342E               	retlw	46	;'.'
   147  0015  342E               	retlw	46	;'.'
   148  0016  342E               	retlw	46	;'.'
   149  0017  3420               	retlw	32	;' '
   150  0018  3420               	retlw	32	;' '
   151  0019  3400               	retlw	0
   152  001A                     STR_20:	
   153  001A  3443               	retlw	67	;'C'
   154  001B  3461               	retlw	97	;'a'
   155  001C  346C               	retlw	108	;'l'
   156  001D  3469               	retlw	105	;'i'
   157  001E  3462               	retlw	98	;'b'
   158  001F  3472               	retlw	114	;'r'
   159  0020  3461               	retlw	97	;'a'
   160  0021  3474               	retlw	116	;'t'
   161  0022  3469               	retlw	105	;'i'
   162  0023  346F               	retlw	111	;'o'
   163  0024  346E               	retlw	110	;'n'
   164  0025  3420               	retlw	32	;' '
   165  0026  3446               	retlw	70	;'F'
   166  0027  3461               	retlw	97	;'a'
   167  0028  3469               	retlw	105	;'i'
   168  0029  346C               	retlw	108	;'l'
   169  002A  3400               	retlw	0
   170  002B                     STR_12:	
   171  002B  3445               	retlw	69	;'E'
   172  002C  3478               	retlw	120	;'x'
   173  002D  3469               	retlw	105	;'i'
   174  002E  3474               	retlw	116	;'t'
   175  002F  343F               	retlw	63	;'?'
   176  0030  3420               	retlw	32	;' '
   177  0031  3420               	retlw	32	;' '
   178  0032  3420               	retlw	32	;' '
   179  0033  3420               	retlw	32	;' '
   180  0034  3420               	retlw	32	;' '
   181  0035  3420               	retlw	32	;' '
   182  0036  3420               	retlw	32	;' '
   183  0037  3420               	retlw	32	;' '
   184  0038  3420               	retlw	32	;' '
   185  0039  3420               	retlw	32	;' '
   186  003A  3400               	retlw	0
   187  003B                     STR_10:	
   188  003B  3443               	retlw	67	;'C'
   189  003C  3461               	retlw	97	;'a'
   190  003D  346C               	retlw	108	;'l'
   191  003E  3469               	retlw	105	;'i'
   192  003F  3462               	retlw	98	;'b'
   193  0040  3472               	retlw	114	;'r'
   194  0041  3461               	retlw	97	;'a'
   195  0042  3474               	retlw	116	;'t'
   196  0043  3469               	retlw	105	;'i'
   197  0044  346F               	retlw	111	;'o'
   198  0045  346E               	retlw	110	;'n'
   199  0046  343F               	retlw	63	;'?'
   200  0047  3420               	retlw	32	;' '
   201  0048  3420               	retlw	32	;' '
   202  0049  3420               	retlw	32	;' '
   203  004A  3400               	retlw	0
   204  004B                     STR_11:	
   205  004B  3452               	retlw	82	;'R'
   206  004C  3465               	retlw	101	;'e'
   207  004D  3473               	retlw	115	;'s'
   208  004E  3465               	retlw	101	;'e'
   209  004F  3474               	retlw	116	;'t'
   210  0050  3420               	retlw	32	;' '
   211  0051  344F               	retlw	79	;'O'
   212  0052  3466               	retlw	102	;'f'
   213  0053  3466               	retlw	102	;'f'
   214  0054  3473               	retlw	115	;'s'
   215  0055  3465               	retlw	101	;'e'
   216  0056  3474               	retlw	116	;'t'
   217  0057  343F               	retlw	63	;'?'
   218  0058  3420               	retlw	32	;' '
   219  0059  3420               	retlw	32	;' '
   220  005A  3400               	retlw	0
   221  005B                     STR_9:	
   222  005B  3448               	retlw	72	;'H'
   223  005C  3465               	retlw	101	;'e'
   224  005D  3461               	retlw	97	;'a'
   225  005E  3464               	retlw	100	;'d'
   226  005F  3469               	retlw	105	;'i'
   227  0060  346E               	retlw	110	;'n'
   228  0061  3467               	retlw	103	;'g'
   229  0062  3420               	retlw	32	;' '
   230  0063  344F               	retlw	79	;'O'
   231  0064  3475               	retlw	117	;'u'
   232  0065  3474               	retlw	116	;'t'
   233  0066  3470               	retlw	112	;'p'
   234  0067  3475               	retlw	117	;'u'
   235  0068  3474               	retlw	116	;'t'
   236  0069  343F               	retlw	63	;'?'
   237  006A  3400               	retlw	0
   238  006B                     STR_15:	
   239  006B  3443               	retlw	67	;'C'
   240  006C  3461               	retlw	97	;'a'
   241  006D  346C               	retlw	108	;'l'
   242  006E  3469               	retlw	105	;'i'
   243  006F  3462               	retlw	98	;'b'
   244  0070  3472               	retlw	114	;'r'
   245  0071  3461               	retlw	97	;'a'
   246  0072  3474               	retlw	116	;'t'
   247  0073  3469               	retlw	105	;'i'
   248  0074  346E               	retlw	110	;'n'
   249  0075  3467               	retlw	103	;'g'
   250  0076  342E               	retlw	46	;'.'
   251  0077  342E               	retlw	46	;'.'
   252  0078  342E               	retlw	46	;'.'
   253  0079  3400               	retlw	0
   254  007A                     STR_1:	
   255  007A  3443               	retlw	67	;'C'
   256  007B  3479               	retlw	121	;'y'
   257  007C  3474               	retlw	116	;'t'
   258  007D  3472               	retlw	114	;'r'
   259  007E  346F               	retlw	111	;'o'
   260  007F  346E               	retlw	110	;'n'
   261  0080  3420               	retlw	32	;' '
   262  0081  3454               	retlw	84	;'T'
   263  0082  3465               	retlw	101	;'e'
   264  0083  3463               	retlw	99	;'c'
   265  0084  3468               	retlw	104	;'h'
   266  0085  342E               	retlw	46	;'.'
   267  0086  3400               	retlw	0
   268  0087                     STR_23:	
   269  0087  3453               	retlw	83	;'S'
   270  0088  3461               	retlw	97	;'a'
   271  0089  3474               	retlw	116	;'t'
   272  008A  3475               	retlw	117	;'u'
   273  008B  3472               	retlw	114	;'r'
   274  008C  3461               	retlw	97	;'a'
   275  008D  3474               	retlw	116	;'t'
   276  008E  3465               	retlw	101	;'e'
   277  008F  3464               	retlw	100	;'d'
   278  0090  3400               	retlw	0
   279  0091                     STR_13:	
   280  0091  3448               	retlw	72	;'H'
   281  0092  3465               	retlw	101	;'e'
   282  0093  3461               	retlw	97	;'a'
   283  0094  3464               	retlw	100	;'d'
   284  0095  3469               	retlw	105	;'i'
   285  0096  346E               	retlw	110	;'n'
   286  0097  3467               	retlw	103	;'g'
   287  0098  343A               	retlw	58	;':'
   288  0099  3400               	retlw	0
   289  009A                     STR_6:	
   290  009A  3441               	retlw	65	;'A'
   291  009B  3444               	retlw	68	;'D'
   292  009C  3437               	retlw	55	;'7'
   293  009D  3437               	retlw	55	;'7'
   294  009E  3434               	retlw	52	;'4'
   295  009F  3436               	retlw	54	;'6'
   296  00A0  3420               	retlw	32	;' '
   297  00A1  3400               	retlw	0
   298  00A2                     STR_7:	
   299  00A2  3453               	retlw	83	;'S'
   300  00A3  3443               	retlw	67	;'C'
   301  00A4  3450               	retlw	80	;'P'
   302  00A5  3431               	retlw	49	;'1'
   303  00A6  3430               	retlw	48	;'0'
   304  00A7  3430               	retlw	48	;'0'
   305  00A8  3430               	retlw	48	;'0'
   306  00A9  3400               	retlw	0
   307  00AA                     STR_5:	
   308  00AA  3448               	retlw	72	;'H'
   309  00AB  344D               	retlw	77	;'M'
   310  00AC  3443               	retlw	67	;'C'
   311  00AD  3436               	retlw	54	;'6'
   312  00AE  3433               	retlw	51	;'3'
   313  00AF  3435               	retlw	53	;'5'
   314  00B0  3432               	retlw	50	;'2'
   315  00B1  3400               	retlw	0
   316  00B2                     STR_3:	
   317  00B2  3453               	retlw	83	;'S'
   318  00B3  3465               	retlw	101	;'e'
   319  00B4  346E               	retlw	110	;'n'
   320  00B5  3473               	retlw	115	;'s'
   321  00B6  346F               	retlw	111	;'o'
   322  00B7  3472               	retlw	114	;'r'
   323  00B8  343A               	retlw	58	;':'
   324  00B9  3400               	retlw	0
   325  00BA                     STR_25:	
   326  00BA  3450               	retlw	80	;'P'
   327  00BB  3472               	retlw	114	;'r'
   328  00BC  3465               	retlw	101	;'e'
   329  00BD  342E               	retlw	46	;'.'
   330  00BE  343A               	retlw	58	;':'
   331  00BF  3400               	retlw	0
   332  00C0                     STR_22:	
   333  00C0  3454               	retlw	84	;'T'
   334  00C1  3465               	retlw	101	;'e'
   335  00C2  346D               	retlw	109	;'m'
   336  00C3  342E               	retlw	46	;'.'
   337  00C4  343A               	retlw	58	;':'
   338  00C5  3400               	retlw	0
   339  00C6                     STR_21:	
   340  00C6  3443               	retlw	67	;'C'
   341  00C7  3461               	retlw	97	;'a'
   342  00C8  3470               	retlw	112	;'p'
   343  00C9  342E               	retlw	46	;'.'
   344  00CA  343A               	retlw	58	;':'
   345  00CB  3400               	retlw	0
   346  00CC                     STR_24:	
   347  00CC  3470               	retlw	112	;'p'
   348  00CD  3446               	retlw	70	;'F'
   349  00CE  3420               	retlw	32	;' '
   350  00CF  3420               	retlw	32	;' '
   351  00D0  3400               	retlw	0
   352  00D1                     STR_2:	
   353  00D1  3450               	retlw	80	;'P'
   354  00D2  3452               	retlw	82	;'R'
   355  00D3  3432               	retlw	50	;'2'
   356  00D4  3432               	retlw	50	;'2'
   357  00D5  3400               	retlw	0
   358  00D6                     STR_17:	
   359  00D6  3444               	retlw	68	;'D'
   360  00D7  346F               	retlw	111	;'o'
   361  00D8  346E               	retlw	110	;'n'
   362  00D9  3465               	retlw	101	;'e'
   363  00DA  3400               	retlw	0
   364  00DB                     STR_14:	
   365  00DB  3445               	retlw	69	;'E'
   366  00DC  3478               	retlw	120	;'x'
   367  00DD  3469               	retlw	105	;'i'
   368  00DE  3474               	retlw	116	;'t'
   369  00DF  3400               	retlw	0
   370  00E0                     STR_27:	
   371  00E0  346B               	retlw	107	;'k'
   372  00E1  3450               	retlw	80	;'P'
   373  00E2  3461               	retlw	97	;'a'
   374  00E3  3400               	retlw	0
   375  00E4                     STR_4:	
   376  00E4  344F               	retlw	79	;'O'
   377  00E5  344B               	retlw	75	;'K'
   378  00E6  3400               	retlw	0
   379  00C0                     
   380                           ; #config settings
   381  0000                     
   382                           	psect	cinit
   383  07F5                     start_initialization:	
   384  07F5                     __initialization:	
   385                           
   386                           ; Clear objects allocated to BANK0
   387  07F5  1383               	bcf	3,7	;select IRP bank0
   388  07F6  3037               	movlw	low __pbssBANK0
   389  07F7  0084               	movwf	4
   390  07F8  3048               	movlw	low (__pbssBANK0+17)
   391  07F9  120A  158A  226F   	fcall	clear_ram0
   392  07FC                     end_of_initialization:	
   393                           ;End of C runtime variable initialization code
   394                           
   395  07FC                     __end_of__initialization:	
   396  07FC  0183               	clrf	3
   397  07FD  120A  118A  2944   	ljmp	_main	;jump to C main() function
   398                           
   399                           	psect	bssBANK0
   400  0037                     __pbssBANK0:	
   401  0037                     _i2c_master_data:	
   402  0037                     	ds	7
   403  003E                     _i2c_master_rcvb:	
   404  003E                     	ds	7
   405  0045                     _mode:	
   406  0045                     	ds	1
   407  0046                     _spi_baro_rcvb:	
   408  0046                     	ds	2
   409                           
   410                           	psect	clrtext
   411  0A6F                     clear_ram0:	
   412                           ;	Called with FSR containing the base address, and
   413                           ;	W with the last address+1
   414                           
   415  0A6F  0064               	clrwdt	;clear the watchdog before getting into this loop
   416  0A70                     clrloop0:	
   417  0A70  0180               	clrf	0	;clear RAM location pointed to by FSR
   418  0A71  0A84               	incf	4,f	;increment pointer
   419  0A72  0604               	xorwf	4,w	;XOR with final address
   420  0A73  1903               	btfsc	3,2	;have we reached the end yet?
   421  0A74  3400               	retlw	0	;all done for this memory range, return
   422  0A75  0604               	xorwf	4,w	;XOR again to restore value
   423  0A76  2A70               	goto	clrloop0	;do the next byte
   424                           
   425                           	psect	cstackCOMMON
   426  0070                     __pcstackCOMMON:	
   427  0070                     ?_send_config:	
   428  0070                     ?_lcd_clr:	
   429                           ; 0 bytes @ 0x0
   430                           
   431  0070                     ?_lcd_goto:	
   432                           ; 0 bytes @ 0x0
   433                           
   434  0070                     ?_send_string:	
   435                           ; 0 bytes @ 0x0
   436                           
   437  0070                     ?_delay:	
   438                           ; 0 bytes @ 0x0
   439                           
   440  0070                     ?_mode1:	
   441                           ; 0 bytes @ 0x0
   442                           
   443  0070                     ?_mode2:	
   444                           ; 0 bytes @ 0x0
   445                           
   446  0070                     ?_mode3:	
   447                           ; 0 bytes @ 0x0
   448                           
   449  0070                     ?_i2c_start:	
   450                           ; 0 bytes @ 0x0
   451                           
   452  0070                     ?_send_char:	
   453                           ; 0 bytes @ 0x0
   454                           
   455  0070                     ?_main:	
   456                           ; 0 bytes @ 0x0
   457                           
   458  0070                     ?_spi_start:	
   459                           ; 0 bytes @ 0x0
   460                           
   461  0070                     ?___awmod:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?___lwmod:	
   465                           ; 2 bytes @ 0x0
   466                           
   467  0070                     ?___lldiv:	
   468                           ; 2 bytes @ 0x0
   469                           
   470  0070                     ?___llmod:	
   471                           ; 4 bytes @ 0x0
   472                           
   473  0070                     i2c_start@size:	
   474                           ; 4 bytes @ 0x0
   475                           
   476  0070                     ___awmod@divisor:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ___lwmod@divisor:	
   480                           ; 2 bytes @ 0x0
   481                           
   482  0070                     delay@data:	
   483                           ; 2 bytes @ 0x0
   484                           
   485  0070                     ___lldiv@divisor:	
   486                           ; 4 bytes @ 0x0
   487                           
   488  0070                     ___llmod@divisor:	
   489                           ; 4 bytes @ 0x0
   490                           
   491                           
   492                           ; 4 bytes @ 0x0
   493  0070                     	ds	1
   494  0071                     i2c_start@operation:	
   495                           
   496                           ; 2 bytes @ 0x1
   497  0071                     	ds	1
   498  0072                     ___awmod@dividend:	
   499  0072                     ___lwmod@dividend:	
   500                           ; 2 bytes @ 0x2
   501                           
   502                           
   503                           ; 2 bytes @ 0x2
   504  0072                     	ds	1
   505  0073                     ??_i2c_start:	
   506                           
   507                           ; 0 bytes @ 0x3
   508  0073                     	ds	1
   509  0074                     ??_delay:	
   510  0074                     ??___awmod:	
   511                           ; 0 bytes @ 0x4
   512                           
   513  0074                     ??___lwmod:	
   514                           ; 0 bytes @ 0x4
   515                           
   516  0074                     ___lldiv@dividend:	
   517                           ; 0 bytes @ 0x4
   518                           
   519  0074                     ___llmod@dividend:	
   520                           ; 4 bytes @ 0x4
   521                           
   522                           
   523                           ; 4 bytes @ 0x4
   524  0074                     	ds	1
   525  0075                     i2c_start@address:	
   526  0075                     ___awmod@counter:	
   527                           ; 1 bytes @ 0x5
   528                           
   529  0075                     ___lwmod@counter:	
   530                           ; 1 bytes @ 0x5
   531                           
   532                           
   533                           ; 1 bytes @ 0x5
   534  0075                     	ds	1
   535  0076                     ?___lwdiv:	
   536  0076                     i2c_start@i:	
   537                           ; 2 bytes @ 0x6
   538                           
   539  0076                     ___awmod@sign:	
   540                           ; 1 bytes @ 0x6
   541                           
   542  0076                     ___lwdiv@divisor:	
   543                           ; 1 bytes @ 0x6
   544                           
   545                           
   546                           ; 2 bytes @ 0x6
   547  0076                     	ds	1
   548  0077                     ?___awdiv:	
   549  0077                     ___awdiv@divisor:	
   550                           ; 2 bytes @ 0x7
   551                           
   552                           
   553                           ; 2 bytes @ 0x7
   554  0077                     	ds	1
   555  0078                     ??_send_config:	
   556  0078                     ??_send_char:	
   557                           ; 0 bytes @ 0x8
   558                           
   559  0078                     ??_spi_start:	
   560                           ; 0 bytes @ 0x8
   561                           
   562  0078                     ??___lldiv:	
   563                           ; 0 bytes @ 0x8
   564                           
   565  0078                     ??___llmod:	
   566                           ; 0 bytes @ 0x8
   567                           
   568  0078                     send_config@data:	
   569                           ; 0 bytes @ 0x8
   570                           
   571  0078                     send_char@data:	
   572                           ; 1 bytes @ 0x8
   573                           
   574  0078                     ___lwdiv@dividend:	
   575                           ; 1 bytes @ 0x8
   576                           
   577                           
   578                           ; 2 bytes @ 0x8
   579  0078                     	ds	1
   580  0079                     ??_lcd_clr:	
   581  0079                     ??_lcd_goto:	
   582                           ; 0 bytes @ 0x9
   583                           
   584  0079                     ??_send_string:	
   585                           ; 0 bytes @ 0x9
   586                           
   587  0079                     spi_start@data:	
   588                           ; 0 bytes @ 0x9
   589                           
   590  0079                     ___llmod@counter:	
   591                           ; 1 bytes @ 0x9
   592                           
   593  0079                     ___awdiv@dividend:	
   594                           ; 1 bytes @ 0x9
   595                           
   596  0079                     ___lldiv@quotient:	
   597                           ; 2 bytes @ 0x9
   598                           
   599                           
   600                           ; 4 bytes @ 0x9
   601  0079                     	ds	1
   602  007A                     ??___lwdiv:	
   603  007A                     lcd_goto@data:	
   604                           ; 0 bytes @ 0xA
   605                           
   606  007A                     send_string@s:	
   607                           ; 1 bytes @ 0xA
   608                           
   609  007A                     spi_start@rcvb:	
   610                           ; 1 bytes @ 0xA
   611                           
   612                           
   613                           ; 1 bytes @ 0xA
   614  007A                     	ds	1
   615  007B                     ??___awdiv:	
   616  007B                     spi_start@i:	
   617                           ; 0 bytes @ 0xB
   618                           
   619  007B                     ___lwdiv@quotient:	
   620                           ; 1 bytes @ 0xB
   621                           
   622                           
   623                           ; 2 bytes @ 0xB
   624  007B                     	ds	1
   625  007C                     ??_spi_baro:	
   626                           
   627                           ; 0 bytes @ 0xC
   628  007C                     	ds	1
   629  007D                     ___lldiv@counter:	
   630  007D                     ___lwdiv@counter:	
   631                           ; 1 bytes @ 0xD
   632                           
   633                           
   634                           ; 1 bytes @ 0xD
   635  007D                     	ds	1
   636                           
   637                           	psect	cstackBANK0
   638  0020                     __pcstackBANK0:	
   639  0020                     ??_mode1:	
   640  0020                     ?_spi_baro:	
   641                           ; 0 bytes @ 0x0
   642                           
   643  0020                     spi_baro@data:	
   644                           ; 0 bytes @ 0x0
   645                           
   646  0020                     ___awdiv@counter:	
   647                           ; 1 bytes @ 0x0
   648                           
   649                           
   650                           ; 1 bytes @ 0x0
   651  0020                     	ds	1
   652  0021                     ___awdiv@sign:	
   653  0021                     spi_baro@operation:	
   654                           ; 1 bytes @ 0x1
   655                           
   656                           
   657                           ; 2 bytes @ 0x1
   658  0021                     	ds	1
   659  0022                     mode1@result:	
   660  0022                     ___awdiv@quotient:	
   661                           ; 2 bytes @ 0x2
   662                           
   663                           
   664                           ; 2 bytes @ 0x2
   665  0022                     	ds	1
   666  0023                     spi_baro@register_address:	
   667                           
   668                           ; 1 bytes @ 0x3
   669  0023                     	ds	1
   670  0024                     ??_mode2:	
   671  0024                     ??_mode3:	
   672                           ; 0 bytes @ 0x4
   673                           
   674  0024                     mode1@submode:	
   675                           ; 0 bytes @ 0x4
   676                           
   677                           
   678                           ; 1 bytes @ 0x4
   679  0024                     	ds	4
   680  0028                     mode3@temperature_raw:	
   681                           
   682                           ; 2 bytes @ 0x8
   683  0028                     	ds	1
   684  0029                     mode2@capacitance_raw:	
   685                           
   686                           ; 4 bytes @ 0x9
   687  0029                     	ds	1
   688  002A                     mode3@pressure_raw:	
   689                           
   690                           ; 4 bytes @ 0xA
   691  002A                     	ds	3
   692  002D                     mode2@temperature_raw:	
   693                           
   694                           ; 4 bytes @ 0xD
   695  002D                     	ds	1
   696  002E                     mode3@pressure:	
   697                           
   698                           ; 4 bytes @ 0xE
   699  002E                     	ds	3
   700  0031                     mode2@temperature:	
   701                           
   702                           ; 1 bytes @ 0x11
   703  0031                     	ds	1
   704  0032                     mode2@i:	
   705  0032                     mode3@temp:	
   706                           ; 1 bytes @ 0x12
   707                           
   708                           
   709                           ; 2 bytes @ 0x12
   710  0032                     	ds	1
   711  0033                     mode2@capacitance:	
   712                           
   713                           ; 2 bytes @ 0x13
   714  0033                     	ds	1
   715  0034                     mode3@temperature:	
   716                           
   717                           ; 2 bytes @ 0x14
   718  0034                     	ds	2
   719  0036                     ??_main:	
   720                           
   721                           ; 0 bytes @ 0x16
   722  0036                     	ds	1
   723                           
   724                           	psect	maintext
   725  0144                     __pmaintext:	
   726 ;;
   727 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   728 ;;
   729 ;; *************** function _main *****************
   730 ;; Defined at:
   731 ;;		line 83 in file "../../Source file/PR22.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;		None               void
   738 ;; Registers used:
   739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : B00/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0
   747 ;;      Temps:          0       1       0       0       0
   748 ;;      Totals:         0       1       0       0       0
   749 ;;Total ram usage:        1 bytes
   750 ;; Hardware stack levels required when called:    4
   751 ;; This function calls:
   752 ;;		_delay
   753 ;;		_lcd_clr
   754 ;;		_lcd_goto
   755 ;;		_mode1
   756 ;;		_mode2
   757 ;;		_mode3
   758 ;;		_send_config
   759 ;;		_send_string
   760 ;; This function is called by:
   761 ;;		Startup code after reset
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _main
   767  0144                     _main:	
   768                           
   769                           ;PR22.c: 86: TRISB = 0b00000000;
   770                           
   771                           ;incstack = 0
   772                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   773  0144  1683               	bsf	3,5	;RP0=1, select bank1
   774  0145  1303               	bcf	3,6	;RP1=0, select bank1
   775  0146  0186               	clrf	6	;volatile
   776                           
   777                           ;PR22.c: 87: TRISC = 0b00111000;
   778  0147  3038               	movlw	56
   779  0148  0087               	movwf	7	;volatile
   780                           
   781                           ;PR22.c: 88: TRISA = 0b00010111;
   782  0149  3017               	movlw	23
   783  014A  0085               	movwf	5	;volatile
   784                           
   785                           ;PR22.c: 91: SSPBUF = 0;
   786  014B  1283               	bcf	3,5	;RP0=0, select bank0
   787  014C  1303               	bcf	3,6	;RP1=0, select bank0
   788  014D  0193               	clrf	19	;volatile
   789                           
   790                           ;PR22.c: 92: SSPSTAT = 0b11000000;
   791  014E  30C0               	movlw	192
   792  014F  1683               	bsf	3,5	;RP0=1, select bank1
   793  0150  1303               	bcf	3,6	;RP1=0, select bank1
   794  0151  0094               	movwf	20	;volatile
   795                           
   796                           ;PR22.c: 93: SSPCON = 0b00111000;
   797  0152  3038               	movlw	56
   798  0153  1283               	bcf	3,5	;RP0=0, select bank0
   799  0154  1303               	bcf	3,6	;RP1=0, select bank0
   800  0155  0094               	movwf	20	;volatile
   801                           
   802                           ;PR22.c: 94: SSPCON2 = 0b00000000;
   803  0156  1683               	bsf	3,5	;RP0=1, select bank1
   804  0157  1303               	bcf	3,6	;RP1=0, select bank1
   805  0158  0191               	clrf	17	;volatile
   806                           
   807                           ;PR22.c: 95: SSPADD = 0x32;
   808  0159  3032               	movlw	50
   809  015A  0093               	movwf	19	;volatile
   810                           
   811                           ;PR22.c: 96: SSPIF = 0;
   812  015B  1283               	bcf	3,5	;RP0=0, select bank0
   813  015C  1303               	bcf	3,6	;RP1=0, select bank0
   814  015D  118C               	bcf	12,3	;volatile
   815                           
   816                           ;PR22.c: 99: RC6 = 1;
   817  015E  1707               	bsf	7,6	;volatile
   818                           
   819                           ;PR22.c: 100: RC7 = 1;
   820  015F  1787               	bsf	7,7	;volatile
   821                           
   822                           ;PR22.c: 101: RA3 = 1;
   823  0160  1585               	bsf	5,3	;volatile
   824                           
   825                           ;PR22.c: 104: ADCON1 = 0b00000110;
   826  0161  3006               	movlw	6
   827  0162  1683               	bsf	3,5	;RP0=1, select bank1
   828  0163  1303               	bcf	3,6	;RP1=0, select bank1
   829  0164  009F               	movwf	31	;volatile
   830                           
   831                           ;PR22.c: 107: send_config(0b00000001);
   832  0165  3001               	movlw	1
   833  0166  120A  158A  22E1  120A  118A  	fcall	_send_config
   834                           
   835                           ;PR22.c: 108: send_config(0b00000010);
   836  016B  3002               	movlw	2
   837  016C  120A  158A  22E1  120A  118A  	fcall	_send_config
   838                           
   839                           ;PR22.c: 109: send_config(0b00000110);
   840  0171  3006               	movlw	6
   841  0172  120A  158A  22E1  120A  118A  	fcall	_send_config
   842                           
   843                           ;PR22.c: 110: send_config(0b00001100);
   844  0177  300C               	movlw	12
   845  0178  120A  158A  22E1  120A  118A  	fcall	_send_config
   846                           
   847                           ;PR22.c: 111: send_config(0b00111000);
   848  017D  3038               	movlw	56
   849  017E  120A  158A  22E1  120A  118A  	fcall	_send_config
   850                           
   851                           ;PR22.c: 114: CCP1CON = 0b00001100;
   852  0183  300C               	movlw	12
   853  0184  1283               	bcf	3,5	;RP0=0, select bank0
   854  0185  1303               	bcf	3,6	;RP1=0, select bank0
   855  0186  0097               	movwf	23	;volatile
   856                           
   857                           ;PR22.c: 115: CCP2CON = 0b00001100;
   858  0187  300C               	movlw	12
   859  0188  009D               	movwf	29	;volatile
   860                           
   861                           ;PR22.c: 116: PR2 = 0xFF;
   862  0189  30FF               	movlw	255
   863  018A  1683               	bsf	3,5	;RP0=1, select bank1
   864  018B  1303               	bcf	3,6	;RP1=0, select bank1
   865  018C  0092               	movwf	18	;volatile
   866                           
   867                           ;PR22.c: 117: T2CON = 0b00000101;
   868  018D  3005               	movlw	5
   869  018E  1283               	bcf	3,5	;RP0=0, select bank0
   870  018F  1303               	bcf	3,6	;RP1=0, select bank0
   871  0190  0092               	movwf	18	;volatile
   872                           
   873                           ;PR22.c: 118: CCPR2L = 50;
   874  0191  3032               	movlw	50
   875  0192  009B               	movwf	27	;volatile
   876                           
   877                           ;PR22.c: 119: CCPR1L = 0;
   878  0193  0195               	clrf	21	;volatile
   879                           
   880                           ;PR22.c: 122: lcd_clr();
   881  0194  120A  158A  2277  120A  118A  	fcall	_lcd_clr
   882                           
   883                           ;PR22.c: 123: lcd_goto(0);
   884  0199  3000               	movlw	0
   885  019A  120A  158A  2289  120A  118A  	fcall	_lcd_goto
   886                           
   887                           ;PR22.c: 124: send_string("Cytron Tech.");
   888  019F  3072               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   889  01A0  120A  158A  229F  120A  118A  	fcall	_send_string
   890                           
   891                           ;PR22.c: 125: lcd_goto(20);
   892  01A5  3014               	movlw	20
   893  01A6  120A  158A  2289  120A  118A  	fcall	_lcd_goto
   894                           
   895                           ;PR22.c: 126: send_string("PR22");
   896  01AB  30C9               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   897  01AC  120A  158A  229F  120A  118A  	fcall	_send_string
   898                           
   899                           ;PR22.c: 128: delay(200000);
   900  01B1  3000               	movlw	0
   901  01B2  00F3               	movwf	delay@data+3
   902  01B3  3003               	movlw	3
   903  01B4  00F2               	movwf	delay@data+2
   904  01B5  300D               	movlw	13
   905  01B6  00F1               	movwf	delay@data+1
   906  01B7  3040               	movlw	64
   907  01B8  00F0               	movwf	delay@data
   908  01B9  120A  158A  22BE  120A  118A  	fcall	_delay
   909                           
   910                           ;PR22.c: 130: mode = 1;
   911  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   912  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   913  01C0  01C5               	clrf	_mode
   914  01C1  0AC5               	incf	_mode,f
   915  01C2                     l2120:	
   916                           ;PR22.c: 132: while(1)
   917                           
   918                           
   919                           ;PR22.c: 133: {
   920                           ;PR22.c: 134: lcd_clr();
   921  01C2  120A  158A  2277  120A  118A  	fcall	_lcd_clr
   922                           
   923                           ;PR22.c: 135: lcd_goto(0);
   924  01C7  3000               	movlw	0
   925  01C8  120A  158A  2289  120A  118A  	fcall	_lcd_goto
   926                           
   927                           ;PR22.c: 136: send_string("Sensor:");
   928  01CD  30AA               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   929  01CE  120A  158A  229F  120A  118A  	fcall	_send_string
   930                           
   931                           ;PR22.c: 137: lcd_goto(20);
   932  01D3  3014               	movlw	20
   933  01D4  120A  158A  2289  120A  118A  	fcall	_lcd_goto
   934                           
   935                           ;PR22.c: 138: send_string("OK");
   936  01D9  30DC               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   937  01DA  120A  158A  229F  120A  118A  	fcall	_send_string
   938  01DF                     l2152:	
   939                           ;PR22.c: 140: while(RA2)
   940                           
   941  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   942  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   943  01E1  1D05               	btfss	5,2	;volatile
   944  01E2  2A2D               	goto	l2154
   945                           
   946                           ;PR22.c: 141: {
   947                           ;PR22.c: 142: if(!RA0)
   948  01E3  1805               	btfsc	5,0	;volatile
   949  01E4  29EC               	goto	l100
   950                           
   951                           ;PR22.c: 143: {
   952                           ;PR22.c: 145: if(mode > 1)
   953  01E5  3002               	movlw	2
   954  01E6  0245               	subwf	_mode,w
   955  01E7  1C03               	skipc
   956  01E8  29F6               	goto	l2138
   957                           
   958                           ;PR22.c: 146: mode--;
   959  01E9  3001               	movlw	1
   960  01EA  02C5               	subwf	_mode,f
   961                           
   962                           ;PR22.c: 147: }
   963  01EB  29F6               	goto	l2138
   964  01EC                     l100:	
   965                           
   966                           ;PR22.c: 148: else if(!RA1)
   967  01EC  1885               	btfsc	5,1	;volatile
   968  01ED  29F6               	goto	l2138
   969                           
   970                           ;PR22.c: 149: {
   971                           ;PR22.c: 151: if(mode < 3)
   972  01EE  3003               	movlw	3
   973  01EF  0245               	subwf	_mode,w
   974  01F0  1803               	skipnc
   975  01F1  29F6               	goto	l2138
   976                           
   977                           ;PR22.c: 152: mode++;
   978  01F2  3001               	movlw	1
   979  01F3  00B6               	movwf	??_main
   980  01F4  0836               	movf	??_main,w
   981  01F5  07C5               	addwf	_mode,f
   982  01F6                     l2138:	
   983                           
   984                           ;PR22.c: 153: }
   985                           ;PR22.c: 156: lcd_goto(8);
   986  01F6  3008               	movlw	8
   987  01F7  120A  158A  2289  120A  118A  	fcall	_lcd_goto
   988                           
   989                           ;PR22.c: 157: switch(mode)
   990  01FC  2A12               	goto	l2148
   991  01FD                     l2140:	
   992                           ;PR22.c: 158: {
   993                           ;PR22.c: 159: case 1 : send_string("HMC6352");
   994                           
   995  01FD  30A2               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   996  01FE  120A  158A  229F  120A  118A  	fcall	_send_string
   997                           
   998                           ;PR22.c: 160: break;
   999  0203  2A1F               	goto	l2150
  1000  0204                     l2142:	
  1001                           ;PR22.c: 162: case 2 : send_string("AD7746 ");
  1002                           
  1003  0204  3092               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1004  0205  120A  158A  229F  120A  118A  	fcall	_send_string
  1005                           
  1006                           ;PR22.c: 163: break;
  1007  020A  2A1F               	goto	l2150
  1008  020B                     l2144:	
  1009                           ;PR22.c: 165: case 3 : send_string("SCP1000");
  1010                           
  1011  020B  309A               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1012  020C  120A  158A  229F  120A  118A  	fcall	_send_string
  1013                           
  1014                           ;PR22.c: 167: }
  1015                           
  1016                           ;PR22.c: 166: break;
  1017  0211  2A1F               	goto	l2150
  1018  0212                     l2148:	
  1019  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0214  0845               	movf	_mode,w
  1022                           
  1023                           ; Switch size 1, requested type "space"
  1024                           ; Number of cases is 3, Range of values is 1 to 3
  1025                           ; switch strategies available:
  1026                           ; Name         Instructions Cycles
  1027                           ; simple_byte           10     6 (average)
  1028                           ; direct_byte           20    11 (fixed)
  1029                           ; jumptable            263     9 (fixed)
  1030                           ;	Chosen strategy is simple_byte
  1031  0215  3A01               	xorlw	1	; case 1
  1032  0216  1903               	skipnz
  1033  0217  29FD               	goto	l2140
  1034  0218  3A03               	xorlw	3	; case 2
  1035  0219  1903               	skipnz
  1036  021A  2A04               	goto	l2142
  1037  021B  3A01               	xorlw	1	; case 3
  1038  021C  1903               	skipnz
  1039  021D  2A0B               	goto	l2144
  1040  021E  2A1F               	goto	l2150
  1041  021F                     l2150:	
  1042                           
  1043                           ;PR22.c: 169: delay(30000);
  1044  021F  3000               	movlw	0
  1045  0220  00F3               	movwf	delay@data+3
  1046  0221  3000               	movlw	0
  1047  0222  00F2               	movwf	delay@data+2
  1048  0223  3075               	movlw	117
  1049  0224  00F1               	movwf	delay@data+1
  1050  0225  3030               	movlw	48
  1051  0226  00F0               	movwf	delay@data
  1052  0227  120A  158A  22BE  120A  118A  	fcall	_delay
  1053  022C  29DF               	goto	l2152
  1054  022D                     l2154:	
  1055                           
  1056                           ;PR22.c: 171: }
  1057                           ;PR22.c: 173: delay(10000);
  1058  022D  3000               	movlw	0
  1059  022E  00F3               	movwf	delay@data+3
  1060  022F  3000               	movlw	0
  1061  0230  00F2               	movwf	delay@data+2
  1062  0231  3027               	movlw	39
  1063  0232  00F1               	movwf	delay@data+1
  1064  0233  3010               	movlw	16
  1065  0234  00F0               	movwf	delay@data
  1066  0235  120A  158A  22BE  120A  118A  	fcall	_delay
  1067  023A                     l111:	
  1068                           ;PR22.c: 174: while(!RA2);
  1069                           
  1070  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1071  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1072  023C  1D05               	btfss	5,2	;volatile
  1073  023D  2A3A               	goto	l111
  1074                           
  1075                           ;PR22.c: 175: delay(10000);
  1076  023E  3000               	movlw	0
  1077  023F  00F3               	movwf	delay@data+3
  1078  0240  3000               	movlw	0
  1079  0241  00F2               	movwf	delay@data+2
  1080  0242  3027               	movlw	39
  1081  0243  00F1               	movwf	delay@data+1
  1082  0244  3010               	movlw	16
  1083  0245  00F0               	movwf	delay@data
  1084  0246  120A  158A  22BE  120A  118A  	fcall	_delay
  1085                           
  1086                           ;PR22.c: 177: switch(mode)
  1087  024B  2A5E               	goto	l2166
  1088  024C                     l2158:	
  1089                           ;PR22.c: 178: {
  1090                           ;PR22.c: 179: case 1 : mode1();
  1091                           
  1092  024C  120A  118A  2516  120A  118A  	fcall	_mode1
  1093                           
  1094                           ;PR22.c: 180: break;
  1095  0251  29C2               	goto	l2120
  1096  0252                     l2160:	
  1097                           ;PR22.c: 182: case 2 : mode2();
  1098                           
  1099  0252  120A  118A  226C  120A  118A  	fcall	_mode2
  1100                           
  1101                           ;PR22.c: 183: break;
  1102  0257  29C2               	goto	l2120
  1103  0258                     l2162:	
  1104                           ;PR22.c: 185: case 3 : mode3();
  1105                           
  1106  0258  120A  158A  2582  120A  118A  	fcall	_mode3
  1107                           
  1108                           ;PR22.c: 187: }
  1109                           
  1110                           ;PR22.c: 186: break;
  1111  025D  29C2               	goto	l2120
  1112  025E                     l2166:	
  1113  025E  1283               	bcf	3,5	;RP0=0, select bank0
  1114  025F  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0260  0845               	movf	_mode,w
  1116                           
  1117                           ; Switch size 1, requested type "space"
  1118                           ; Number of cases is 3, Range of values is 1 to 3
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte           10     6 (average)
  1122                           ; direct_byte           20    11 (fixed)
  1123                           ; jumptable            263     9 (fixed)
  1124                           ;	Chosen strategy is simple_byte
  1125  0261  3A01               	xorlw	1	; case 1
  1126  0262  1903               	skipnz
  1127  0263  2A4C               	goto	l2158
  1128  0264  3A03               	xorlw	3	; case 2
  1129  0265  1903               	skipnz
  1130  0266  2A52               	goto	l2160
  1131  0267  3A01               	xorlw	1	; case 3
  1132  0268  1903               	skipnz
  1133  0269  2A58               	goto	l2162
  1134  026A  29C2               	goto	l2120
  1135  026B  29C2               	goto	l2120
  1136  026C                     __end_of_main:	
  1137                           
  1138                           	psect	text1
  1139  0D82                     __ptext1:	
  1140 ;; *************** function _mode3 *****************
  1141 ;; Defined at:
  1142 ;;		line 491 in file "../../Source file/PR22.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  pressure        4   14[BANK0 ] unsigned long 
  1147 ;;  pressure_raw    4   10[BANK0 ] unsigned long 
  1148 ;;  temperature     2   20[BANK0 ] unsigned int 
  1149 ;;  temp            2   18[BANK0 ] unsigned int 
  1150 ;;  temperature_    2    8[BANK0 ] unsigned int 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;		None               void
  1153 ;; Registers used:
  1154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0
  1161 ;;      Locals:         0      14       0       0       0
  1162 ;;      Temps:          0       4       0       0       0
  1163 ;;      Totals:         0      18       0       0       0
  1164 ;;Total ram usage:       18 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    3
  1167 ;; This function calls:
  1168 ;;		___lldiv
  1169 ;;		___llmod
  1170 ;;		___lwdiv
  1171 ;;		___lwmod
  1172 ;;		_delay
  1173 ;;		_lcd_clr
  1174 ;;		_lcd_goto
  1175 ;;		_send_char
  1176 ;;		_send_string
  1177 ;;		_spi_baro
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           
  1184                           ;psect for function _mode3
  1185  0D82                     _mode3:	
  1186                           
  1187                           ;PR22.c: 493: unsigned int temp;
  1188                           ;PR22.c: 494: unsigned int temperature;
  1189                           ;PR22.c: 495: unsigned int temperature_raw;
  1190                           ;PR22.c: 496: unsigned long pressure;
  1191                           ;PR22.c: 497: unsigned long pressure_raw;
  1192                           ;PR22.c: 499: spi_baro(0x03, 0x09, 0);
  1193                           
  1194                           ;incstack = 0
  1195                           ; Regs used in _mode3: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1196  0D82  3009               	movlw	9
  1197  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0D85  00A4               	movwf	??_mode3
  1200  0D86  0824               	movf	??_mode3,w
  1201  0D87  00A0               	movwf	spi_baro@data
  1202  0D88  3000               	movlw	0
  1203  0D89  00A1               	movwf	spi_baro@operation
  1204  0D8A  00A2               	movwf	spi_baro@operation+1
  1205  0D8B  3003               	movlw	3
  1206  0D8C  120A  158A  23DB  120A  158A  	fcall	_spi_baro
  1207                           
  1208                           ;PR22.c: 500: lcd_clr();
  1209  0D91  120A  158A  2277  120A  158A  	fcall	_lcd_clr
  1210                           
  1211                           ;PR22.c: 501: lcd_goto(0);
  1212  0D96  3000               	movlw	0
  1213  0D97  120A  158A  2289  120A  158A  	fcall	_lcd_goto
  1214                           
  1215                           ;PR22.c: 502: send_string("Pre.:");
  1216  0D9C  30B2               	movlw	(low ((STR_25-__stringbase)| (0+32768)))& (0+255)
  1217  0D9D  120A  158A  229F  120A  158A  	fcall	_send_string
  1218                           
  1219                           ;PR22.c: 503: lcd_goto(20);
  1220  0DA2  3014               	movlw	20
  1221  0DA3  120A  158A  2289  120A  158A  	fcall	_lcd_goto
  1222                           
  1223                           ;PR22.c: 504: send_string("Tem.:");
  1224  0DA8  30B8               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  1225  0DA9  120A  158A  229F  120A  158A  	fcall	_send_string
  1226  0DAE                     l2056:	
  1227                           ;PR22.c: 506: while(RA2)
  1228                           
  1229  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0DB0  1D05               	btfss	5,2	;volatile
  1232  0DB1  2FD9               	goto	l2058
  1233  0DB2                     l2002:	
  1234                           ;PR22.c: 507: {
  1235                           ;PR22.c: 508: do
  1236                           
  1237                           
  1238                           ;PR22.c: 509: spi_baro(0x07, 0, 1);
  1239  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0DB4  01A0               	clrf	spi_baro@data
  1242  0DB5  3001               	movlw	1
  1243  0DB6  00A1               	movwf	spi_baro@operation
  1244  0DB7  3000               	movlw	0
  1245  0DB8  00A2               	movwf	spi_baro@operation+1
  1246  0DB9  3007               	movlw	7
  1247  0DBA  120A  158A  23DB  120A  158A  	fcall	_spi_baro
  1248                           
  1249                           ;PR22.c: 510: while(!(0b00100000 & spi_baro_rcvb[0]));
  1250  0DBF  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0DC0  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0DC1  1EC6               	btfss	_spi_baro_rcvb,5
  1253  0DC2  2DB2               	goto	l2002
  1254                           
  1255                           ;PR22.c: 513: spi_baro(0x1F, 0, 1);
  1256  0DC3  01A0               	clrf	spi_baro@data
  1257  0DC4  3001               	movlw	1
  1258  0DC5  00A1               	movwf	spi_baro@operation
  1259  0DC6  3000               	movlw	0
  1260  0DC7  00A2               	movwf	spi_baro@operation+1
  1261  0DC8  301F               	movlw	31
  1262  0DC9  120A  158A  23DB  120A  158A  	fcall	_spi_baro
  1263                           
  1264                           ;PR22.c: 514: pressure_raw = (0b00000111 & spi_baro_rcvb[0]);
  1265  0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0DD0  0846               	movf	_spi_baro_rcvb,w
  1268  0DD1  3907               	andlw	7
  1269  0DD2  00A4               	movwf	??_mode3
  1270  0DD3  01A5               	clrf	??_mode3+1
  1271  0DD4  01A6               	clrf	??_mode3+2
  1272  0DD5  01A7               	clrf	??_mode3+3
  1273  0DD6  0827               	movf	??_mode3+3,w
  1274  0DD7  00AD               	movwf	mode3@pressure_raw+3
  1275  0DD8  0826               	movf	??_mode3+2,w
  1276  0DD9  00AC               	movwf	mode3@pressure_raw+2
  1277  0DDA  0825               	movf	??_mode3+1,w
  1278  0DDB  00AB               	movwf	mode3@pressure_raw+1
  1279  0DDC  0824               	movf	??_mode3,w
  1280  0DDD  00AA               	movwf	mode3@pressure_raw
  1281                           
  1282                           ;PR22.c: 515: pressure_raw <<= 16;
  1283  0DDE  3010               	movlw	16
  1284  0DDF  00A4               	movwf	??_mode3
  1285  0DE0                     u2235:	
  1286  0DE0  1003               	clrc
  1287  0DE1  0DAA               	rlf	mode3@pressure_raw,f
  1288  0DE2  0DAB               	rlf	mode3@pressure_raw+1,f
  1289  0DE3  0DAC               	rlf	mode3@pressure_raw+2,f
  1290  0DE4  0DAD               	rlf	mode3@pressure_raw+3,f
  1291  0DE5  0BA4               	decfsz	??_mode3,f
  1292  0DE6  2DE0               	goto	u2235
  1293                           
  1294                           ;PR22.c: 516: spi_baro(0x20, 0, 1);
  1295  0DE7  01A0               	clrf	spi_baro@data
  1296  0DE8  3001               	movlw	1
  1297  0DE9  00A1               	movwf	spi_baro@operation
  1298  0DEA  3000               	movlw	0
  1299  0DEB  00A2               	movwf	spi_baro@operation+1
  1300  0DEC  3020               	movlw	32
  1301  0DED  120A  158A  23DB  120A  158A  	fcall	_spi_baro
  1302                           
  1303                           ;PR22.c: 517: pressure_raw += ((spi_baro_rcvb[0] << 8) + spi_baro_rcvb[1]);
  1304  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0DF3  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0DF4  0847               	movf	_spi_baro_rcvb+1,w
  1307  0DF5  00A4               	movwf	??_mode3
  1308  0DF6  0846               	movf	_spi_baro_rcvb,w
  1309  0DF7  00A5               	movwf	??_mode3+1
  1310  0DF8  3000               	movlw	0
  1311  0DF9  1BA5               	btfsc	??_mode3+1,7
  1312  0DFA  30FF               	movlw	255
  1313  0DFB  00A6               	movwf	??_mode3+2
  1314  0DFC  00A7               	movwf	??_mode3+3
  1315  0DFD  0824               	movf	??_mode3,w
  1316  0DFE  07AA               	addwf	mode3@pressure_raw,f
  1317  0DFF  0825               	movf	??_mode3+1,w
  1318  0E00  1103               	clrz
  1319  0E01  1803               	skipnc
  1320  0E02  3E01               	addlw	1
  1321  0E03  1D03               	btfss	3,2
  1322  0E04  07AB               	addwf	mode3@pressure_raw+1,f
  1323  0E05  0826               	movf	??_mode3+2,w
  1324  0E06  1103               	clrz
  1325  0E07  1803               	skipnc
  1326  0E08  3E01               	addlw	1
  1327  0E09  1D03               	btfss	3,2
  1328  0E0A  07AC               	addwf	mode3@pressure_raw+2,f
  1329  0E0B  0827               	movf	??_mode3+3,w
  1330  0E0C  1103               	clrz
  1331  0E0D  1803               	skipnc
  1332  0E0E  3E01               	addlw	1
  1333  0E0F  1D03               	btfss	3,2
  1334  0E10  07AD               	addwf	mode3@pressure_raw+3,f
  1335                           
  1336                           ;PR22.c: 520: spi_baro(0x21, 0, 1);
  1337  0E11  01A0               	clrf	spi_baro@data
  1338  0E12  3001               	movlw	1
  1339  0E13  00A1               	movwf	spi_baro@operation
  1340  0E14  3000               	movlw	0
  1341  0E15  00A2               	movwf	spi_baro@operation+1
  1342  0E16  3021               	movlw	33
  1343  0E17  120A  158A  23DB  120A  158A  	fcall	_spi_baro
  1344                           
  1345                           ;PR22.c: 521: temperature_raw = (spi_baro_rcvb[0] << 8) + spi_baro_rcvb[1];
  1346  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0E1E  0846               	movf	_spi_baro_rcvb,w
  1349  0E1F  00A4               	movwf	??_mode3
  1350  0E20  01A5               	clrf	??_mode3+1
  1351  0E21  0824               	movf	??_mode3,w
  1352  0E22  00A5               	movwf	??_mode3+1
  1353  0E23  01A4               	clrf	??_mode3
  1354  0E24  0847               	movf	_spi_baro_rcvb+1,w
  1355  0E25  0724               	addwf	??_mode3,w
  1356  0E26  00A8               	movwf	mode3@temperature_raw
  1357  0E27  3000               	movlw	0
  1358  0E28  1803               	skipnc
  1359  0E29  3001               	movlw	1
  1360  0E2A  0725               	addwf	??_mode3+1,w
  1361  0E2B  00A9               	movwf	mode3@temperature_raw+1
  1362                           
  1363                           ;PR22.c: 524: lcd_goto(6);
  1364  0E2C  3006               	movlw	6
  1365  0E2D  120A  158A  2289  120A  158A  	fcall	_lcd_goto
  1366                           
  1367                           ;PR22.c: 525: pressure = pressure_raw >> 2;
  1368  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0E34  082A               	movf	mode3@pressure_raw,w
  1371  0E35  00A4               	movwf	??_mode3
  1372  0E36  082B               	movf	mode3@pressure_raw+1,w
  1373  0E37  00A5               	movwf	??_mode3+1
  1374  0E38  082C               	movf	mode3@pressure_raw+2,w
  1375  0E39  00A6               	movwf	??_mode3+2
  1376  0E3A  082D               	movf	mode3@pressure_raw+3,w
  1377  0E3B  00A7               	movwf	??_mode3+3
  1378  0E3C  3002               	movlw	2
  1379  0E3D                     u2255:	
  1380  0E3D  1003               	clrc
  1381  0E3E  0CA7               	rrf	??_mode3+3,f
  1382  0E3F  0CA6               	rrf	??_mode3+2,f
  1383  0E40  0CA5               	rrf	??_mode3+1,f
  1384  0E41  0CA4               	rrf	??_mode3,f
  1385  0E42  3EFF               	addlw	-1
  1386  0E43  1D03               	skipz
  1387  0E44  2E3D               	goto	u2255
  1388  0E45  0827               	movf	??_mode3+3,w
  1389  0E46  00B1               	movwf	mode3@pressure+3
  1390  0E47  0826               	movf	??_mode3+2,w
  1391  0E48  00B0               	movwf	mode3@pressure+2
  1392  0E49  0825               	movf	??_mode3+1,w
  1393  0E4A  00AF               	movwf	mode3@pressure+1
  1394  0E4B  0824               	movf	??_mode3,w
  1395  0E4C  00AE               	movwf	mode3@pressure
  1396                           
  1397                           ;PR22.c: 526: temp = pressure / 1000;
  1398  0E4D  3000               	movlw	0
  1399  0E4E  00F3               	movwf	___lldiv@divisor+3
  1400  0E4F  3000               	movlw	0
  1401  0E50  00F2               	movwf	___lldiv@divisor+2
  1402  0E51  3003               	movlw	3
  1403  0E52  00F1               	movwf	___lldiv@divisor+1
  1404  0E53  30E8               	movlw	232
  1405  0E54  00F0               	movwf	___lldiv@divisor
  1406  0E55  0831               	movf	mode3@pressure+3,w
  1407  0E56  00F7               	movwf	___lldiv@dividend+3
  1408  0E57  0830               	movf	mode3@pressure+2,w
  1409  0E58  00F6               	movwf	___lldiv@dividend+2
  1410  0E59  082F               	movf	mode3@pressure+1,w
  1411  0E5A  00F5               	movwf	___lldiv@dividend+1
  1412  0E5B  082E               	movf	mode3@pressure,w
  1413  0E5C  00F4               	movwf	___lldiv@dividend
  1414  0E5D  120A  158A  24BA  120A  158A  	fcall	___lldiv
  1415  0E62  0871               	movf	?___lldiv+1,w
  1416  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0E65  00B3               	movwf	mode3@temp+1
  1419  0E66  0870               	movf	?___lldiv,w
  1420  0E67  00B2               	movwf	mode3@temp
  1421                           
  1422                           ;PR22.c: 527: send_char('0' + (temp % 1000) / 100);
  1423  0E68  3064               	movlw	100
  1424  0E69  00F6               	movwf	___lwdiv@divisor
  1425  0E6A  3000               	movlw	0
  1426  0E6B  00F7               	movwf	___lwdiv@divisor+1
  1427  0E6C  0833               	movf	mode3@temp+1,w
  1428  0E6D  00F3               	movwf	___lwmod@dividend+1
  1429  0E6E  0832               	movf	mode3@temp,w
  1430  0E6F  00F2               	movwf	___lwmod@dividend
  1431  0E70  30E8               	movlw	232
  1432  0E71  00F0               	movwf	___lwmod@divisor
  1433  0E72  3003               	movlw	3
  1434  0E73  00F1               	movwf	___lwmod@divisor+1
  1435  0E74  120A  158A  2327  120A  158A  	fcall	___lwmod
  1436  0E79  0871               	movf	?___lwmod+1,w
  1437  0E7A  00F9               	movwf	___lwdiv@dividend+1
  1438  0E7B  0870               	movf	?___lwmod,w
  1439  0E7C  00F8               	movwf	___lwdiv@dividend
  1440  0E7D  120A  158A  2359  120A  158A  	fcall	___lwdiv
  1441  0E82  0876               	movf	?___lwdiv,w
  1442  0E83  3E30               	addlw	48
  1443  0E84  120A  158A  2304  120A  158A  	fcall	_send_char
  1444                           
  1445                           ;PR22.c: 528: send_char('0' + (temp % 100) / 10);
  1446  0E89  300A               	movlw	10
  1447  0E8A  00F6               	movwf	___lwdiv@divisor
  1448  0E8B  3000               	movlw	0
  1449  0E8C  00F7               	movwf	___lwdiv@divisor+1
  1450  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0E8F  0833               	movf	mode3@temp+1,w
  1453  0E90  00F3               	movwf	___lwmod@dividend+1
  1454  0E91  0832               	movf	mode3@temp,w
  1455  0E92  00F2               	movwf	___lwmod@dividend
  1456  0E93  3064               	movlw	100
  1457  0E94  00F0               	movwf	___lwmod@divisor
  1458  0E95  3000               	movlw	0
  1459  0E96  00F1               	movwf	___lwmod@divisor+1
  1460  0E97  120A  158A  2327  120A  158A  	fcall	___lwmod
  1461  0E9C  0871               	movf	?___lwmod+1,w
  1462  0E9D  00F9               	movwf	___lwdiv@dividend+1
  1463  0E9E  0870               	movf	?___lwmod,w
  1464  0E9F  00F8               	movwf	___lwdiv@dividend
  1465  0EA0  120A  158A  2359  120A  158A  	fcall	___lwdiv
  1466  0EA5  0876               	movf	?___lwdiv,w
  1467  0EA6  3E30               	addlw	48
  1468  0EA7  120A  158A  2304  120A  158A  	fcall	_send_char
  1469                           
  1470                           ;PR22.c: 529: send_char('0' + (temp % 10));
  1471  0EAC  300A               	movlw	10
  1472  0EAD  00F0               	movwf	___lwmod@divisor
  1473  0EAE  3000               	movlw	0
  1474  0EAF  00F1               	movwf	___lwmod@divisor+1
  1475  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0EB2  0833               	movf	mode3@temp+1,w
  1478  0EB3  00F3               	movwf	___lwmod@dividend+1
  1479  0EB4  0832               	movf	mode3@temp,w
  1480  0EB5  00F2               	movwf	___lwmod@dividend
  1481  0EB6  120A  158A  2327  120A  158A  	fcall	___lwmod
  1482  0EBB  0870               	movf	?___lwmod,w
  1483  0EBC  3E30               	addlw	48
  1484  0EBD  120A  158A  2304  120A  158A  	fcall	_send_char
  1485                           
  1486                           ;PR22.c: 530: send_char('.');
  1487  0EC2  302E               	movlw	46
  1488  0EC3  120A  158A  2304  120A  158A  	fcall	_send_char
  1489                           
  1490                           ;PR22.c: 531: temp = pressure % 1000;
  1491  0EC8  3000               	movlw	0
  1492  0EC9  00F3               	movwf	___llmod@divisor+3
  1493  0ECA  3000               	movlw	0
  1494  0ECB  00F2               	movwf	___llmod@divisor+2
  1495  0ECC  3003               	movlw	3
  1496  0ECD  00F1               	movwf	___llmod@divisor+1
  1497  0ECE  30E8               	movlw	232
  1498  0ECF  00F0               	movwf	___llmod@divisor
  1499  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0ED2  0831               	movf	mode3@pressure+3,w
  1502  0ED3  00F7               	movwf	___llmod@dividend+3
  1503  0ED4  0830               	movf	mode3@pressure+2,w
  1504  0ED5  00F6               	movwf	___llmod@dividend+2
  1505  0ED6  082F               	movf	mode3@pressure+1,w
  1506  0ED7  00F5               	movwf	___llmod@dividend+1
  1507  0ED8  082E               	movf	mode3@pressure,w
  1508  0ED9  00F4               	movwf	___llmod@dividend
  1509  0EDA  120A  158A  246E  120A  158A  	fcall	___llmod
  1510  0EDF  0871               	movf	?___llmod+1,w
  1511  0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0EE2  00B3               	movwf	mode3@temp+1
  1514  0EE3  0870               	movf	?___llmod,w
  1515  0EE4  00B2               	movwf	mode3@temp
  1516                           
  1517                           ;PR22.c: 532: send_char('0' + temp / 100);
  1518  0EE5  3064               	movlw	100
  1519  0EE6  00F6               	movwf	___lwdiv@divisor
  1520  0EE7  3000               	movlw	0
  1521  0EE8  00F7               	movwf	___lwdiv@divisor+1
  1522  0EE9  0833               	movf	mode3@temp+1,w
  1523  0EEA  00F9               	movwf	___lwdiv@dividend+1
  1524  0EEB  0832               	movf	mode3@temp,w
  1525  0EEC  00F8               	movwf	___lwdiv@dividend
  1526  0EED  120A  158A  2359  120A  158A  	fcall	___lwdiv
  1527  0EF2  0876               	movf	?___lwdiv,w
  1528  0EF3  3E30               	addlw	48
  1529  0EF4  120A  158A  2304  120A  158A  	fcall	_send_char
  1530                           
  1531                           ;PR22.c: 533: send_char('0' + (temp % 100) / 10);
  1532  0EF9  300A               	movlw	10
  1533  0EFA  00F6               	movwf	___lwdiv@divisor
  1534  0EFB  3000               	movlw	0
  1535  0EFC  00F7               	movwf	___lwdiv@divisor+1
  1536  0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0EFF  0833               	movf	mode3@temp+1,w
  1539  0F00  00F3               	movwf	___lwmod@dividend+1
  1540  0F01  0832               	movf	mode3@temp,w
  1541  0F02  00F2               	movwf	___lwmod@dividend
  1542  0F03  3064               	movlw	100
  1543  0F04  00F0               	movwf	___lwmod@divisor
  1544  0F05  3000               	movlw	0
  1545  0F06  00F1               	movwf	___lwmod@divisor+1
  1546  0F07  120A  158A  2327  120A  158A  	fcall	___lwmod
  1547  0F0C  0871               	movf	?___lwmod+1,w
  1548  0F0D  00F9               	movwf	___lwdiv@dividend+1
  1549  0F0E  0870               	movf	?___lwmod,w
  1550  0F0F  00F8               	movwf	___lwdiv@dividend
  1551  0F10  120A  158A  2359  120A  158A  	fcall	___lwdiv
  1552  0F15  0876               	movf	?___lwdiv,w
  1553  0F16  3E30               	addlw	48
  1554  0F17  120A  158A  2304  120A  158A  	fcall	_send_char
  1555                           
  1556                           ;PR22.c: 534: send_char('0' + (temp % 10));
  1557  0F1C  300A               	movlw	10
  1558  0F1D  00F0               	movwf	___lwmod@divisor
  1559  0F1E  3000               	movlw	0
  1560  0F1F  00F1               	movwf	___lwmod@divisor+1
  1561  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0F22  0833               	movf	mode3@temp+1,w
  1564  0F23  00F3               	movwf	___lwmod@dividend+1
  1565  0F24  0832               	movf	mode3@temp,w
  1566  0F25  00F2               	movwf	___lwmod@dividend
  1567  0F26  120A  158A  2327  120A  158A  	fcall	___lwmod
  1568  0F2B  0870               	movf	?___lwmod,w
  1569  0F2C  3E30               	addlw	48
  1570  0F2D  120A  158A  2304  120A  158A  	fcall	_send_char
  1571                           
  1572                           ;PR22.c: 535: send_string("kPa");
  1573  0F32  30D8               	movlw	(low ((STR_27-__stringbase)| (0+32768)))& (0+255)
  1574  0F33  120A  158A  229F  120A  158A  	fcall	_send_string
  1575                           
  1576                           ;PR22.c: 538: lcd_goto(26);
  1577  0F38  301A               	movlw	26
  1578  0F39  120A  158A  2289  120A  158A  	fcall	_lcd_goto
  1579                           
  1580                           ;PR22.c: 539: temperature = temperature_raw >> 1;
  1581  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0F40  0829               	movf	mode3@temperature_raw+1,w
  1584  0F41  00A5               	movwf	??_mode3+1
  1585  0F42  0828               	movf	mode3@temperature_raw,w
  1586  0F43  00A4               	movwf	??_mode3
  1587  0F44  1003               	clrc
  1588  0F45  0CA5               	rrf	??_mode3+1,f
  1589  0F46  0CA4               	rrf	??_mode3,f
  1590  0F47  0824               	movf	??_mode3,w
  1591  0F48  00B4               	movwf	mode3@temperature
  1592  0F49  0825               	movf	??_mode3+1,w
  1593  0F4A  00B5               	movwf	mode3@temperature+1
  1594                           
  1595                           ;PR22.c: 541: if(temperature & 0x1000)
  1596  0F4B  1E35               	btfss	mode3@temperature+1,4
  1597  0F4C  2F54               	goto	l2054
  1598                           
  1599                           ;PR22.c: 542: {
  1600                           ;PR22.c: 543: temperature = (~temperature) + 1;
  1601  0F4D  09B4               	comf	mode3@temperature,f
  1602  0F4E  09B5               	comf	mode3@temperature+1,f
  1603  0F4F  0AB4               	incf	mode3@temperature,f
  1604  0F50  1903               	skipnz
  1605  0F51  0AB5               	incf	mode3@temperature+1,f
  1606                           
  1607                           ;PR22.c: 544: send_char('-');
  1608  0F52  302D               	movlw	45
  1609  0F53  2F55               	goto	L1
  1610  0F54                     l2054:	
  1611                           ;PR22.c: 545: }
  1612                           
  1613                           
  1614                           ;PR22.c: 546: else
  1615                           ;PR22.c: 547: send_char('+');
  1616  0F54  302B               	movlw	43
  1617  0F55                     L1:	
  1618  0F55  120A  158A  2304  120A  158A  	fcall	_send_char
  1619                           
  1620                           ;PR22.c: 550: send_char('0' + temperature / 1000);
  1621  0F5A  30E8               	movlw	232
  1622  0F5B  00F6               	movwf	___lwdiv@divisor
  1623  0F5C  3003               	movlw	3
  1624  0F5D  00F7               	movwf	___lwdiv@divisor+1
  1625  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  1627  0F60  0835               	movf	mode3@temperature+1,w
  1628  0F61  00F9               	movwf	___lwdiv@dividend+1
  1629  0F62  0834               	movf	mode3@temperature,w
  1630  0F63  00F8               	movwf	___lwdiv@dividend
  1631  0F64  120A  158A  2359  120A  158A  	fcall	___lwdiv
  1632  0F69  0876               	movf	?___lwdiv,w
  1633  0F6A  3E30               	addlw	48
  1634  0F6B  120A  158A  2304  120A  158A  	fcall	_send_char
  1635                           
  1636                           ;PR22.c: 551: send_char('0' + (temperature % 1000) / 100);
  1637  0F70  3064               	movlw	100
  1638  0F71  00F6               	movwf	___lwdiv@divisor
  1639  0F72  3000               	movlw	0
  1640  0F73  00F7               	movwf	___lwdiv@divisor+1
  1641  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0F76  0835               	movf	mode3@temperature+1,w
  1644  0F77  00F3               	movwf	___lwmod@dividend+1
  1645  0F78  0834               	movf	mode3@temperature,w
  1646  0F79  00F2               	movwf	___lwmod@dividend
  1647  0F7A  30E8               	movlw	232
  1648  0F7B  00F0               	movwf	___lwmod@divisor
  1649  0F7C  3003               	movlw	3
  1650  0F7D  00F1               	movwf	___lwmod@divisor+1
  1651  0F7E  120A  158A  2327  120A  158A  	fcall	___lwmod
  1652  0F83  0871               	movf	?___lwmod+1,w
  1653  0F84  00F9               	movwf	___lwdiv@dividend+1
  1654  0F85  0870               	movf	?___lwmod,w
  1655  0F86  00F8               	movwf	___lwdiv@dividend
  1656  0F87  120A  158A  2359  120A  158A  	fcall	___lwdiv
  1657  0F8C  0876               	movf	?___lwdiv,w
  1658  0F8D  3E30               	addlw	48
  1659  0F8E  120A  158A  2304  120A  158A  	fcall	_send_char
  1660                           
  1661                           ;PR22.c: 552: send_char('0' + (temperature % 100) / 10);
  1662  0F93  300A               	movlw	10
  1663  0F94  00F6               	movwf	___lwdiv@divisor
  1664  0F95  3000               	movlw	0
  1665  0F96  00F7               	movwf	___lwdiv@divisor+1
  1666  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0F99  0835               	movf	mode3@temperature+1,w
  1669  0F9A  00F3               	movwf	___lwmod@dividend+1
  1670  0F9B  0834               	movf	mode3@temperature,w
  1671  0F9C  00F2               	movwf	___lwmod@dividend
  1672  0F9D  3064               	movlw	100
  1673  0F9E  00F0               	movwf	___lwmod@divisor
  1674  0F9F  3000               	movlw	0
  1675  0FA0  00F1               	movwf	___lwmod@divisor+1
  1676  0FA1  120A  158A  2327  120A  158A  	fcall	___lwmod
  1677  0FA6  0871               	movf	?___lwmod+1,w
  1678  0FA7  00F9               	movwf	___lwdiv@dividend+1
  1679  0FA8  0870               	movf	?___lwmod,w
  1680  0FA9  00F8               	movwf	___lwdiv@dividend
  1681  0FAA  120A  158A  2359  120A  158A  	fcall	___lwdiv
  1682  0FAF  0876               	movf	?___lwdiv,w
  1683  0FB0  3E30               	addlw	48
  1684  0FB1  120A  158A  2304  120A  158A  	fcall	_send_char
  1685                           
  1686                           ;PR22.c: 553: send_char('.');
  1687  0FB6  302E               	movlw	46
  1688  0FB7  120A  158A  2304  120A  158A  	fcall	_send_char
  1689                           
  1690                           ;PR22.c: 554: send_char('0' + temperature % 10);
  1691  0FBC  300A               	movlw	10
  1692  0FBD  00F0               	movwf	___lwmod@divisor
  1693  0FBE  3000               	movlw	0
  1694  0FBF  00F1               	movwf	___lwmod@divisor+1
  1695  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0FC2  0835               	movf	mode3@temperature+1,w
  1698  0FC3  00F3               	movwf	___lwmod@dividend+1
  1699  0FC4  0834               	movf	mode3@temperature,w
  1700  0FC5  00F2               	movwf	___lwmod@dividend
  1701  0FC6  120A  158A  2327  120A  158A  	fcall	___lwmod
  1702  0FCB  0870               	movf	?___lwmod,w
  1703  0FCC  3E30               	addlw	48
  1704  0FCD  120A  158A  2304  120A  158A  	fcall	_send_char
  1705                           
  1706                           ;PR22.c: 555: send_char('C');
  1707  0FD2  3043               	movlw	67
  1708  0FD3  120A  158A  2304  120A  158A  	fcall	_send_char
  1709  0FD8  2DAE               	goto	l2056
  1710  0FD9                     l2058:	
  1711                           
  1712                           ;PR22.c: 556: }
  1713                           ;PR22.c: 558: delay(10000);
  1714  0FD9  3000               	movlw	0
  1715  0FDA  00F3               	movwf	delay@data+3
  1716  0FDB  3000               	movlw	0
  1717  0FDC  00F2               	movwf	delay@data+2
  1718  0FDD  3027               	movlw	39
  1719  0FDE  00F1               	movwf	delay@data+1
  1720  0FDF  3010               	movlw	16
  1721  0FE0  00F0               	movwf	delay@data
  1722  0FE1  120A  158A  22BE  120A  158A  	fcall	_delay
  1723  0FE6                     l193:	
  1724                           ;PR22.c: 559: while(!RA2);
  1725                           
  1726  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0FE8  1D05               	btfss	5,2	;volatile
  1729  0FE9  2FE6               	goto	l193
  1730                           
  1731                           ;PR22.c: 560: spi_baro(0x03, 0, 0);
  1732  0FEA  01A0               	clrf	spi_baro@data
  1733  0FEB  3000               	movlw	0
  1734  0FEC  00A1               	movwf	spi_baro@operation
  1735  0FED  00A2               	movwf	spi_baro@operation+1
  1736  0FEE  3003               	movlw	3
  1737  0FEF  120A  158A  23DB  120A  158A  	fcall	_spi_baro
  1738                           
  1739                           ;PR22.c: 561: delay(10000);
  1740  0FF4  3000               	movlw	0
  1741  0FF5  00F3               	movwf	delay@data+3
  1742  0FF6  3000               	movlw	0
  1743  0FF7  00F2               	movwf	delay@data+2
  1744  0FF8  3027               	movlw	39
  1745  0FF9  00F1               	movwf	delay@data+1
  1746  0FFA  3010               	movlw	16
  1747  0FFB  00F0               	movwf	delay@data
  1748  0FFC  120A  158A  22BE   	fcall	_delay
  1749  0FFF  0008               	return
  1750  1000                     __end_of_mode3:	
  1751                           
  1752                           	psect	text2
  1753  0BDB                     __ptext2:	
  1754 ;; *************** function _spi_baro *****************
  1755 ;; Defined at:
  1756 ;;		line 657 in file "../../Source file/PR22.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  register_add    1    wreg     unsigned char 
  1759 ;;  data            1    0[BANK0 ] unsigned char 
  1760 ;;  operation       2    1[BANK0 ] unsigned int 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  register_add    1    3[BANK0 ] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;		None               void
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0, pclath, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1772 ;;      Params:         0       3       0       0       0
  1773 ;;      Locals:         0       1       0       0       0
  1774 ;;      Temps:          2       0       0       0       0
  1775 ;;      Totals:         2       4       0       0       0
  1776 ;;Total ram usage:        6 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    2
  1779 ;; This function calls:
  1780 ;;		_spi_start
  1781 ;; This function is called by:
  1782 ;;		_mode3
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _spi_baro
  1788  0BDB                     _spi_baro:	
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _spi_baro: [wreg+status,2+status,0+pclath+cstack]
  1792                           ;spi_baro@register_address stored from wreg
  1793  0BDB  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0BDC  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0BDD  00A3               	movwf	spi_baro@register_address
  1796                           
  1797                           ;PR22.c: 659: RA3 = 0;
  1798  0BDE  1185               	bcf	5,3	;volatile
  1799                           
  1800                           ;PR22.c: 660: spi_start(((register_address << 1) + !operation) << 1);
  1801  0BDF  0823               	movf	spi_baro@register_address,w
  1802  0BE0  00FC               	movwf	??_spi_baro
  1803  0BE1  3001               	movlw	1
  1804  0BE2                     u1415:	
  1805  0BE2  1003               	clrc
  1806  0BE3  0DFC               	rlf	??_spi_baro,f
  1807  0BE4  3EFF               	addlw	-1
  1808  0BE5  1D03               	skipz
  1809  0BE6  2BE2               	goto	u1415
  1810  0BE7  0821               	movf	spi_baro@operation,w
  1811  0BE8  0422               	iorwf	spi_baro@operation+1,w
  1812  0BE9  1D03               	btfss	3,2
  1813  0BEA  2BED               	goto	u1420
  1814  0BEB  3001               	movlw	1
  1815  0BEC  2BEE               	goto	u1430
  1816  0BED                     u1420:	
  1817  0BED  3000               	movlw	0
  1818  0BEE                     u1430:	
  1819  0BEE  077C               	addwf	??_spi_baro,w
  1820  0BEF  00FD               	movwf	??_spi_baro+1
  1821  0BF0  077D               	addwf	??_spi_baro+1,w
  1822  0BF1  120A  158A  2395  120A  158A  	fcall	_spi_start
  1823                           
  1824                           ;PR22.c: 662: if(operation == 0)
  1825  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  1826  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  1827  0BF8  0821               	movf	spi_baro@operation,w
  1828  0BF9  0422               	iorwf	spi_baro@operation+1,w
  1829  0BFA  1D03               	btfss	3,2
  1830  0BFB  2C03               	goto	l1566
  1831                           
  1832                           ;PR22.c: 663: spi_start(data);
  1833  0BFC  0820               	movf	spi_baro@data,w
  1834  0BFD  120A  158A  2395  120A  158A  	fcall	_spi_start
  1835  0C02  2C1F               	goto	l1574
  1836  0C03                     l1566:	
  1837                           
  1838                           ;PR22.c: 664: else
  1839                           ;PR22.c: 665: {
  1840                           ;PR22.c: 667: spi_baro_rcvb[0] = spi_start(0);
  1841  0C03  3000               	movlw	0
  1842  0C04  120A  158A  2395  120A  158A  	fcall	_spi_start
  1843  0C09  00FC               	movwf	??_spi_baro
  1844  0C0A  087C               	movf	??_spi_baro,w
  1845  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0C0D  00C6               	movwf	_spi_baro_rcvb
  1848                           
  1849                           ;PR22.c: 669: if((register_address == 0x20) || (register_address == 0x21))
  1850  0C0E  3020               	movlw	32
  1851  0C0F  0623               	xorwf	spi_baro@register_address,w
  1852  0C10  1903               	btfsc	3,2
  1853  0C11  2C16               	goto	l1572
  1854  0C12  3021               	movlw	33
  1855  0C13  0623               	xorwf	spi_baro@register_address,w
  1856  0C14  1D03               	btfss	3,2
  1857  0C15  2C1F               	goto	l1574
  1858  0C16                     l1572:	
  1859                           
  1860                           ;PR22.c: 671: spi_baro_rcvb[1] = spi_start(0);
  1861  0C16  3000               	movlw	0
  1862  0C17  120A  158A  2395   	fcall	_spi_start
  1863  0C1A  00FC               	movwf	??_spi_baro
  1864  0C1B  087C               	movf	??_spi_baro,w
  1865  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  1866  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0C1E  00C7               	movwf	_spi_baro_rcvb+1
  1868  0C1F                     l1574:	
  1869                           
  1870                           ;PR22.c: 672: }
  1871                           ;PR22.c: 673: RA3 = 1;
  1872  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0C21  1585               	bsf	5,3	;volatile
  1875  0C22  0008               	return
  1876  0C23                     __end_of_spi_baro:	
  1877                           
  1878                           	psect	text3
  1879  0B95                     __ptext3:	
  1880 ;; *************** function _spi_start *****************
  1881 ;; Defined at:
  1882 ;;		line 676 in file "../../Source file/PR22.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  data            1    wreg     unsigned char 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  data            1    9[COMMON] unsigned char 
  1887 ;;  i               1   11[COMMON] unsigned char 
  1888 ;;  rcvb            1   10[COMMON] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      unsigned char 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1898 ;;      Params:         0       0       0       0       0
  1899 ;;      Locals:         3       0       0       0       0
  1900 ;;      Temps:          1       0       0       0       0
  1901 ;;      Totals:         4       0       0       0       0
  1902 ;;Total ram usage:        4 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    1
  1905 ;; This function calls:
  1906 ;;		_delay
  1907 ;; This function is called by:
  1908 ;;		_spi_baro
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _spi_start
  1914  0B95                     _spi_start:	
  1915                           
  1916                           ;incstack = 0
  1917                           ; Regs used in _spi_start: [wreg+status,2+status,0+pclath+cstack]
  1918                           ;spi_start@data stored from wreg
  1919  0B95  00F9               	movwf	spi_start@data
  1920                           
  1921                           ;PR22.c: 678: unsigned char rcvb = 0;
  1922  0B96  01FA               	clrf	spi_start@rcvb
  1923                           
  1924                           ;PR22.c: 679: unsigned char i;
  1925                           ;PR22.c: 681: for(i = 0; i < 8; i ++)
  1926  0B97  01FB               	clrf	spi_start@i
  1927  0B98  3008               	movlw	8
  1928  0B99  027B               	subwf	spi_start@i,w
  1929  0B9A  1803               	btfsc	3,0
  1930  0B9B  2BD9               	goto	l1506
  1931  0B9C                     l269:	
  1932                           
  1933                           ;PR22.c: 682: {
  1934                           ;PR22.c: 683: RC6 = 0;
  1935  0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  1936  0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  1937  0B9E  1307               	bcf	7,6	;volatile
  1938                           
  1939                           ;PR22.c: 684: delay(100);
  1940  0B9F  3000               	movlw	0
  1941  0BA0  00F3               	movwf	delay@data+3
  1942  0BA1  3000               	movlw	0
  1943  0BA2  00F2               	movwf	delay@data+2
  1944  0BA3  3000               	movlw	0
  1945  0BA4  00F1               	movwf	delay@data+1
  1946  0BA5  3064               	movlw	100
  1947  0BA6  00F0               	movwf	delay@data
  1948  0BA7  120A  158A  22BE  120A  158A  	fcall	_delay
  1949                           
  1950                           ;PR22.c: 685: RC7 = (data & 0x80)? 1: 0;
  1951  0BAC  1FF9               	btfss	spi_start@data,7
  1952  0BAD  2BB2               	goto	u1220
  1953  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0BB0  1787               	bsf	7,7	;volatile
  1956  0BB1  2BB5               	goto	l1490
  1957  0BB2                     u1220:	
  1958  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0BB3  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0BB4  1387               	bcf	7,7	;volatile
  1961  0BB5                     l1490:	
  1962                           
  1963                           ;PR22.c: 686: rcvb += RC5;
  1964  0BB5  3000               	movlw	0
  1965  0BB6  1A87               	btfsc	7,5	;volatile
  1966  0BB7  3001               	movlw	1
  1967  0BB8  00F8               	movwf	??_spi_start
  1968  0BB9  0878               	movf	??_spi_start,w
  1969  0BBA  07FA               	addwf	spi_start@rcvb,f
  1970                           
  1971                           ;PR22.c: 687: data <<= 1;
  1972  0BBB  1003               	clrc
  1973  0BBC  0DF9               	rlf	spi_start@data,f
  1974                           
  1975                           ;PR22.c: 688: if(i < 7)
  1976  0BBD  3007               	movlw	7
  1977  0BBE  027B               	subwf	spi_start@i,w
  1978  0BBF  1803               	skipnc
  1979  0BC0  2BC3               	goto	l1498
  1980                           
  1981                           ;PR22.c: 689: rcvb <<= 1;
  1982  0BC1  1003               	clrc
  1983  0BC2  0DFA               	rlf	spi_start@rcvb,f
  1984  0BC3                     l1498:	
  1985                           
  1986                           ;PR22.c: 690: RC6 = 1;
  1987  0BC3  1707               	bsf	7,6	;volatile
  1988                           
  1989                           ;PR22.c: 691: delay(100);
  1990  0BC4  3000               	movlw	0
  1991  0BC5  00F3               	movwf	delay@data+3
  1992  0BC6  3000               	movlw	0
  1993  0BC7  00F2               	movwf	delay@data+2
  1994  0BC8  3000               	movlw	0
  1995  0BC9  00F1               	movwf	delay@data+1
  1996  0BCA  3064               	movlw	100
  1997  0BCB  00F0               	movwf	delay@data
  1998  0BCC  120A  158A  22BE  120A  158A  	fcall	_delay
  1999  0BD1  3001               	movlw	1
  2000  0BD2  00F8               	movwf	??_spi_start
  2001  0BD3  0878               	movf	??_spi_start,w
  2002  0BD4  07FB               	addwf	spi_start@i,f
  2003  0BD5  3008               	movlw	8
  2004  0BD6  027B               	subwf	spi_start@i,w
  2005  0BD7  1C03               	skipc
  2006  0BD8  2B9C               	goto	l269
  2007  0BD9                     l1506:	
  2008                           
  2009                           ;PR22.c: 692: }
  2010                           ;PR22.c: 693: return rcvb;
  2011  0BD9  087A               	movf	spi_start@rcvb,w
  2012  0BDA  0008               	return
  2013  0BDB                     __end_of_spi_start:	
  2014                           
  2015                           	psect	text4
  2016  0C6E                     __ptext4:	
  2017 ;; *************** function ___llmod *****************
  2018 ;; Defined at:
  2019 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  divisor         4    0[COMMON] unsigned long 
  2022 ;;  dividend        4    4[COMMON] unsigned long 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  counter         1    9[COMMON] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  4    0[COMMON] unsigned long 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2034 ;;      Params:         8       0       0       0       0
  2035 ;;      Locals:         1       0       0       0       0
  2036 ;;      Temps:          1       0       0       0       0
  2037 ;;      Totals:        10       0       0       0       0
  2038 ;;Total ram usage:       10 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_mode3
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function ___llmod
  2049  0C6E                     ___llmod:	
  2050                           
  2051                           ;incstack = 0
  2052                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2053  0C6E  0873               	movf	___llmod@divisor+3,w
  2054  0C6F  0472               	iorwf	___llmod@divisor+2,w
  2055  0C70  0471               	iorwf	___llmod@divisor+1,w
  2056  0C71  0470               	iorwf	___llmod@divisor,w
  2057  0C72  1903               	skipnz
  2058  0C73  2CB1               	goto	l1698
  2059  0C74  01F9               	clrf	___llmod@counter
  2060  0C75  0AF9               	incf	___llmod@counter,f
  2061  0C76                     l1688:	
  2062  0C76  1BF3               	btfsc	___llmod@divisor+3,7
  2063  0C77  2C86               	goto	l1690
  2064  0C78  3001               	movlw	1
  2065  0C79  00F8               	movwf	??___llmod
  2066  0C7A                     u1745:	
  2067  0C7A  1003               	clrc
  2068  0C7B  0DF0               	rlf	___llmod@divisor,f
  2069  0C7C  0DF1               	rlf	___llmod@divisor+1,f
  2070  0C7D  0DF2               	rlf	___llmod@divisor+2,f
  2071  0C7E  0DF3               	rlf	___llmod@divisor+3,f
  2072  0C7F  0BF8               	decfsz	??___llmod,f
  2073  0C80  2C7A               	goto	u1745
  2074  0C81  3001               	movlw	1
  2075  0C82  00F8               	movwf	??___llmod
  2076  0C83  0878               	movf	??___llmod,w
  2077  0C84  07F9               	addwf	___llmod@counter,f
  2078  0C85  2C76               	goto	l1688
  2079  0C86                     l1690:	
  2080  0C86  0873               	movf	___llmod@divisor+3,w
  2081  0C87  0277               	subwf	___llmod@dividend+3,w
  2082  0C88  1D03               	skipz
  2083  0C89  2C94               	goto	u1765
  2084  0C8A  0872               	movf	___llmod@divisor+2,w
  2085  0C8B  0276               	subwf	___llmod@dividend+2,w
  2086  0C8C  1D03               	skipz
  2087  0C8D  2C94               	goto	u1765
  2088  0C8E  0871               	movf	___llmod@divisor+1,w
  2089  0C8F  0275               	subwf	___llmod@dividend+1,w
  2090  0C90  1D03               	skipz
  2091  0C91  2C94               	goto	u1765
  2092  0C92  0870               	movf	___llmod@divisor,w
  2093  0C93  0274               	subwf	___llmod@dividend,w
  2094  0C94                     u1765:	
  2095  0C94  1C03               	skipc
  2096  0C95  2CA4               	goto	l1694
  2097  0C96  0870               	movf	___llmod@divisor,w
  2098  0C97  02F4               	subwf	___llmod@dividend,f
  2099  0C98  0871               	movf	___llmod@divisor+1,w
  2100  0C99  1C03               	skipc
  2101  0C9A  0F71               	incfsz	___llmod@divisor+1,w
  2102  0C9B  02F5               	subwf	___llmod@dividend+1,f
  2103  0C9C  0872               	movf	___llmod@divisor+2,w
  2104  0C9D  1C03               	skipc
  2105  0C9E  0F72               	incfsz	___llmod@divisor+2,w
  2106  0C9F  02F6               	subwf	___llmod@dividend+2,f
  2107  0CA0  0873               	movf	___llmod@divisor+3,w
  2108  0CA1  1C03               	skipc
  2109  0CA2  0F73               	incfsz	___llmod@divisor+3,w
  2110  0CA3  02F7               	subwf	___llmod@dividend+3,f
  2111  0CA4                     l1694:	
  2112  0CA4  3001               	movlw	1
  2113  0CA5                     u1775:	
  2114  0CA5  1003               	clrc
  2115  0CA6  0CF3               	rrf	___llmod@divisor+3,f
  2116  0CA7  0CF2               	rrf	___llmod@divisor+2,f
  2117  0CA8  0CF1               	rrf	___llmod@divisor+1,f
  2118  0CA9  0CF0               	rrf	___llmod@divisor,f
  2119  0CAA  3EFF               	addlw	-1
  2120  0CAB  1D03               	skipz
  2121  0CAC  2CA5               	goto	u1775
  2122  0CAD  3001               	movlw	1
  2123  0CAE  02F9               	subwf	___llmod@counter,f
  2124  0CAF  1D03               	btfss	3,2
  2125  0CB0  2C86               	goto	l1690
  2126  0CB1                     l1698:	
  2127  0CB1  0877               	movf	___llmod@dividend+3,w
  2128  0CB2  00F3               	movwf	?___llmod+3
  2129  0CB3  0876               	movf	___llmod@dividend+2,w
  2130  0CB4  00F2               	movwf	?___llmod+2
  2131  0CB5  0875               	movf	___llmod@dividend+1,w
  2132  0CB6  00F1               	movwf	?___llmod+1
  2133  0CB7  0874               	movf	___llmod@dividend,w
  2134  0CB8  00F0               	movwf	?___llmod
  2135  0CB9  0008               	return
  2136  0CBA                     __end_of___llmod:	
  2137                           
  2138                           	psect	text5
  2139  0CBA                     __ptext5:	
  2140 ;; *************** function ___lldiv *****************
  2141 ;; Defined at:
  2142 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  divisor         4    0[COMMON] unsigned long 
  2145 ;;  dividend        4    4[COMMON] unsigned long 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  quotient        4    9[COMMON] unsigned long 
  2148 ;;  counter         1   13[COMMON] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  4    0[COMMON] unsigned long 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2158 ;;      Params:         8       0       0       0       0
  2159 ;;      Locals:         5       0       0       0       0
  2160 ;;      Temps:          1       0       0       0       0
  2161 ;;      Totals:        14       0       0       0       0
  2162 ;;Total ram usage:       14 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_mode3
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           
  2172                           ;psect for function ___lldiv
  2173  0CBA                     ___lldiv:	
  2174                           
  2175                           ;incstack = 0
  2176                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2177  0CBA  3000               	movlw	0
  2178  0CBB  00FC               	movwf	___lldiv@quotient+3
  2179  0CBC  3000               	movlw	0
  2180  0CBD  00FB               	movwf	___lldiv@quotient+2
  2181  0CBE  3000               	movlw	0
  2182  0CBF  00FA               	movwf	___lldiv@quotient+1
  2183  0CC0  3000               	movlw	0
  2184  0CC1  00F9               	movwf	___lldiv@quotient
  2185  0CC2  0873               	movf	___lldiv@divisor+3,w
  2186  0CC3  0472               	iorwf	___lldiv@divisor+2,w
  2187  0CC4  0471               	iorwf	___lldiv@divisor+1,w
  2188  0CC5  0470               	iorwf	___lldiv@divisor,w
  2189  0CC6  1903               	skipnz
  2190  0CC7  2D0F               	goto	l1678
  2191  0CC8  01FD               	clrf	___lldiv@counter
  2192  0CC9  0AFD               	incf	___lldiv@counter,f
  2193  0CCA                     l1664:	
  2194  0CCA  1BF3               	btfsc	___lldiv@divisor+3,7
  2195  0CCB  2CDA               	goto	l1666
  2196  0CCC  3001               	movlw	1
  2197  0CCD  00F8               	movwf	??___lldiv
  2198  0CCE                     u1675:	
  2199  0CCE  1003               	clrc
  2200  0CCF  0DF0               	rlf	___lldiv@divisor,f
  2201  0CD0  0DF1               	rlf	___lldiv@divisor+1,f
  2202  0CD1  0DF2               	rlf	___lldiv@divisor+2,f
  2203  0CD2  0DF3               	rlf	___lldiv@divisor+3,f
  2204  0CD3  0BF8               	decfsz	??___lldiv,f
  2205  0CD4  2CCE               	goto	u1675
  2206  0CD5  3001               	movlw	1
  2207  0CD6  00F8               	movwf	??___lldiv
  2208  0CD7  0878               	movf	??___lldiv,w
  2209  0CD8  07FD               	addwf	___lldiv@counter,f
  2210  0CD9  2CCA               	goto	l1664
  2211  0CDA                     l1666:	
  2212  0CDA  3001               	movlw	1
  2213  0CDB  00F8               	movwf	??___lldiv
  2214  0CDC                     u1695:	
  2215  0CDC  1003               	clrc
  2216  0CDD  0DF9               	rlf	___lldiv@quotient,f
  2217  0CDE  0DFA               	rlf	___lldiv@quotient+1,f
  2218  0CDF  0DFB               	rlf	___lldiv@quotient+2,f
  2219  0CE0  0DFC               	rlf	___lldiv@quotient+3,f
  2220  0CE1  0BF8               	decfsz	??___lldiv,f
  2221  0CE2  2CDC               	goto	u1695
  2222  0CE3  0873               	movf	___lldiv@divisor+3,w
  2223  0CE4  0277               	subwf	___lldiv@dividend+3,w
  2224  0CE5  1D03               	skipz
  2225  0CE6  2CF1               	goto	u1705
  2226  0CE7  0872               	movf	___lldiv@divisor+2,w
  2227  0CE8  0276               	subwf	___lldiv@dividend+2,w
  2228  0CE9  1D03               	skipz
  2229  0CEA  2CF1               	goto	u1705
  2230  0CEB  0871               	movf	___lldiv@divisor+1,w
  2231  0CEC  0275               	subwf	___lldiv@dividend+1,w
  2232  0CED  1D03               	skipz
  2233  0CEE  2CF1               	goto	u1705
  2234  0CEF  0870               	movf	___lldiv@divisor,w
  2235  0CF0  0274               	subwf	___lldiv@dividend,w
  2236  0CF1                     u1705:	
  2237  0CF1  1C03               	skipc
  2238  0CF2  2D02               	goto	l1674
  2239  0CF3  0870               	movf	___lldiv@divisor,w
  2240  0CF4  02F4               	subwf	___lldiv@dividend,f
  2241  0CF5  0871               	movf	___lldiv@divisor+1,w
  2242  0CF6  1C03               	skipc
  2243  0CF7  0F71               	incfsz	___lldiv@divisor+1,w
  2244  0CF8  02F5               	subwf	___lldiv@dividend+1,f
  2245  0CF9  0872               	movf	___lldiv@divisor+2,w
  2246  0CFA  1C03               	skipc
  2247  0CFB  0F72               	incfsz	___lldiv@divisor+2,w
  2248  0CFC  02F6               	subwf	___lldiv@dividend+2,f
  2249  0CFD  0873               	movf	___lldiv@divisor+3,w
  2250  0CFE  1C03               	skipc
  2251  0CFF  0F73               	incfsz	___lldiv@divisor+3,w
  2252  0D00  02F7               	subwf	___lldiv@dividend+3,f
  2253  0D01  1479               	bsf	___lldiv@quotient,0
  2254  0D02                     l1674:	
  2255  0D02  3001               	movlw	1
  2256  0D03                     u1715:	
  2257  0D03  1003               	clrc
  2258  0D04  0CF3               	rrf	___lldiv@divisor+3,f
  2259  0D05  0CF2               	rrf	___lldiv@divisor+2,f
  2260  0D06  0CF1               	rrf	___lldiv@divisor+1,f
  2261  0D07  0CF0               	rrf	___lldiv@divisor,f
  2262  0D08  3EFF               	addlw	-1
  2263  0D09  1D03               	skipz
  2264  0D0A  2D03               	goto	u1715
  2265  0D0B  3001               	movlw	1
  2266  0D0C  02FD               	subwf	___lldiv@counter,f
  2267  0D0D  1D03               	btfss	3,2
  2268  0D0E  2CDA               	goto	l1666
  2269  0D0F                     l1678:	
  2270  0D0F  087C               	movf	___lldiv@quotient+3,w
  2271  0D10  00F3               	movwf	?___lldiv+3
  2272  0D11  087B               	movf	___lldiv@quotient+2,w
  2273  0D12  00F2               	movwf	?___lldiv+2
  2274  0D13  087A               	movf	___lldiv@quotient+1,w
  2275  0D14  00F1               	movwf	?___lldiv+1
  2276  0D15  0879               	movf	___lldiv@quotient,w
  2277  0D16  00F0               	movwf	?___lldiv
  2278  0D17  0008               	return
  2279  0D18                     __end_of___lldiv:	
  2280                           
  2281                           	psect	text6
  2282  026C                     __ptext6:	
  2283 ;; *************** function _mode2 *****************
  2284 ;; Defined at:
  2285 ;;		line 351 in file "../../Source file/PR22.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  temperature_    4   13[BANK0 ] unsigned long 
  2290 ;;  capacitance_    4    9[BANK0 ] unsigned long 
  2291 ;;  capacitance     2   19[BANK0 ] unsigned int 
  2292 ;;  i               1   18[BANK0 ] unsigned char 
  2293 ;;  temperature     1   17[BANK0 ] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;		None               void
  2296 ;; Registers used:
  2297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2303 ;;      Params:         0       0       0       0       0
  2304 ;;      Locals:         0      12       0       0       0
  2305 ;;      Temps:          0       5       0       0       0
  2306 ;;      Totals:         0      17       0       0       0
  2307 ;;Total ram usage:       17 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    3
  2310 ;; This function calls:
  2311 ;;		___awdiv
  2312 ;;		___awmod
  2313 ;;		___lwdiv
  2314 ;;		___lwmod
  2315 ;;		_delay
  2316 ;;		_i2c_start
  2317 ;;		_lcd_clr
  2318 ;;		_lcd_goto
  2319 ;;		_send_char
  2320 ;;		_send_string
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           
  2327                           ;psect for function _mode2
  2328  026C                     _mode2:	
  2329                           
  2330                           ;PR22.c: 353: unsigned char i;
  2331                           ;PR22.c: 354: unsigned char temperature;
  2332                           ;PR22.c: 355: unsigned int capacitance;
  2333                           ;PR22.c: 356: unsigned long capacitance_raw, temperature_raw;
  2334                           ;PR22.c: 358: lcd_goto(20);
  2335                           
  2336                           ;incstack = 0
  2337                           ; Regs used in _mode2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2338  026C  3014               	movlw	20
  2339  026D  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  2340                           
  2341                           ;PR22.c: 359: send_string("Calibrating...  ");
  2342  0272  3001               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2343  0273  120A  158A  229F  120A  118A  	fcall	_send_string
  2344                           
  2345                           ;PR22.c: 362: for(i = 0; i < 7; i++)
  2346  0278  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0279  1303               	bcf	3,6	;RP1=0, select bank0
  2348  027A  01B2               	clrf	mode2@i
  2349  027B  3007               	movlw	7
  2350  027C  0232               	subwf	mode2@i,w
  2351  027D  1803               	btfsc	3,0
  2352  027E  2A90               	goto	l1908
  2353  027F                     l1902:	
  2354                           
  2355                           ;PR22.c: 363: i2c_master_data[i] = i2c_master_rcvb[i] = 0;
  2356  027F  0832               	movf	mode2@i,w
  2357  0280  3E3E               	addlw	(low (_i2c_master_rcvb| 0))& (0+255)
  2358  0281  0084               	movwf	4
  2359  0282  1383               	bcf	3,7	;select IRP bank0
  2360  0283  0180               	clrf	0
  2361  0284  0832               	movf	mode2@i,w
  2362  0285  3E37               	addlw	(low (_i2c_master_data| 0))& (0+255)
  2363  0286  0084               	movwf	4
  2364  0287  0180               	clrf	0
  2365  0288  3001               	movlw	1
  2366  0289  00A4               	movwf	??_mode2
  2367  028A  0824               	movf	??_mode2,w
  2368  028B  07B2               	addwf	mode2@i,f
  2369  028C  3007               	movlw	7
  2370  028D  0232               	subwf	mode2@i,w
  2371  028E  1C03               	skipc
  2372  028F  2A7F               	goto	l1902
  2373  0290                     l1908:	
  2374                           
  2375                           ;PR22.c: 365: i2c_master_data[5] = 0b10000000;
  2376  0290  3080               	movlw	128
  2377  0291  00A4               	movwf	??_mode2
  2378  0292  0824               	movf	??_mode2,w
  2379  0293  00BC               	movwf	_i2c_master_data+5
  2380                           
  2381                           ;PR22.c: 375: i2c_master_data[0] = 0x07;
  2382  0294  3007               	movlw	7
  2383  0295  00A4               	movwf	??_mode2
  2384  0296  0824               	movf	??_mode2,w
  2385  0297  00B7               	movwf	_i2c_master_data
  2386                           
  2387                           ;PR22.c: 376: i2c_master_data[1] = 0b10000000;
  2388  0298  3080               	movlw	128
  2389  0299  00A4               	movwf	??_mode2
  2390  029A  0824               	movf	??_mode2,w
  2391  029B  00B8               	movwf	_i2c_master_data+1
  2392                           
  2393                           ;PR22.c: 382: i2c_master_data[2] = 0b10000001;
  2394  029C  3081               	movlw	129
  2395  029D  00A4               	movwf	??_mode2
  2396  029E  0824               	movf	??_mode2,w
  2397  029F  00B9               	movwf	_i2c_master_data+2
  2398                           
  2399                           ;PR22.c: 383: i2c_master_data[3] = 0b00001011;
  2400  02A0  300B               	movlw	11
  2401  02A1  00A4               	movwf	??_mode2
  2402  02A2  0824               	movf	??_mode2,w
  2403  02A3  00BA               	movwf	_i2c_master_data+3
  2404                           
  2405                           ;PR22.c: 389: i2c_master_data[4] = 0b00010001;
  2406  02A4  3011               	movlw	17
  2407  02A5  00A4               	movwf	??_mode2
  2408  02A6  0824               	movf	??_mode2,w
  2409  02A7  00BB               	movwf	_i2c_master_data+4
  2410  02A8                     l1910:	
  2411                           ;PR22.c: 394: do
  2412                           
  2413                           
  2414                           ;PR22.c: 395: {
  2415                           ;PR22.c: 396: i2c_start(0x90, 6, 0);
  2416  02A8  3006               	movlw	6
  2417  02A9  00A4               	movwf	??_mode2
  2418  02AA  0824               	movf	??_mode2,w
  2419  02AB  00F0               	movwf	i2c_start@size
  2420  02AC  3000               	movlw	0
  2421  02AD  00F1               	movwf	i2c_start@operation
  2422  02AE  00F2               	movwf	i2c_start@operation+1
  2423  02AF  3090               	movlw	144
  2424  02B0  120A  158A  2518  120A  118A  	fcall	_i2c_start
  2425  02B5                     l1912:	
  2426                           ;PR22.c: 398: do
  2427                           
  2428                           
  2429                           ;PR22.c: 399: i2c_start(0x90, 1, 1);
  2430  02B5  01F0               	clrf	i2c_start@size
  2431  02B6  0AF0               	incf	i2c_start@size,f
  2432  02B7  3001               	movlw	1
  2433  02B8  00F1               	movwf	i2c_start@operation
  2434  02B9  3000               	movlw	0
  2435  02BA  00F2               	movwf	i2c_start@operation+1
  2436  02BB  3090               	movlw	144
  2437  02BC  120A  158A  2518  120A  118A  	fcall	_i2c_start
  2438                           
  2439                           ;PR22.c: 400: while(i2c_master_rcvb[0] != 0);
  2440  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2441  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2442  02C3  083E               	movf	_i2c_master_rcvb,w
  2443  02C4  1D03               	btfss	3,2
  2444  02C5  2AB5               	goto	l1912
  2445                           
  2446                           ;PR22.c: 402: i2c_start(0x90, 4, 1);
  2447  02C6  3004               	movlw	4
  2448  02C7  00A4               	movwf	??_mode2
  2449  02C8  0824               	movf	??_mode2,w
  2450  02C9  00F0               	movwf	i2c_start@size
  2451  02CA  3001               	movlw	1
  2452  02CB  00F1               	movwf	i2c_start@operation
  2453  02CC  3000               	movlw	0
  2454  02CD  00F2               	movwf	i2c_start@operation+1
  2455  02CE  3090               	movlw	144
  2456  02CF  120A  158A  2518  120A  118A  	fcall	_i2c_start
  2457                           
  2458                           ;PR22.c: 404: if(i2c_master_data[5] < 0xFF)
  2459  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2460  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2461  02D6  0A3C               	incf	_i2c_master_data+5,w
  2462  02D7  1903               	btfsc	3,2
  2463  02D8  2AE1               	goto	l1924
  2464                           
  2465                           ;PR22.c: 405: {
  2466                           ;PR22.c: 406: if(i2c_master_rcvb[1] != 0)
  2467  02D9  083F               	movf	_i2c_master_rcvb+1,w
  2468  02DA  1903               	btfsc	3,2
  2469  02DB  2AFE               	goto	l1932
  2470                           
  2471                           ;PR22.c: 407: i2c_master_data[5]++;
  2472  02DC  3001               	movlw	1
  2473  02DD  00A4               	movwf	??_mode2
  2474  02DE  0824               	movf	??_mode2,w
  2475  02DF  07BC               	addwf	_i2c_master_data+5,f
  2476                           
  2477                           ;PR22.c: 408: }
  2478  02E0  2AFE               	goto	l1932
  2479  02E1                     l1924:	
  2480                           
  2481                           ;PR22.c: 409: else
  2482                           ;PR22.c: 410: {
  2483                           ;PR22.c: 411: lcd_clr();
  2484  02E1  120A  158A  2277  120A  118A  	fcall	_lcd_clr
  2485                           
  2486                           ;PR22.c: 412: lcd_goto(0);
  2487  02E6  3000               	movlw	0
  2488  02E7  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  2489                           
  2490                           ;PR22.c: 413: send_string("Calibration Fail");
  2491  02EC  3012               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  2492  02ED  120A  158A  229F  120A  118A  	fcall	_send_string
  2493                           
  2494                           ;PR22.c: 414: delay(200000);
  2495  02F2  3000               	movlw	0
  2496  02F3  00F3               	movwf	delay@data+3
  2497  02F4  3003               	movlw	3
  2498  02F5  00F2               	movwf	delay@data+2
  2499  02F6  300D               	movlw	13
  2500  02F7  00F1               	movwf	delay@data+1
  2501  02F8  3040               	movlw	64
  2502  02F9  00F0               	movwf	delay@data
  2503  02FA  120A  158A  22BE   	fcall	_delay
  2504                           
  2505                           ;PR22.c: 415: return;
  2506  02FD  0008               	return
  2507  02FE                     l1932:	
  2508                           
  2509                           ;PR22.c: 416: }
  2510                           ;PR22.c: 417: } while(i2c_master_rcvb[1] != 0);
  2511  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2512  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0300  083F               	movf	_i2c_master_rcvb+1,w
  2514  0301  1D03               	btfss	3,2
  2515  0302  2AA8               	goto	l1910
  2516                           
  2517                           ;PR22.c: 421: lcd_clr();
  2518  0303  120A  158A  2277  120A  118A  	fcall	_lcd_clr
  2519                           
  2520                           ;PR22.c: 422: lcd_goto(0);
  2521  0308  3000               	movlw	0
  2522  0309  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  2523                           
  2524                           ;PR22.c: 423: send_string("Cap.:");
  2525  030E  30BE               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2526  030F  120A  158A  229F  120A  118A  	fcall	_send_string
  2527                           
  2528                           ;PR22.c: 424: lcd_goto(20);
  2529  0314  3014               	movlw	20
  2530  0315  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  2531                           
  2532                           ;PR22.c: 425: send_string("Tem.:");
  2533  031A  30B8               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2534  031B  120A  158A  229F  120A  118A  	fcall	_send_string
  2535  0320                     l1990:	
  2536                           ;PR22.c: 427: while(RA2)
  2537                           
  2538  0320  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0321  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0322  1D05               	btfss	5,2	;volatile
  2541  0323  2CF9               	goto	l1992
  2542  0324                     l1940:	
  2543                           ;PR22.c: 428: {
  2544                           ;PR22.c: 431: do
  2545                           
  2546                           
  2547                           ;PR22.c: 432: i2c_start(0x90, 1, 1);
  2548  0324  01F0               	clrf	i2c_start@size
  2549  0325  0AF0               	incf	i2c_start@size,f
  2550  0326  3001               	movlw	1
  2551  0327  00F1               	movwf	i2c_start@operation
  2552  0328  3000               	movlw	0
  2553  0329  00F2               	movwf	i2c_start@operation+1
  2554  032A  3090               	movlw	144
  2555  032B  120A  158A  2518  120A  118A  	fcall	_i2c_start
  2556                           
  2557                           ;PR22.c: 433: while(i2c_master_rcvb[0] != 0);
  2558  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2559  0331  1303               	bcf	3,6	;RP1=0, select bank0
  2560  0332  083E               	movf	_i2c_master_rcvb,w
  2561  0333  1D03               	btfss	3,2
  2562  0334  2B24               	goto	l1940
  2563                           
  2564                           ;PR22.c: 435: i2c_start(0x90, 7, 1);
  2565  0335  3007               	movlw	7
  2566  0336  00A4               	movwf	??_mode2
  2567  0337  0824               	movf	??_mode2,w
  2568  0338  00F0               	movwf	i2c_start@size
  2569  0339  3001               	movlw	1
  2570  033A  00F1               	movwf	i2c_start@operation
  2571  033B  3000               	movlw	0
  2572  033C  00F2               	movwf	i2c_start@operation+1
  2573  033D  3090               	movlw	144
  2574  033E  120A  158A  2518  120A  118A  	fcall	_i2c_start
  2575                           
  2576                           ;PR22.c: 448: capacitance_raw = i2c_master_rcvb[1];
  2577  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2578  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2579  0345  083F               	movf	_i2c_master_rcvb+1,w
  2580  0346  00A4               	movwf	??_mode2
  2581  0347  01A5               	clrf	??_mode2+1
  2582  0348  01A6               	clrf	??_mode2+2
  2583  0349  01A7               	clrf	??_mode2+3
  2584  034A  0827               	movf	??_mode2+3,w
  2585  034B  00AC               	movwf	mode2@capacitance_raw+3
  2586  034C  0826               	movf	??_mode2+2,w
  2587  034D  00AB               	movwf	mode2@capacitance_raw+2
  2588  034E  0825               	movf	??_mode2+1,w
  2589  034F  00AA               	movwf	mode2@capacitance_raw+1
  2590  0350  0824               	movf	??_mode2,w
  2591  0351  00A9               	movwf	mode2@capacitance_raw
  2592                           
  2593                           ;PR22.c: 449: capacitance_raw <<= 8;
  2594  0352  3008               	movlw	8
  2595  0353  00A4               	movwf	??_mode2
  2596  0354                     u2095:	
  2597  0354  1003               	clrc
  2598  0355  0DA9               	rlf	mode2@capacitance_raw,f
  2599  0356  0DAA               	rlf	mode2@capacitance_raw+1,f
  2600  0357  0DAB               	rlf	mode2@capacitance_raw+2,f
  2601  0358  0DAC               	rlf	mode2@capacitance_raw+3,f
  2602  0359  0BA4               	decfsz	??_mode2,f
  2603  035A  2B54               	goto	u2095
  2604                           
  2605                           ;PR22.c: 450: capacitance_raw += i2c_master_rcvb[2];
  2606  035B  0840               	movf	_i2c_master_rcvb+2,w
  2607  035C  00A4               	movwf	??_mode2
  2608  035D  01A5               	clrf	??_mode2+1
  2609  035E  01A6               	clrf	??_mode2+2
  2610  035F  01A7               	clrf	??_mode2+3
  2611  0360  0824               	movf	??_mode2,w
  2612  0361  07A9               	addwf	mode2@capacitance_raw,f
  2613  0362  0825               	movf	??_mode2+1,w
  2614  0363  1103               	clrz
  2615  0364  1803               	skipnc
  2616  0365  3E01               	addlw	1
  2617  0366  1D03               	btfss	3,2
  2618  0367  07AA               	addwf	mode2@capacitance_raw+1,f
  2619  0368  0826               	movf	??_mode2+2,w
  2620  0369  1103               	clrz
  2621  036A  1803               	skipnc
  2622  036B  3E01               	addlw	1
  2623  036C  1D03               	btfss	3,2
  2624  036D  07AB               	addwf	mode2@capacitance_raw+2,f
  2625  036E  0827               	movf	??_mode2+3,w
  2626  036F  1103               	clrz
  2627  0370  1803               	skipnc
  2628  0371  3E01               	addlw	1
  2629  0372  1D03               	btfss	3,2
  2630  0373  07AC               	addwf	mode2@capacitance_raw+3,f
  2631                           
  2632                           ;PR22.c: 451: capacitance_raw <<= 8;
  2633  0374  3008               	movlw	8
  2634  0375  00A4               	movwf	??_mode2
  2635  0376                     u2115:	
  2636  0376  1003               	clrc
  2637  0377  0DA9               	rlf	mode2@capacitance_raw,f
  2638  0378  0DAA               	rlf	mode2@capacitance_raw+1,f
  2639  0379  0DAB               	rlf	mode2@capacitance_raw+2,f
  2640  037A  0DAC               	rlf	mode2@capacitance_raw+3,f
  2641  037B  0BA4               	decfsz	??_mode2,f
  2642  037C  2B76               	goto	u2115
  2643                           
  2644                           ;PR22.c: 452: capacitance_raw += i2c_master_rcvb[3];
  2645  037D  0841               	movf	_i2c_master_rcvb+3,w
  2646  037E  00A4               	movwf	??_mode2
  2647  037F  01A5               	clrf	??_mode2+1
  2648  0380  01A6               	clrf	??_mode2+2
  2649  0381  01A7               	clrf	??_mode2+3
  2650  0382  0824               	movf	??_mode2,w
  2651  0383  07A9               	addwf	mode2@capacitance_raw,f
  2652  0384  0825               	movf	??_mode2+1,w
  2653  0385  1103               	clrz
  2654  0386  1803               	skipnc
  2655  0387  3E01               	addlw	1
  2656  0388  1D03               	btfss	3,2
  2657  0389  07AA               	addwf	mode2@capacitance_raw+1,f
  2658  038A  0826               	movf	??_mode2+2,w
  2659  038B  1103               	clrz
  2660  038C  1803               	skipnc
  2661  038D  3E01               	addlw	1
  2662  038E  1D03               	btfss	3,2
  2663  038F  07AB               	addwf	mode2@capacitance_raw+2,f
  2664  0390  0827               	movf	??_mode2+3,w
  2665  0391  1103               	clrz
  2666  0392  1803               	skipnc
  2667  0393  3E01               	addlw	1
  2668  0394  1D03               	btfss	3,2
  2669  0395  07AC               	addwf	mode2@capacitance_raw+3,f
  2670                           
  2671                           ;PR22.c: 453: capacitance = capacitance_raw / 2048;
  2672  0396  0829               	movf	mode2@capacitance_raw,w
  2673  0397  00A4               	movwf	??_mode2
  2674  0398  082A               	movf	mode2@capacitance_raw+1,w
  2675  0399  00A5               	movwf	??_mode2+1
  2676  039A  082B               	movf	mode2@capacitance_raw+2,w
  2677  039B  00A6               	movwf	??_mode2+2
  2678  039C  082C               	movf	mode2@capacitance_raw+3,w
  2679  039D  00A7               	movwf	??_mode2+3
  2680  039E  300B               	movlw	11
  2681  039F                     u2135:	
  2682  039F  1003               	clrc
  2683  03A0  0CA7               	rrf	??_mode2+3,f
  2684  03A1  0CA6               	rrf	??_mode2+2,f
  2685  03A2  0CA5               	rrf	??_mode2+1,f
  2686  03A3  0CA4               	rrf	??_mode2,f
  2687  03A4  3EFF               	addlw	-1
  2688  03A5  1D03               	skipz
  2689  03A6  2B9F               	goto	u2135
  2690  03A7  0825               	movf	??_mode2+1,w
  2691  03A8  00B4               	movwf	mode2@capacitance+1
  2692  03A9  0824               	movf	??_mode2,w
  2693  03AA  00B3               	movwf	mode2@capacitance
  2694                           
  2695                           ;PR22.c: 456: temperature_raw = i2c_master_rcvb[4];
  2696  03AB  0842               	movf	_i2c_master_rcvb+4,w
  2697  03AC  00A4               	movwf	??_mode2
  2698  03AD  01A5               	clrf	??_mode2+1
  2699  03AE  01A6               	clrf	??_mode2+2
  2700  03AF  01A7               	clrf	??_mode2+3
  2701  03B0  0827               	movf	??_mode2+3,w
  2702  03B1  00B0               	movwf	mode2@temperature_raw+3
  2703  03B2  0826               	movf	??_mode2+2,w
  2704  03B3  00AF               	movwf	mode2@temperature_raw+2
  2705  03B4  0825               	movf	??_mode2+1,w
  2706  03B5  00AE               	movwf	mode2@temperature_raw+1
  2707  03B6  0824               	movf	??_mode2,w
  2708  03B7  00AD               	movwf	mode2@temperature_raw
  2709                           
  2710                           ;PR22.c: 457: temperature_raw <<= 8;
  2711  03B8  3008               	movlw	8
  2712  03B9  00A4               	movwf	??_mode2
  2713  03BA                     u2145:	
  2714  03BA  1003               	clrc
  2715  03BB  0DAD               	rlf	mode2@temperature_raw,f
  2716  03BC  0DAE               	rlf	mode2@temperature_raw+1,f
  2717  03BD  0DAF               	rlf	mode2@temperature_raw+2,f
  2718  03BE  0DB0               	rlf	mode2@temperature_raw+3,f
  2719  03BF  0BA4               	decfsz	??_mode2,f
  2720  03C0  2BBA               	goto	u2145
  2721                           
  2722                           ;PR22.c: 458: temperature_raw += i2c_master_rcvb[5];
  2723  03C1  0843               	movf	_i2c_master_rcvb+5,w
  2724  03C2  00A4               	movwf	??_mode2
  2725  03C3  01A5               	clrf	??_mode2+1
  2726  03C4  01A6               	clrf	??_mode2+2
  2727  03C5  01A7               	clrf	??_mode2+3
  2728  03C6  0824               	movf	??_mode2,w
  2729  03C7  07AD               	addwf	mode2@temperature_raw,f
  2730  03C8  0825               	movf	??_mode2+1,w
  2731  03C9  1103               	clrz
  2732  03CA  1803               	skipnc
  2733  03CB  3E01               	addlw	1
  2734  03CC  1D03               	btfss	3,2
  2735  03CD  07AE               	addwf	mode2@temperature_raw+1,f
  2736  03CE  0826               	movf	??_mode2+2,w
  2737  03CF  1103               	clrz
  2738  03D0  1803               	skipnc
  2739  03D1  3E01               	addlw	1
  2740  03D2  1D03               	btfss	3,2
  2741  03D3  07AF               	addwf	mode2@temperature_raw+2,f
  2742  03D4  0827               	movf	??_mode2+3,w
  2743  03D5  1103               	clrz
  2744  03D6  1803               	skipnc
  2745  03D7  3E01               	addlw	1
  2746  03D8  1D03               	btfss	3,2
  2747  03D9  07B0               	addwf	mode2@temperature_raw+3,f
  2748                           
  2749                           ;PR22.c: 459: temperature_raw <<= 8;
  2750  03DA  3008               	movlw	8
  2751  03DB  00A4               	movwf	??_mode2
  2752  03DC                     u2165:	
  2753  03DC  1003               	clrc
  2754  03DD  0DAD               	rlf	mode2@temperature_raw,f
  2755  03DE  0DAE               	rlf	mode2@temperature_raw+1,f
  2756  03DF  0DAF               	rlf	mode2@temperature_raw+2,f
  2757  03E0  0DB0               	rlf	mode2@temperature_raw+3,f
  2758  03E1  0BA4               	decfsz	??_mode2,f
  2759  03E2  2BDC               	goto	u2165
  2760                           
  2761                           ;PR22.c: 460: temperature_raw += i2c_master_rcvb[6];
  2762  03E3  0844               	movf	_i2c_master_rcvb+6,w
  2763  03E4  00A4               	movwf	??_mode2
  2764  03E5  01A5               	clrf	??_mode2+1
  2765  03E6  01A6               	clrf	??_mode2+2
  2766  03E7  01A7               	clrf	??_mode2+3
  2767  03E8  0824               	movf	??_mode2,w
  2768  03E9  07AD               	addwf	mode2@temperature_raw,f
  2769  03EA  0825               	movf	??_mode2+1,w
  2770  03EB  1103               	clrz
  2771  03EC  1803               	skipnc
  2772  03ED  3E01               	addlw	1
  2773  03EE  1D03               	btfss	3,2
  2774  03EF  07AE               	addwf	mode2@temperature_raw+1,f
  2775  03F0  0826               	movf	??_mode2+2,w
  2776  03F1  1103               	clrz
  2777  03F2  1803               	skipnc
  2778  03F3  3E01               	addlw	1
  2779  03F4  1D03               	btfss	3,2
  2780  03F5  07AF               	addwf	mode2@temperature_raw+2,f
  2781  03F6  0827               	movf	??_mode2+3,w
  2782  03F7  1103               	clrz
  2783  03F8  1803               	skipnc
  2784  03F9  3E01               	addlw	1
  2785  03FA  1D03               	btfss	3,2
  2786  03FB  07B0               	addwf	mode2@temperature_raw+3,f
  2787                           
  2788                           ;PR22.c: 461: temperature = (temperature_raw / 2048) - 4096;
  2789  03FC  082D               	movf	mode2@temperature_raw,w
  2790  03FD  00A4               	movwf	??_mode2
  2791  03FE  082E               	movf	mode2@temperature_raw+1,w
  2792  03FF  00A5               	movwf	??_mode2+1
  2793  0400  082F               	movf	mode2@temperature_raw+2,w
  2794  0401  00A6               	movwf	??_mode2+2
  2795  0402  0830               	movf	mode2@temperature_raw+3,w
  2796  0403  00A7               	movwf	??_mode2+3
  2797  0404  300B               	movlw	11
  2798  0405                     u2185:	
  2799  0405  1003               	clrc
  2800  0406  0CA7               	rrf	??_mode2+3,f
  2801  0407  0CA6               	rrf	??_mode2+2,f
  2802  0408  0CA5               	rrf	??_mode2+1,f
  2803  0409  0CA4               	rrf	??_mode2,f
  2804  040A  3EFF               	addlw	-1
  2805  040B  1D03               	skipz
  2806  040C  2C05               	goto	u2185
  2807  040D  0824               	movf	??_mode2,w
  2808  040E  00A8               	movwf	??_mode2+4
  2809  040F  0828               	movf	??_mode2+4,w
  2810  0410  00B1               	movwf	mode2@temperature
  2811                           
  2812                           ;PR22.c: 464: lcd_goto(6);
  2813  0411  3006               	movlw	6
  2814  0412  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  2815                           
  2816                           ;PR22.c: 465: if(capacitance >= 8191)
  2817  0417  301F               	movlw	31
  2818  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2820  041A  0234               	subwf	mode2@capacitance+1,w
  2821  041B  30FF               	movlw	255
  2822  041C  1903               	skipnz
  2823  041D  0233               	subwf	mode2@capacitance,w
  2824  041E  1C03               	skipc
  2825  041F  2C22               	goto	l1976
  2826                           
  2827                           ;PR22.c: 466: send_string("Saturated");
  2828  0420  307F               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  2829  0421  2C9B               	goto	L2
  2830  0422                     l1976:	
  2831                           
  2832                           ;PR22.c: 467: else
  2833                           ;PR22.c: 468: {
  2834                           ;PR22.c: 469: send_char('0' + capacitance / 1000);
  2835  0422  30E8               	movlw	232
  2836  0423  00F6               	movwf	___lwdiv@divisor
  2837  0424  3003               	movlw	3
  2838  0425  00F7               	movwf	___lwdiv@divisor+1
  2839  0426  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0427  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0428  0834               	movf	mode2@capacitance+1,w
  2842  0429  00F9               	movwf	___lwdiv@dividend+1
  2843  042A  0833               	movf	mode2@capacitance,w
  2844  042B  00F8               	movwf	___lwdiv@dividend
  2845  042C  120A  158A  2359  120A  118A  	fcall	___lwdiv
  2846  0431  0876               	movf	?___lwdiv,w
  2847  0432  3E30               	addlw	48
  2848  0433  120A  158A  2304  120A  118A  	fcall	_send_char
  2849                           
  2850                           ;PR22.c: 470: send_char('.');
  2851  0438  302E               	movlw	46
  2852  0439  120A  158A  2304  120A  118A  	fcall	_send_char
  2853                           
  2854                           ;PR22.c: 471: send_char('0' + (capacitance % 1000) / 100);
  2855  043E  3064               	movlw	100
  2856  043F  00F6               	movwf	___lwdiv@divisor
  2857  0440  3000               	movlw	0
  2858  0441  00F7               	movwf	___lwdiv@divisor+1
  2859  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2860  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2861  0444  0834               	movf	mode2@capacitance+1,w
  2862  0445  00F3               	movwf	___lwmod@dividend+1
  2863  0446  0833               	movf	mode2@capacitance,w
  2864  0447  00F2               	movwf	___lwmod@dividend
  2865  0448  30E8               	movlw	232
  2866  0449  00F0               	movwf	___lwmod@divisor
  2867  044A  3003               	movlw	3
  2868  044B  00F1               	movwf	___lwmod@divisor+1
  2869  044C  120A  158A  2327  120A  118A  	fcall	___lwmod
  2870  0451  0871               	movf	?___lwmod+1,w
  2871  0452  00F9               	movwf	___lwdiv@dividend+1
  2872  0453  0870               	movf	?___lwmod,w
  2873  0454  00F8               	movwf	___lwdiv@dividend
  2874  0455  120A  158A  2359  120A  118A  	fcall	___lwdiv
  2875  045A  0876               	movf	?___lwdiv,w
  2876  045B  3E30               	addlw	48
  2877  045C  120A  158A  2304  120A  118A  	fcall	_send_char
  2878                           
  2879                           ;PR22.c: 472: send_char('0' + (capacitance % 100) / 10);
  2880  0461  300A               	movlw	10
  2881  0462  00F6               	movwf	___lwdiv@divisor
  2882  0463  3000               	movlw	0
  2883  0464  00F7               	movwf	___lwdiv@divisor+1
  2884  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2885  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2886  0467  0834               	movf	mode2@capacitance+1,w
  2887  0468  00F3               	movwf	___lwmod@dividend+1
  2888  0469  0833               	movf	mode2@capacitance,w
  2889  046A  00F2               	movwf	___lwmod@dividend
  2890  046B  3064               	movlw	100
  2891  046C  00F0               	movwf	___lwmod@divisor
  2892  046D  3000               	movlw	0
  2893  046E  00F1               	movwf	___lwmod@divisor+1
  2894  046F  120A  158A  2327  120A  118A  	fcall	___lwmod
  2895  0474  0871               	movf	?___lwmod+1,w
  2896  0475  00F9               	movwf	___lwdiv@dividend+1
  2897  0476  0870               	movf	?___lwmod,w
  2898  0477  00F8               	movwf	___lwdiv@dividend
  2899  0478  120A  158A  2359  120A  118A  	fcall	___lwdiv
  2900  047D  0876               	movf	?___lwdiv,w
  2901  047E  3E30               	addlw	48
  2902  047F  120A  158A  2304  120A  118A  	fcall	_send_char
  2903                           
  2904                           ;PR22.c: 473: send_char('0' + (capacitance % 10));
  2905  0484  300A               	movlw	10
  2906  0485  00F0               	movwf	___lwmod@divisor
  2907  0486  3000               	movlw	0
  2908  0487  00F1               	movwf	___lwmod@divisor+1
  2909  0488  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0489  1303               	bcf	3,6	;RP1=0, select bank0
  2911  048A  0834               	movf	mode2@capacitance+1,w
  2912  048B  00F3               	movwf	___lwmod@dividend+1
  2913  048C  0833               	movf	mode2@capacitance,w
  2914  048D  00F2               	movwf	___lwmod@dividend
  2915  048E  120A  158A  2327  120A  118A  	fcall	___lwmod
  2916  0493  0870               	movf	?___lwmod,w
  2917  0494  3E30               	addlw	48
  2918  0495  120A  158A  2304  120A  118A  	fcall	_send_char
  2919                           
  2920                           ;PR22.c: 474: send_string("pF  ");
  2921  049A  30C4               	movlw	(low ((STR_24-__stringbase)| (0+32768)))& (0+255)
  2922  049B                     L2:	
  2923  049B  120A  158A  229F  120A  118A  	fcall	_send_string
  2924                           
  2925                           ;PR22.c: 475: }
  2926                           ;PR22.c: 478: lcd_goto(26);
  2927  04A0  301A               	movlw	26
  2928  04A1  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  2929                           
  2930                           ;PR22.c: 479: send_char('0' + (temperature % 100) / 10);
  2931  04A6  300A               	movlw	10
  2932  04A7  00F7               	movwf	___awdiv@divisor
  2933  04A8  3000               	movlw	0
  2934  04A9  00F8               	movwf	___awdiv@divisor+1
  2935  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2936  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2937  04AC  0831               	movf	mode2@temperature,w
  2938  04AD  00A4               	movwf	??_mode2
  2939  04AE  01A5               	clrf	??_mode2+1
  2940  04AF  0824               	movf	??_mode2,w
  2941  04B0  00F2               	movwf	___awmod@dividend
  2942  04B1  0825               	movf	??_mode2+1,w
  2943  04B2  00F3               	movwf	___awmod@dividend+1
  2944  04B3  3064               	movlw	100
  2945  04B4  00F0               	movwf	___awmod@divisor
  2946  04B5  3000               	movlw	0
  2947  04B6  00F1               	movwf	___awmod@divisor+1
  2948  04B7  120A  158A  2423  120A  118A  	fcall	___awmod
  2949  04BC  0871               	movf	?___awmod+1,w
  2950  04BD  00FA               	movwf	___awdiv@dividend+1
  2951  04BE  0870               	movf	?___awmod,w
  2952  04BF  00F9               	movwf	___awdiv@dividend
  2953  04C0  120A  118A  20E9  120A  118A  	fcall	___awdiv
  2954  04C5  0877               	movf	?___awdiv,w
  2955  04C6  3E30               	addlw	48
  2956  04C7  120A  158A  2304  120A  118A  	fcall	_send_char
  2957                           
  2958                           ;PR22.c: 480: send_char('0' + (temperature % 10));
  2959  04CC  300A               	movlw	10
  2960  04CD  00F0               	movwf	___awmod@divisor
  2961  04CE  3000               	movlw	0
  2962  04CF  00F1               	movwf	___awmod@divisor+1
  2963  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2964  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2965  04D2  0831               	movf	mode2@temperature,w
  2966  04D3  00A4               	movwf	??_mode2
  2967  04D4  01A5               	clrf	??_mode2+1
  2968  04D5  0824               	movf	??_mode2,w
  2969  04D6  00F2               	movwf	___awmod@dividend
  2970  04D7  0825               	movf	??_mode2+1,w
  2971  04D8  00F3               	movwf	___awmod@dividend+1
  2972  04D9  120A  158A  2423  120A  118A  	fcall	___awmod
  2973  04DE  0870               	movf	?___awmod,w
  2974  04DF  3E30               	addlw	48
  2975  04E0  120A  158A  2304  120A  118A  	fcall	_send_char
  2976                           
  2977                           ;PR22.c: 481: send_char('C');
  2978  04E5  3043               	movlw	67
  2979  04E6  120A  158A  2304  120A  118A  	fcall	_send_char
  2980                           
  2981                           ;PR22.c: 483: delay(10000);
  2982  04EB  3000               	movlw	0
  2983  04EC  00F3               	movwf	delay@data+3
  2984  04ED  3000               	movlw	0
  2985  04EE  00F2               	movwf	delay@data+2
  2986  04EF  3027               	movlw	39
  2987  04F0  00F1               	movwf	delay@data+1
  2988  04F1  3010               	movlw	16
  2989  04F2  00F0               	movwf	delay@data
  2990  04F3  120A  158A  22BE  120A  118A  	fcall	_delay
  2991  04F8  2B20               	goto	l1990
  2992  04F9                     l1992:	
  2993                           
  2994                           ;PR22.c: 484: }
  2995                           ;PR22.c: 486: delay(10000);
  2996  04F9  3000               	movlw	0
  2997  04FA  00F3               	movwf	delay@data+3
  2998  04FB  3000               	movlw	0
  2999  04FC  00F2               	movwf	delay@data+2
  3000  04FD  3027               	movlw	39
  3001  04FE  00F1               	movwf	delay@data+1
  3002  04FF  3010               	movlw	16
  3003  0500  00F0               	movwf	delay@data
  3004  0501  120A  158A  22BE  120A  118A  	fcall	_delay
  3005  0506                     l181:	
  3006                           ;PR22.c: 487: while(!RA2);
  3007                           
  3008  0506  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0507  1303               	bcf	3,6	;RP1=0, select bank0
  3010  0508  1D05               	btfss	5,2	;volatile
  3011  0509  2D06               	goto	l181
  3012                           
  3013                           ;PR22.c: 488: delay(10000);
  3014  050A  3000               	movlw	0
  3015  050B  00F3               	movwf	delay@data+3
  3016  050C  3000               	movlw	0
  3017  050D  00F2               	movwf	delay@data+2
  3018  050E  3027               	movlw	39
  3019  050F  00F1               	movwf	delay@data+1
  3020  0510  3010               	movlw	16
  3021  0511  00F0               	movwf	delay@data
  3022  0512  120A  158A  22BE   	fcall	_delay
  3023  0515  0008               	return
  3024  0516                     __end_of_mode2:	
  3025                           
  3026                           	psect	text7
  3027  0C23                     __ptext7:	
  3028 ;; *************** function ___awmod *****************
  3029 ;; Defined at:
  3030 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  divisor         2    0[COMMON] int 
  3033 ;;  dividend        2    2[COMMON] int 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  sign            1    6[COMMON] unsigned char 
  3036 ;;  counter         1    5[COMMON] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2    0[COMMON] int 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3046 ;;      Params:         4       0       0       0       0
  3047 ;;      Locals:         2       0       0       0       0
  3048 ;;      Temps:          1       0       0       0       0
  3049 ;;      Totals:         7       0       0       0       0
  3050 ;;Total ram usage:        7 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_mode2
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           
  3060                           ;psect for function ___awmod
  3061  0C23                     ___awmod:	
  3062                           
  3063                           ;incstack = 0
  3064                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3065  0C23  01F6               	clrf	___awmod@sign
  3066  0C24  1FF3               	btfss	___awmod@dividend+1,7
  3067  0C25  2C2D               	goto	l1628
  3068  0C26  09F2               	comf	___awmod@dividend,f
  3069  0C27  09F3               	comf	___awmod@dividend+1,f
  3070  0C28  0AF2               	incf	___awmod@dividend,f
  3071  0C29  1903               	skipnz
  3072  0C2A  0AF3               	incf	___awmod@dividend+1,f
  3073  0C2B  01F6               	clrf	___awmod@sign
  3074  0C2C  0AF6               	incf	___awmod@sign,f
  3075  0C2D                     l1628:	
  3076  0C2D  1FF1               	btfss	___awmod@divisor+1,7
  3077  0C2E  2C34               	goto	l1632
  3078  0C2F  09F0               	comf	___awmod@divisor,f
  3079  0C30  09F1               	comf	___awmod@divisor+1,f
  3080  0C31  0AF0               	incf	___awmod@divisor,f
  3081  0C32  1903               	skipnz
  3082  0C33  0AF1               	incf	___awmod@divisor+1,f
  3083  0C34                     l1632:	
  3084  0C34  0870               	movf	___awmod@divisor,w
  3085  0C35  0471               	iorwf	___awmod@divisor+1,w
  3086  0C36  1903               	btfsc	3,2
  3087  0C37  2C61               	goto	l1650
  3088  0C38  01F5               	clrf	___awmod@counter
  3089  0C39  0AF5               	incf	___awmod@counter,f
  3090  0C3A                     l1640:	
  3091  0C3A  1BF1               	btfsc	___awmod@divisor+1,7
  3092  0C3B  2C48               	goto	l1642
  3093  0C3C  3001               	movlw	1
  3094  0C3D                     u1605:	
  3095  0C3D  1003               	clrc
  3096  0C3E  0DF0               	rlf	___awmod@divisor,f
  3097  0C3F  0DF1               	rlf	___awmod@divisor+1,f
  3098  0C40  3EFF               	addlw	-1
  3099  0C41  1D03               	skipz
  3100  0C42  2C3D               	goto	u1605
  3101  0C43  3001               	movlw	1
  3102  0C44  00F4               	movwf	??___awmod
  3103  0C45  0874               	movf	??___awmod,w
  3104  0C46  07F5               	addwf	___awmod@counter,f
  3105  0C47  2C3A               	goto	l1640
  3106  0C48                     l1642:	
  3107  0C48  0871               	movf	___awmod@divisor+1,w
  3108  0C49  0273               	subwf	___awmod@dividend+1,w
  3109  0C4A  1D03               	skipz
  3110  0C4B  2C4E               	goto	u1625
  3111  0C4C  0870               	movf	___awmod@divisor,w
  3112  0C4D  0272               	subwf	___awmod@dividend,w
  3113  0C4E                     u1625:	
  3114  0C4E  1C03               	skipc
  3115  0C4F  2C56               	goto	l1646
  3116  0C50  0870               	movf	___awmod@divisor,w
  3117  0C51  02F2               	subwf	___awmod@dividend,f
  3118  0C52  0871               	movf	___awmod@divisor+1,w
  3119  0C53  1C03               	skipc
  3120  0C54  03F3               	decf	___awmod@dividend+1,f
  3121  0C55  02F3               	subwf	___awmod@dividend+1,f
  3122  0C56                     l1646:	
  3123  0C56  3001               	movlw	1
  3124  0C57                     u1635:	
  3125  0C57  1003               	clrc
  3126  0C58  0CF1               	rrf	___awmod@divisor+1,f
  3127  0C59  0CF0               	rrf	___awmod@divisor,f
  3128  0C5A  3EFF               	addlw	-1
  3129  0C5B  1D03               	skipz
  3130  0C5C  2C57               	goto	u1635
  3131  0C5D  3001               	movlw	1
  3132  0C5E  02F5               	subwf	___awmod@counter,f
  3133  0C5F  1D03               	btfss	3,2
  3134  0C60  2C48               	goto	l1642
  3135  0C61                     l1650:	
  3136  0C61  0876               	movf	___awmod@sign,w
  3137  0C62  1903               	btfsc	3,2
  3138  0C63  2C69               	goto	l1654
  3139  0C64  09F2               	comf	___awmod@dividend,f
  3140  0C65  09F3               	comf	___awmod@dividend+1,f
  3141  0C66  0AF2               	incf	___awmod@dividend,f
  3142  0C67  1903               	skipnz
  3143  0C68  0AF3               	incf	___awmod@dividend+1,f
  3144  0C69                     l1654:	
  3145  0C69  0873               	movf	___awmod@dividend+1,w
  3146  0C6A  00F1               	movwf	?___awmod+1
  3147  0C6B  0872               	movf	___awmod@dividend,w
  3148  0C6C  00F0               	movwf	?___awmod
  3149  0C6D  0008               	return
  3150  0C6E                     __end_of___awmod:	
  3151                           
  3152                           	psect	text8
  3153  00E9                     __ptext8:	
  3154 ;; *************** function ___awdiv *****************
  3155 ;; Defined at:
  3156 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  divisor         2    7[COMMON] int 
  3159 ;;  dividend        2    9[COMMON] int 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  quotient        2    2[BANK0 ] int 
  3162 ;;  sign            1    1[BANK0 ] unsigned char 
  3163 ;;  counter         1    0[BANK0 ] unsigned char 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  2    7[COMMON] int 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2, status,0
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3173 ;;      Params:         4       0       0       0       0
  3174 ;;      Locals:         0       4       0       0       0
  3175 ;;      Temps:          1       0       0       0       0
  3176 ;;      Totals:         5       4       0       0       0
  3177 ;;Total ram usage:        9 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_mode2
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           
  3187                           ;psect for function ___awdiv
  3188  00E9                     ___awdiv:	
  3189                           
  3190                           ;incstack = 0
  3191                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3192  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  3193  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  3194  00EB  01A1               	clrf	___awdiv@sign
  3195  00EC  1FF8               	btfss	___awdiv@divisor+1,7
  3196  00ED  28F5               	goto	l1584
  3197  00EE  09F7               	comf	___awdiv@divisor,f
  3198  00EF  09F8               	comf	___awdiv@divisor+1,f
  3199  00F0  0AF7               	incf	___awdiv@divisor,f
  3200  00F1  1903               	skipnz
  3201  00F2  0AF8               	incf	___awdiv@divisor+1,f
  3202  00F3  01A1               	clrf	___awdiv@sign
  3203  00F4  0AA1               	incf	___awdiv@sign,f
  3204  00F5                     l1584:	
  3205  00F5  1FFA               	btfss	___awdiv@dividend+1,7
  3206  00F6  2900               	goto	l1590
  3207  00F7  09F9               	comf	___awdiv@dividend,f
  3208  00F8  09FA               	comf	___awdiv@dividend+1,f
  3209  00F9  0AF9               	incf	___awdiv@dividend,f
  3210  00FA  1903               	skipnz
  3211  00FB  0AFA               	incf	___awdiv@dividend+1,f
  3212  00FC  3001               	movlw	1
  3213  00FD  00FB               	movwf	??___awdiv
  3214  00FE  087B               	movf	??___awdiv,w
  3215  00FF  06A1               	xorwf	___awdiv@sign,f
  3216  0100                     l1590:	
  3217  0100  01A2               	clrf	___awdiv@quotient
  3218  0101  01A3               	clrf	___awdiv@quotient+1
  3219  0102  0877               	movf	___awdiv@divisor,w
  3220  0103  0478               	iorwf	___awdiv@divisor+1,w
  3221  0104  1903               	btfsc	3,2
  3222  0105  2937               	goto	l1612
  3223  0106  01A0               	clrf	___awdiv@counter
  3224  0107  0AA0               	incf	___awdiv@counter,f
  3225  0108                     l1600:	
  3226  0108  1BF8               	btfsc	___awdiv@divisor+1,7
  3227  0109  2916               	goto	l1602
  3228  010A  3001               	movlw	1
  3229  010B                     u1505:	
  3230  010B  1003               	clrc
  3231  010C  0DF7               	rlf	___awdiv@divisor,f
  3232  010D  0DF8               	rlf	___awdiv@divisor+1,f
  3233  010E  3EFF               	addlw	-1
  3234  010F  1D03               	skipz
  3235  0110  290B               	goto	u1505
  3236  0111  3001               	movlw	1
  3237  0112  00FB               	movwf	??___awdiv
  3238  0113  087B               	movf	??___awdiv,w
  3239  0114  07A0               	addwf	___awdiv@counter,f
  3240  0115  2908               	goto	l1600
  3241  0116                     l1602:	
  3242  0116  3001               	movlw	1
  3243  0117                     u1525:	
  3244  0117  1003               	clrc
  3245  0118  0DA2               	rlf	___awdiv@quotient,f
  3246  0119  0DA3               	rlf	___awdiv@quotient+1,f
  3247  011A  3EFF               	addlw	-1
  3248  011B  1D03               	skipz
  3249  011C  2917               	goto	u1525
  3250  011D  0878               	movf	___awdiv@divisor+1,w
  3251  011E  027A               	subwf	___awdiv@dividend+1,w
  3252  011F  1D03               	skipz
  3253  0120  2923               	goto	u1535
  3254  0121  0877               	movf	___awdiv@divisor,w
  3255  0122  0279               	subwf	___awdiv@dividend,w
  3256  0123                     u1535:	
  3257  0123  1C03               	skipc
  3258  0124  292C               	goto	l1608
  3259  0125  0877               	movf	___awdiv@divisor,w
  3260  0126  02F9               	subwf	___awdiv@dividend,f
  3261  0127  0878               	movf	___awdiv@divisor+1,w
  3262  0128  1C03               	skipc
  3263  0129  03FA               	decf	___awdiv@dividend+1,f
  3264  012A  02FA               	subwf	___awdiv@dividend+1,f
  3265  012B  1422               	bsf	___awdiv@quotient,0
  3266  012C                     l1608:	
  3267  012C  3001               	movlw	1
  3268  012D                     u1545:	
  3269  012D  1003               	clrc
  3270  012E  0CF8               	rrf	___awdiv@divisor+1,f
  3271  012F  0CF7               	rrf	___awdiv@divisor,f
  3272  0130  3EFF               	addlw	-1
  3273  0131  1D03               	skipz
  3274  0132  292D               	goto	u1545
  3275  0133  3001               	movlw	1
  3276  0134  02A0               	subwf	___awdiv@counter,f
  3277  0135  1D03               	btfss	3,2
  3278  0136  2916               	goto	l1602
  3279  0137                     l1612:	
  3280  0137  0821               	movf	___awdiv@sign,w
  3281  0138  1903               	btfsc	3,2
  3282  0139  293F               	goto	l1616
  3283  013A  09A2               	comf	___awdiv@quotient,f
  3284  013B  09A3               	comf	___awdiv@quotient+1,f
  3285  013C  0AA2               	incf	___awdiv@quotient,f
  3286  013D  1903               	skipnz
  3287  013E  0AA3               	incf	___awdiv@quotient+1,f
  3288  013F                     l1616:	
  3289  013F  0823               	movf	___awdiv@quotient+1,w
  3290  0140  00F8               	movwf	?___awdiv+1
  3291  0141  0822               	movf	___awdiv@quotient,w
  3292  0142  00F7               	movwf	?___awdiv
  3293  0143  0008               	return
  3294  0144                     __end_of___awdiv:	
  3295                           
  3296                           	psect	text9
  3297  0516                     __ptext9:	
  3298 ;; *************** function _mode1 *****************
  3299 ;; Defined at:
  3300 ;;		line 193 in file "../../Source file/PR22.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  result          2    2[BANK0 ] unsigned int 
  3305 ;;  submode         1    4[BANK0 ] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;		None               void
  3308 ;; Registers used:
  3309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       0       0       0       0
  3316 ;;      Locals:         0       3       0       0       0
  3317 ;;      Temps:          0       2       0       0       0
  3318 ;;      Totals:         0       5       0       0       0
  3319 ;;Total ram usage:        5 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    3
  3322 ;; This function calls:
  3323 ;;		___lwdiv
  3324 ;;		___lwmod
  3325 ;;		_delay
  3326 ;;		_i2c_start
  3327 ;;		_lcd_clr
  3328 ;;		_lcd_goto
  3329 ;;		_send_char
  3330 ;;		_send_string
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function _mode1
  3338  0516                     _mode1:	
  3339                           
  3340                           ;PR22.c: 195: unsigned int result;
  3341                           ;PR22.c: 196: unsigned char submode = 1;
  3342                           
  3343                           ;incstack = 0
  3344                           ; Regs used in _mode1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3345  0516  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0517  1303               	bcf	3,6	;RP1=0, select bank0
  3347  0518  01A4               	clrf	mode1@submode
  3348  0519  0AA4               	incf	mode1@submode,f
  3349                           
  3350                           ;PR22.c: 198: lcd_clr();
  3351  051A  120A  158A  2277  120A  118A  	fcall	_lcd_clr
  3352  051F                     l124:	
  3353                           ;PR22.c: 199: while(1)
  3354                           
  3355                           
  3356                           ;PR22.c: 200: {
  3357                           ;PR22.c: 201: lcd_goto(20);
  3358  051F  3014               	movlw	20
  3359  0520  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  3360                           
  3361                           ;PR22.c: 202: send_string("OK");
  3362  0525  30DC               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3363  0526  120A  158A  229F  120A  118A  	fcall	_send_string
  3364                           
  3365                           ;PR22.c: 204: if(!RA0)
  3366  052B  1283               	bcf	3,5	;RP0=0, select bank0
  3367  052C  1303               	bcf	3,6	;RP1=0, select bank0
  3368  052D  1805               	btfsc	5,0	;volatile
  3369  052E  2D36               	goto	l125
  3370                           
  3371                           ;PR22.c: 205: {
  3372                           ;PR22.c: 207: if(submode > 1)
  3373  052F  3002               	movlw	2
  3374  0530  0224               	subwf	mode1@submode,w
  3375  0531  1C03               	skipc
  3376  0532  2D40               	goto	l1766
  3377                           
  3378                           ;PR22.c: 208: submode--;
  3379  0533  3001               	movlw	1
  3380  0534  02A4               	subwf	mode1@submode,f
  3381                           
  3382                           ;PR22.c: 209: }
  3383  0535  2D40               	goto	l1766
  3384  0536                     l125:	
  3385                           
  3386                           ;PR22.c: 210: else if(!RA1)
  3387  0536  1885               	btfsc	5,1	;volatile
  3388  0537  2D40               	goto	l1766
  3389                           
  3390                           ;PR22.c: 211: {
  3391                           ;PR22.c: 213: if(submode < 4)
  3392  0538  3004               	movlw	4
  3393  0539  0224               	subwf	mode1@submode,w
  3394  053A  1803               	skipnc
  3395  053B  2D40               	goto	l1766
  3396                           
  3397                           ;PR22.c: 214: submode++;
  3398  053C  3001               	movlw	1
  3399  053D  00A0               	movwf	??_mode1
  3400  053E  0820               	movf	??_mode1,w
  3401  053F  07A4               	addwf	mode1@submode,f
  3402  0540                     l1766:	
  3403                           
  3404                           ;PR22.c: 215: }
  3405                           ;PR22.c: 218: lcd_goto(0);
  3406  0540  3000               	movlw	0
  3407  0541  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  3408                           
  3409                           ;PR22.c: 219: switch(submode)
  3410  0546  2D63               	goto	l1778
  3411  0547                     l1768:	
  3412                           ;PR22.c: 220: {
  3413                           ;PR22.c: 221: case 1 : send_string("Heading Output?");
  3414                           
  3415  0547  3053               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3416  0548  120A  158A  229F  120A  118A  	fcall	_send_string
  3417                           
  3418                           ;PR22.c: 222: break;
  3419  054D  2D73               	goto	l132
  3420  054E                     l1770:	
  3421                           ;PR22.c: 224: case 2 : send_string("Calibration?   ");
  3422                           
  3423  054E  3033               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3424  054F  120A  158A  229F  120A  118A  	fcall	_send_string
  3425                           
  3426                           ;PR22.c: 225: break;
  3427  0554  2D73               	goto	l132
  3428  0555                     l1772:	
  3429                           ;PR22.c: 227: case 3 : send_string("Reset Offset?  ");
  3430                           
  3431  0555  3043               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3432  0556  120A  158A  229F  120A  118A  	fcall	_send_string
  3433                           
  3434                           ;PR22.c: 228: break;
  3435  055B  2D73               	goto	l132
  3436  055C                     l1774:	
  3437                           ;PR22.c: 230: case 4 : send_string("Exit?          ");
  3438                           
  3439  055C  3023               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3440  055D  120A  158A  229F  120A  118A  	fcall	_send_string
  3441                           
  3442                           ;PR22.c: 232: }
  3443                           
  3444                           ;PR22.c: 231: break;
  3445  0562  2D73               	goto	l132
  3446  0563                     l1778:	
  3447  0563  1283               	bcf	3,5	;RP0=0, select bank0
  3448  0564  1303               	bcf	3,6	;RP1=0, select bank0
  3449  0565  0824               	movf	mode1@submode,w
  3450                           
  3451                           ; Switch size 1, requested type "space"
  3452                           ; Number of cases is 4, Range of values is 1 to 4
  3453                           ; switch strategies available:
  3454                           ; Name         Instructions Cycles
  3455                           ; simple_byte           13     7 (average)
  3456                           ; direct_byte           23    11 (fixed)
  3457                           ; jumptable            263     9 (fixed)
  3458                           ;	Chosen strategy is simple_byte
  3459  0566  3A01               	xorlw	1	; case 1
  3460  0567  1903               	skipnz
  3461  0568  2D47               	goto	l1768
  3462  0569  3A03               	xorlw	3	; case 2
  3463  056A  1903               	skipnz
  3464  056B  2D4E               	goto	l1770
  3465  056C  3A01               	xorlw	1	; case 3
  3466  056D  1903               	skipnz
  3467  056E  2D55               	goto	l1772
  3468  056F  3A07               	xorlw	7	; case 4
  3469  0570  1903               	skipnz
  3470  0571  2D5C               	goto	l1774
  3471  0572  2D73               	goto	l132
  3472  0573                     l132:	
  3473                           
  3474                           ;PR22.c: 234: if(!RA2)
  3475  0573  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0574  1303               	bcf	3,6	;RP1=0, select bank0
  3477  0575  1905               	btfsc	5,2	;volatile
  3478  0576  2FE6               	goto	l1890
  3479                           
  3480                           ;PR22.c: 235: {
  3481                           ;PR22.c: 236: delay(10000);
  3482  0577  3000               	movlw	0
  3483  0578  00F3               	movwf	delay@data+3
  3484  0579  3000               	movlw	0
  3485  057A  00F2               	movwf	delay@data+2
  3486  057B  3027               	movlw	39
  3487  057C  00F1               	movwf	delay@data+1
  3488  057D  3010               	movlw	16
  3489  057E  00F0               	movwf	delay@data
  3490  057F  120A  158A  22BE  120A  118A  	fcall	_delay
  3491  0584                     l137:	
  3492                           ;PR22.c: 237: while(!RA2);
  3493                           
  3494  0584  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0585  1303               	bcf	3,6	;RP1=0, select bank0
  3496  0586  1D05               	btfss	5,2	;volatile
  3497  0587  2D84               	goto	l137
  3498                           
  3499                           ;PR22.c: 238: delay(10000);
  3500  0588  3000               	movlw	0
  3501  0589  00F3               	movwf	delay@data+3
  3502  058A  3000               	movlw	0
  3503  058B  00F2               	movwf	delay@data+2
  3504  058C  3027               	movlw	39
  3505  058D  00F1               	movwf	delay@data+1
  3506  058E  3010               	movlw	16
  3507  058F  00F0               	movwf	delay@data
  3508  0590  120A  158A  22BE  120A  118A  	fcall	_delay
  3509                           
  3510                           ;PR22.c: 240: lcd_clr();
  3511  0595  120A  158A  2277  120A  118A  	fcall	_lcd_clr
  3512                           
  3513                           ;PR22.c: 241: lcd_goto(0);
  3514  059A  3000               	movlw	0
  3515  059B  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  3516                           
  3517                           ;PR22.c: 243: switch(submode)
  3518  05A0  2FD6               	goto	l1888
  3519  05A1                     l1784:	
  3520                           ;PR22.c: 244: {
  3521                           ;PR22.c: 245: case 1 :
  3522                           
  3523                           
  3524                           ;PR22.c: 247: send_string("Heading:");
  3525  05A1  3089               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3526  05A2  120A  158A  229F  120A  118A  	fcall	_send_string
  3527                           
  3528                           ;PR22.c: 248: lcd_goto(20);
  3529  05A7  3014               	movlw	20
  3530  05A8  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  3531                           
  3532                           ;PR22.c: 249: send_string("Exit");
  3533  05AD  30D3               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3534  05AE  120A  158A  229F  120A  118A  	fcall	_send_string
  3535                           
  3536                           ;PR22.c: 252: i2c_master_data[0] = 'O';
  3537  05B3  304F               	movlw	79
  3538  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  3539  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  3540  05B6  00A0               	movwf	??_mode1
  3541  05B7  0820               	movf	??_mode1,w
  3542  05B8  00B7               	movwf	_i2c_master_data
  3543                           
  3544                           ;PR22.c: 253: i2c_start(0x42, 1, 0);
  3545  05B9  01F0               	clrf	i2c_start@size
  3546  05BA  0AF0               	incf	i2c_start@size,f
  3547  05BB  3000               	movlw	0
  3548  05BC  00F1               	movwf	i2c_start@operation
  3549  05BD  00F2               	movwf	i2c_start@operation+1
  3550  05BE  3042               	movlw	66
  3551  05BF  120A  158A  2518  120A  118A  	fcall	_i2c_start
  3552  05C4                     L3:	
  3553                           
  3554                           ;PR22.c: 254: delay(10000);
  3555  05C4  3000               	movlw	0
  3556  05C5  00F3               	movwf	delay@data+3
  3557  05C6  3000               	movlw	0
  3558  05C7  00F2               	movwf	delay@data+2
  3559  05C8  3027               	movlw	39
  3560  05C9  00F1               	movwf	delay@data+1
  3561  05CA  3010               	movlw	16
  3562  05CB  00F0               	movwf	delay@data
  3563  05CC  120A  158A  22BE  120A  118A  	fcall	_delay
  3564                           
  3565                           ;PR22.c: 256: while(RA2)
  3566  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3567  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3568  05D3  1D05               	btfss	5,2	;volatile
  3569  05D4  2E9D               	goto	l1822
  3570                           
  3571                           ;PR22.c: 257: {
  3572                           ;PR22.c: 259: i2c_master_data[0] = 'A';
  3573  05D5  3041               	movlw	65
  3574  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3575  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3576  05D8  00A0               	movwf	??_mode1
  3577  05D9  0820               	movf	??_mode1,w
  3578  05DA  00B7               	movwf	_i2c_master_data
  3579                           
  3580                           ;PR22.c: 260: i2c_start(0x42, 1, 0);
  3581  05DB  01F0               	clrf	i2c_start@size
  3582  05DC  0AF0               	incf	i2c_start@size,f
  3583  05DD  3000               	movlw	0
  3584  05DE  00F1               	movwf	i2c_start@operation
  3585  05DF  00F2               	movwf	i2c_start@operation+1
  3586  05E0  3042               	movlw	66
  3587  05E1  120A  158A  2518  120A  118A  	fcall	_i2c_start
  3588                           
  3589                           ;PR22.c: 261: delay(10000);
  3590  05E6  3000               	movlw	0
  3591  05E7  00F3               	movwf	delay@data+3
  3592  05E8  3000               	movlw	0
  3593  05E9  00F2               	movwf	delay@data+2
  3594  05EA  3027               	movlw	39
  3595  05EB  00F1               	movwf	delay@data+1
  3596  05EC  3010               	movlw	16
  3597  05ED  00F0               	movwf	delay@data
  3598  05EE  120A  158A  22BE  120A  118A  	fcall	_delay
  3599                           
  3600                           ;PR22.c: 263: i2c_start(0x42, 2, 1);
  3601  05F3  3002               	movlw	2
  3602  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3603  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  3604  05F6  00A0               	movwf	??_mode1
  3605  05F7  0820               	movf	??_mode1,w
  3606  05F8  00F0               	movwf	i2c_start@size
  3607  05F9  3001               	movlw	1
  3608  05FA  00F1               	movwf	i2c_start@operation
  3609  05FB  3000               	movlw	0
  3610  05FC  00F2               	movwf	i2c_start@operation+1
  3611  05FD  3042               	movlw	66
  3612  05FE  120A  158A  2518  120A  118A  	fcall	_i2c_start
  3613                           
  3614                           ;PR22.c: 265: lcd_goto(9);
  3615  0603  3009               	movlw	9
  3616  0604  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  3617                           
  3618                           ;PR22.c: 268: result = (i2c_master_rcvb[0] << 8) + i2c_master_rcvb[1];
  3619  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3620  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3621  060B  083E               	movf	_i2c_master_rcvb,w
  3622  060C  00A0               	movwf	??_mode1
  3623  060D  01A1               	clrf	??_mode1+1
  3624  060E  0820               	movf	??_mode1,w
  3625  060F  00A1               	movwf	??_mode1+1
  3626  0610  01A0               	clrf	??_mode1
  3627  0611  083F               	movf	_i2c_master_rcvb+1,w
  3628  0612  0720               	addwf	??_mode1,w
  3629  0613  00A2               	movwf	mode1@result
  3630  0614  3000               	movlw	0
  3631  0615  1803               	skipnc
  3632  0616  3001               	movlw	1
  3633  0617  0721               	addwf	??_mode1+1,w
  3634  0618  00A3               	movwf	mode1@result+1
  3635                           
  3636                           ;PR22.c: 271: send_char('0' + (result % 10000) / 1000);
  3637  0619  30E8               	movlw	232
  3638  061A  00F6               	movwf	___lwdiv@divisor
  3639  061B  3003               	movlw	3
  3640  061C  00F7               	movwf	___lwdiv@divisor+1
  3641  061D  0823               	movf	mode1@result+1,w
  3642  061E  00F3               	movwf	___lwmod@dividend+1
  3643  061F  0822               	movf	mode1@result,w
  3644  0620  00F2               	movwf	___lwmod@dividend
  3645  0621  3010               	movlw	16
  3646  0622  00F0               	movwf	___lwmod@divisor
  3647  0623  3027               	movlw	39
  3648  0624  00F1               	movwf	___lwmod@divisor+1
  3649  0625  120A  158A  2327  120A  118A  	fcall	___lwmod
  3650  062A  0871               	movf	?___lwmod+1,w
  3651  062B  00F9               	movwf	___lwdiv@dividend+1
  3652  062C  0870               	movf	?___lwmod,w
  3653  062D  00F8               	movwf	___lwdiv@dividend
  3654  062E  120A  158A  2359  120A  118A  	fcall	___lwdiv
  3655  0633  0876               	movf	?___lwdiv,w
  3656  0634  3E30               	addlw	48
  3657  0635  120A  158A  2304  120A  118A  	fcall	_send_char
  3658                           
  3659                           ;PR22.c: 272: send_char('0' + (result % 1000) / 100);
  3660  063A  3064               	movlw	100
  3661  063B  00F6               	movwf	___lwdiv@divisor
  3662  063C  3000               	movlw	0
  3663  063D  00F7               	movwf	___lwdiv@divisor+1
  3664  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3665  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3666  0640  0823               	movf	mode1@result+1,w
  3667  0641  00F3               	movwf	___lwmod@dividend+1
  3668  0642  0822               	movf	mode1@result,w
  3669  0643  00F2               	movwf	___lwmod@dividend
  3670  0644  30E8               	movlw	232
  3671  0645  00F0               	movwf	___lwmod@divisor
  3672  0646  3003               	movlw	3
  3673  0647  00F1               	movwf	___lwmod@divisor+1
  3674  0648  120A  158A  2327  120A  118A  	fcall	___lwmod
  3675  064D  0871               	movf	?___lwmod+1,w
  3676  064E  00F9               	movwf	___lwdiv@dividend+1
  3677  064F  0870               	movf	?___lwmod,w
  3678  0650  00F8               	movwf	___lwdiv@dividend
  3679  0651  120A  158A  2359  120A  118A  	fcall	___lwdiv
  3680  0656  0876               	movf	?___lwdiv,w
  3681  0657  3E30               	addlw	48
  3682  0658  120A  158A  2304  120A  118A  	fcall	_send_char
  3683                           
  3684                           ;PR22.c: 273: send_char('0' + (result % 100) / 10);
  3685  065D  300A               	movlw	10
  3686  065E  00F6               	movwf	___lwdiv@divisor
  3687  065F  3000               	movlw	0
  3688  0660  00F7               	movwf	___lwdiv@divisor+1
  3689  0661  1283               	bcf	3,5	;RP0=0, select bank0
  3690  0662  1303               	bcf	3,6	;RP1=0, select bank0
  3691  0663  0823               	movf	mode1@result+1,w
  3692  0664  00F3               	movwf	___lwmod@dividend+1
  3693  0665  0822               	movf	mode1@result,w
  3694  0666  00F2               	movwf	___lwmod@dividend
  3695  0667  3064               	movlw	100
  3696  0668  00F0               	movwf	___lwmod@divisor
  3697  0669  3000               	movlw	0
  3698  066A  00F1               	movwf	___lwmod@divisor+1
  3699  066B  120A  158A  2327  120A  118A  	fcall	___lwmod
  3700  0670  0871               	movf	?___lwmod+1,w
  3701  0671  00F9               	movwf	___lwdiv@dividend+1
  3702  0672  0870               	movf	?___lwmod,w
  3703  0673  00F8               	movwf	___lwdiv@dividend
  3704  0674  120A  158A  2359  120A  118A  	fcall	___lwdiv
  3705  0679  0876               	movf	?___lwdiv,w
  3706  067A  3E30               	addlw	48
  3707  067B  120A  158A  2304  120A  118A  	fcall	_send_char
  3708                           
  3709                           ;PR22.c: 274: send_char('.');
  3710  0680  302E               	movlw	46
  3711  0681  120A  158A  2304  120A  118A  	fcall	_send_char
  3712                           
  3713                           ;PR22.c: 275: send_char('0' + (result % 10));
  3714  0686  300A               	movlw	10
  3715  0687  00F0               	movwf	___lwmod@divisor
  3716  0688  3000               	movlw	0
  3717  0689  00F1               	movwf	___lwmod@divisor+1
  3718  068A  1283               	bcf	3,5	;RP0=0, select bank0
  3719  068B  1303               	bcf	3,6	;RP1=0, select bank0
  3720  068C  0823               	movf	mode1@result+1,w
  3721  068D  00F3               	movwf	___lwmod@dividend+1
  3722  068E  0822               	movf	mode1@result,w
  3723  068F  00F2               	movwf	___lwmod@dividend
  3724  0690  120A  158A  2327  120A  118A  	fcall	___lwmod
  3725  0695  0870               	movf	?___lwmod,w
  3726  0696  3E30               	addlw	48
  3727  0697  120A  158A  2304  120A  118A  	fcall	_send_char
  3728  069C  2DC4               	goto	L3
  3729  069D                     l1822:	
  3730                           ;PR22.c: 276: delay(10000);
  3731                           
  3732                           
  3733                           ;PR22.c: 277: }
  3734                           ;PR22.c: 279: delay(10000);
  3735  069D  3000               	movlw	0
  3736  069E  00F3               	movwf	delay@data+3
  3737  069F  3000               	movlw	0
  3738  06A0  00F2               	movwf	delay@data+2
  3739  06A1  3027               	movlw	39
  3740  06A2  00F1               	movwf	delay@data+1
  3741  06A3  3010               	movlw	16
  3742  06A4  00F0               	movwf	delay@data
  3743  06A5  120A  158A  22BE  120A  118A  	fcall	_delay
  3744  06AA                     l145:	
  3745                           ;PR22.c: 280: while(!RA2);
  3746                           
  3747  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3748  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3749  06AC  1D05               	btfss	5,2	;volatile
  3750  06AD  2EAA               	goto	l145
  3751                           
  3752                           ;PR22.c: 281: delay(10000);
  3753  06AE  3000               	movlw	0
  3754  06AF  00F3               	movwf	delay@data+3
  3755  06B0  3000               	movlw	0
  3756  06B1  00F2               	movwf	delay@data+2
  3757  06B2  3027               	movlw	39
  3758  06B3  00F1               	movwf	delay@data+1
  3759  06B4  3010               	movlw	16
  3760  06B5  00F0               	movwf	delay@data
  3761  06B6  120A  158A  22BE  120A  118A  	fcall	_delay
  3762                           
  3763                           ;PR22.c: 283: lcd_clr();
  3764  06BB  120A  158A  2277  120A  118A  	fcall	_lcd_clr
  3765                           
  3766                           ;PR22.c: 284: break;
  3767  06C0  2FE6               	goto	l1890
  3768  06C1                     l1826:	
  3769                           ;PR22.c: 286: case 2 :
  3770                           
  3771                           
  3772                           ;PR22.c: 288: lcd_clr();
  3773  06C1  120A  158A  2277  120A  118A  	fcall	_lcd_clr
  3774                           
  3775                           ;PR22.c: 289: lcd_goto(0);
  3776  06C6  3000               	movlw	0
  3777  06C7  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  3778                           
  3779                           ;PR22.c: 290: send_string("Calibrating...");
  3780  06CC  3063               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  3781  06CD  120A  158A  229F  120A  118A  	fcall	_send_string
  3782                           
  3783                           ;PR22.c: 291: lcd_goto(20);
  3784  06D2  3014               	movlw	20
  3785  06D3  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  3786                           
  3787                           ;PR22.c: 292: send_string("Exit");
  3788  06D8  30D3               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3789  06D9  120A  158A  229F  120A  118A  	fcall	_send_string
  3790                           
  3791                           ;PR22.c: 295: i2c_master_data[0] = 'C';
  3792  06DE  3043               	movlw	67
  3793  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3794  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3795  06E1  00A0               	movwf	??_mode1
  3796  06E2  0820               	movf	??_mode1,w
  3797  06E3  00B7               	movwf	_i2c_master_data
  3798                           
  3799                           ;PR22.c: 296: i2c_start(0x42, 1, 0);
  3800  06E4  01F0               	clrf	i2c_start@size
  3801  06E5  0AF0               	incf	i2c_start@size,f
  3802  06E6  3000               	movlw	0
  3803  06E7  00F1               	movwf	i2c_start@operation
  3804  06E8  00F2               	movwf	i2c_start@operation+1
  3805  06E9  3042               	movlw	66
  3806  06EA  120A  158A  2518  120A  118A  	fcall	_i2c_start
  3807  06EF                     l150:	
  3808                           ;PR22.c: 298: while(RA2);
  3809                           
  3810  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3811  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3812  06F1  1905               	btfsc	5,2	;volatile
  3813  06F2  2EEF               	goto	l150
  3814                           
  3815                           ;PR22.c: 299: delay(10000);
  3816  06F3  3000               	movlw	0
  3817  06F4  00F3               	movwf	delay@data+3
  3818  06F5  3000               	movlw	0
  3819  06F6  00F2               	movwf	delay@data+2
  3820  06F7  3027               	movlw	39
  3821  06F8  00F1               	movwf	delay@data+1
  3822  06F9  3010               	movlw	16
  3823  06FA  00F0               	movwf	delay@data
  3824  06FB  120A  158A  22BE  120A  118A  	fcall	_delay
  3825  0700                     l153:	
  3826                           ;PR22.c: 300: while(!RA2);
  3827                           
  3828  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3829  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3830  0702  1D05               	btfss	5,2	;volatile
  3831  0703  2F00               	goto	l153
  3832                           
  3833                           ;PR22.c: 301: delay(10000);
  3834  0704  3000               	movlw	0
  3835  0705  00F3               	movwf	delay@data+3
  3836  0706  3000               	movlw	0
  3837  0707  00F2               	movwf	delay@data+2
  3838  0708  3027               	movlw	39
  3839  0709  00F1               	movwf	delay@data+1
  3840  070A  3010               	movlw	16
  3841  070B  00F0               	movwf	delay@data
  3842  070C  120A  158A  22BE  120A  118A  	fcall	_delay
  3843                           
  3844                           ;PR22.c: 304: i2c_master_data[0] = 'E';
  3845  0711  3045               	movlw	69
  3846  0712  1283               	bcf	3,5	;RP0=0, select bank0
  3847  0713  1303               	bcf	3,6	;RP1=0, select bank0
  3848  0714  00A0               	movwf	??_mode1
  3849  0715  0820               	movf	??_mode1,w
  3850  0716  00B7               	movwf	_i2c_master_data
  3851                           
  3852                           ;PR22.c: 305: i2c_start(0x42, 1, 0);
  3853  0717  01F0               	clrf	i2c_start@size
  3854  0718  0AF0               	incf	i2c_start@size,f
  3855  0719  3000               	movlw	0
  3856  071A  00F1               	movwf	i2c_start@operation
  3857  071B  00F2               	movwf	i2c_start@operation+1
  3858  071C  3042               	movlw	66
  3859  071D  120A  158A  2518  120A  118A  	fcall	_i2c_start
  3860                           
  3861                           ;PR22.c: 307: lcd_clr();
  3862  0722  120A  158A  2277  120A  118A  	fcall	_lcd_clr
  3863                           
  3864                           ;PR22.c: 308: lcd_goto(0);
  3865  0727  3000               	movlw	0
  3866  0728  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  3867                           
  3868                           ;PR22.c: 309: send_string("Done");
  3869  072D  30CE               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3870  072E  120A  158A  229F  120A  118A  	fcall	_send_string
  3871                           
  3872                           ;PR22.c: 310: delay(200000);
  3873  0733  3000               	movlw	0
  3874  0734  00F3               	movwf	delay@data+3
  3875  0735  3003               	movlw	3
  3876  0736  00F2               	movwf	delay@data+2
  3877  0737  300D               	movlw	13
  3878  0738  00F1               	movwf	delay@data+1
  3879  0739  3040               	movlw	64
  3880  073A  00F0               	movwf	delay@data
  3881  073B  120A  158A  22BE  120A  118A  	fcall	_delay
  3882                           
  3883                           ;PR22.c: 311: break;
  3884  0740  2FE6               	goto	l1890
  3885  0741                     l1852:	
  3886                           ;PR22.c: 313: case 3 :
  3887                           
  3888                           
  3889                           ;PR22.c: 316: i2c_master_data[0] = 'w';
  3890  0741  3077               	movlw	119
  3891  0742  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0743  1303               	bcf	3,6	;RP1=0, select bank0
  3893  0744  00A0               	movwf	??_mode1
  3894  0745  0820               	movf	??_mode1,w
  3895  0746  00B7               	movwf	_i2c_master_data
  3896                           
  3897                           ;PR22.c: 317: i2c_master_data[1] = 0x01;
  3898  0747  01B8               	clrf	_i2c_master_data+1
  3899  0748  0AB8               	incf	_i2c_master_data+1,f
  3900                           
  3901                           ;PR22.c: 318: i2c_master_data[2] = 0;
  3902  0749  01B9               	clrf	_i2c_master_data+2
  3903                           
  3904                           ;PR22.c: 319: i2c_start(0x42, 3, 0);
  3905  074A  3003               	movlw	3
  3906  074B  00A0               	movwf	??_mode1
  3907  074C  0820               	movf	??_mode1,w
  3908  074D  00F0               	movwf	i2c_start@size
  3909  074E  3000               	movlw	0
  3910  074F  00F1               	movwf	i2c_start@operation
  3911  0750  00F2               	movwf	i2c_start@operation+1
  3912  0751  3042               	movlw	66
  3913  0752  120A  158A  2518  120A  118A  	fcall	_i2c_start
  3914                           
  3915                           ;PR22.c: 320: delay(10000);
  3916  0757  3000               	movlw	0
  3917  0758  00F3               	movwf	delay@data+3
  3918  0759  3000               	movlw	0
  3919  075A  00F2               	movwf	delay@data+2
  3920  075B  3027               	movlw	39
  3921  075C  00F1               	movwf	delay@data+1
  3922  075D  3010               	movlw	16
  3923  075E  00F0               	movwf	delay@data
  3924  075F  120A  158A  22BE  120A  118A  	fcall	_delay
  3925                           
  3926                           ;PR22.c: 322: i2c_master_data[1] = 0x02;
  3927  0764  3002               	movlw	2
  3928  0765  1283               	bcf	3,5	;RP0=0, select bank0
  3929  0766  1303               	bcf	3,6	;RP1=0, select bank0
  3930  0767  00A0               	movwf	??_mode1
  3931  0768  0820               	movf	??_mode1,w
  3932  0769  00B8               	movwf	_i2c_master_data+1
  3933                           
  3934                           ;PR22.c: 323: i2c_start(0x42, 3, 0);
  3935  076A  3003               	movlw	3
  3936  076B  00A0               	movwf	??_mode1
  3937  076C  0820               	movf	??_mode1,w
  3938  076D  00F0               	movwf	i2c_start@size
  3939  076E  3000               	movlw	0
  3940  076F  00F1               	movwf	i2c_start@operation
  3941  0770  00F2               	movwf	i2c_start@operation+1
  3942  0771  3042               	movlw	66
  3943  0772  120A  158A  2518  120A  118A  	fcall	_i2c_start
  3944                           
  3945                           ;PR22.c: 324: delay(10000);
  3946  0777  3000               	movlw	0
  3947  0778  00F3               	movwf	delay@data+3
  3948  0779  3000               	movlw	0
  3949  077A  00F2               	movwf	delay@data+2
  3950  077B  3027               	movlw	39
  3951  077C  00F1               	movwf	delay@data+1
  3952  077D  3010               	movlw	16
  3953  077E  00F0               	movwf	delay@data
  3954  077F  120A  158A  22BE  120A  118A  	fcall	_delay
  3955                           
  3956                           ;PR22.c: 326: i2c_master_data[1] = 0x03;
  3957  0784  3003               	movlw	3
  3958  0785  1283               	bcf	3,5	;RP0=0, select bank0
  3959  0786  1303               	bcf	3,6	;RP1=0, select bank0
  3960  0787  00A0               	movwf	??_mode1
  3961  0788  0820               	movf	??_mode1,w
  3962  0789  00B8               	movwf	_i2c_master_data+1
  3963                           
  3964                           ;PR22.c: 327: i2c_start(0x42, 3, 0);
  3965  078A  3003               	movlw	3
  3966  078B  00A0               	movwf	??_mode1
  3967  078C  0820               	movf	??_mode1,w
  3968  078D  00F0               	movwf	i2c_start@size
  3969  078E  3000               	movlw	0
  3970  078F  00F1               	movwf	i2c_start@operation
  3971  0790  00F2               	movwf	i2c_start@operation+1
  3972  0791  3042               	movlw	66
  3973  0792  120A  158A  2518  120A  118A  	fcall	_i2c_start
  3974                           
  3975                           ;PR22.c: 328: delay(10000);
  3976  0797  3000               	movlw	0
  3977  0798  00F3               	movwf	delay@data+3
  3978  0799  3000               	movlw	0
  3979  079A  00F2               	movwf	delay@data+2
  3980  079B  3027               	movlw	39
  3981  079C  00F1               	movwf	delay@data+1
  3982  079D  3010               	movlw	16
  3983  079E  00F0               	movwf	delay@data
  3984  079F  120A  158A  22BE  120A  118A  	fcall	_delay
  3985                           
  3986                           ;PR22.c: 330: i2c_master_data[1] = 0x04;
  3987  07A4  3004               	movlw	4
  3988  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  3989  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  3990  07A7  00A0               	movwf	??_mode1
  3991  07A8  0820               	movf	??_mode1,w
  3992  07A9  00B8               	movwf	_i2c_master_data+1
  3993                           
  3994                           ;PR22.c: 331: i2c_start(0x42, 3, 0);
  3995  07AA  3003               	movlw	3
  3996  07AB  00A0               	movwf	??_mode1
  3997  07AC  0820               	movf	??_mode1,w
  3998  07AD  00F0               	movwf	i2c_start@size
  3999  07AE  3000               	movlw	0
  4000  07AF  00F1               	movwf	i2c_start@operation
  4001  07B0  00F2               	movwf	i2c_start@operation+1
  4002  07B1  3042               	movlw	66
  4003  07B2  120A  158A  2518  120A  118A  	fcall	_i2c_start
  4004                           
  4005                           ;PR22.c: 333: lcd_clr();
  4006  07B7  120A  158A  2277  120A  118A  	fcall	_lcd_clr
  4007                           
  4008                           ;PR22.c: 334: lcd_goto(0);
  4009  07BC  3000               	movlw	0
  4010  07BD  120A  158A  2289  120A  118A  	fcall	_lcd_goto
  4011                           
  4012                           ;PR22.c: 335: send_string("Done");
  4013  07C2  30CE               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  4014  07C3  120A  158A  229F  120A  118A  	fcall	_send_string
  4015                           
  4016                           ;PR22.c: 336: delay(200000);
  4017  07C8  3000               	movlw	0
  4018  07C9  00F3               	movwf	delay@data+3
  4019  07CA  3003               	movlw	3
  4020  07CB  00F2               	movwf	delay@data+2
  4021  07CC  300D               	movlw	13
  4022  07CD  00F1               	movwf	delay@data+1
  4023  07CE  3040               	movlw	64
  4024  07CF  00F0               	movwf	delay@data
  4025  07D0  120A  158A  22BE  120A  118A  	fcall	_delay
  4026                           
  4027                           ;PR22.c: 337: break;
  4028  07D5  2FE6               	goto	l1890
  4029  07D6                     l1888:	
  4030                           ;PR22.c: 344: }
  4031                           
  4032                           ;PR22.c: 343: default : break;
  4033                           
  4034                           ;PR22.c: 341: return;
  4035                           
  4036                           ;PR22.c: 339: case 4 :
  4037                           
  4038  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  4039  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  4040  07D8  0824               	movf	mode1@submode,w
  4041                           
  4042                           ; Switch size 1, requested type "space"
  4043                           ; Number of cases is 4, Range of values is 1 to 4
  4044                           ; switch strategies available:
  4045                           ; Name         Instructions Cycles
  4046                           ; simple_byte           13     7 (average)
  4047                           ; direct_byte           23    11 (fixed)
  4048                           ; jumptable            263     9 (fixed)
  4049                           ;	Chosen strategy is simple_byte
  4050  07D9  3A01               	xorlw	1	; case 1
  4051  07DA  1903               	skipnz
  4052  07DB  2DA1               	goto	l1784
  4053  07DC  3A03               	xorlw	3	; case 2
  4054  07DD  1903               	skipnz
  4055  07DE  2EC1               	goto	l1826
  4056  07DF  3A01               	xorlw	1	; case 3
  4057  07E0  1903               	skipnz
  4058  07E1  2F41               	goto	l1852
  4059  07E2  3A07               	xorlw	7	; case 4
  4060  07E3  1903               	skipnz
  4061  07E4  2FF4               	goto	l158
  4062  07E5  2FE6               	goto	l1890
  4063  07E6                     l1890:	
  4064                           
  4065                           ;PR22.c: 345: }
  4066                           ;PR22.c: 346: delay(30000);
  4067  07E6  3000               	movlw	0
  4068  07E7  00F3               	movwf	delay@data+3
  4069  07E8  3000               	movlw	0
  4070  07E9  00F2               	movwf	delay@data+2
  4071  07EA  3075               	movlw	117
  4072  07EB  00F1               	movwf	delay@data+1
  4073  07EC  3030               	movlw	48
  4074  07ED  00F0               	movwf	delay@data
  4075  07EE  120A  158A  22BE  120A  118A  	fcall	_delay
  4076  07F3  2D1F               	goto	l124
  4077  07F4                     l158:	
  4078  07F4  0008               	return
  4079  07F5                     __end_of_mode1:	
  4080                           
  4081                           	psect	text10
  4082  0A9F                     __ptext10:	
  4083 ;; *************** function _send_string *****************
  4084 ;; Defined at:
  4085 ;;		line 608 in file "../../Source file/PR22.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  s               1    wreg     PTR const unsigned char 
  4088 ;;		 -> STR_27(4), STR_26(6), STR_25(6), STR_24(5), 
  4089 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(17), 
  4090 ;;		 -> STR_19(17), STR_18(5), STR_17(5), STR_16(5), 
  4091 ;;		 -> STR_15(15), STR_14(5), STR_13(9), STR_12(16), 
  4092 ;;		 -> STR_11(16), STR_10(16), STR_9(16), STR_8(3), 
  4093 ;;		 -> STR_7(8), STR_6(8), STR_5(8), STR_4(3), 
  4094 ;;		 -> STR_3(8), STR_2(5), STR_1(13), 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  s               1   10[COMMON] PTR const unsigned char 
  4097 ;;		 -> STR_27(4), STR_26(6), STR_25(6), STR_24(5), 
  4098 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(17), 
  4099 ;;		 -> STR_19(17), STR_18(5), STR_17(5), STR_16(5), 
  4100 ;;		 -> STR_15(15), STR_14(5), STR_13(9), STR_12(16), 
  4101 ;;		 -> STR_11(16), STR_10(16), STR_9(16), STR_8(3), 
  4102 ;;		 -> STR_7(8), STR_6(8), STR_5(8), STR_4(3), 
  4103 ;;		 -> STR_3(8), STR_2(5), STR_1(13), 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4113 ;;      Params:         0       0       0       0       0
  4114 ;;      Locals:         1       0       0       0       0
  4115 ;;      Temps:          1       0       0       0       0
  4116 ;;      Totals:         2       0       0       0       0
  4117 ;;Total ram usage:        2 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    2
  4120 ;; This function calls:
  4121 ;;		_send_char
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;;		_mode1
  4125 ;;		_mode2
  4126 ;;		_mode3
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           
  4131                           ;psect for function _send_string
  4132  0A9F                     _send_string:	
  4133                           
  4134                           ;incstack = 0
  4135                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4136                           ;send_string@s stored from wreg
  4137  0A9F  00FA               	movwf	send_string@s
  4138  0AA0                     l1526:	
  4139                           ;PR22.c: 610: while (s && *s)send_char (*s++);
  4140                           
  4141  0AA0  087A               	movf	send_string@s,w
  4142  0AA1  1903               	btfsc	3,2
  4143  0AA2  0008               	return
  4144  0AA3  087A               	movf	send_string@s,w
  4145  0AA4  0084               	movwf	4
  4146  0AA5  120A  118A  2003  120A  158A  	fcall	stringdir
  4147  0AAA  3A00               	xorlw	0
  4148  0AAB  1903               	btfsc	3,2
  4149  0AAC  0008               	return
  4150  0AAD  087A               	movf	send_string@s,w
  4151  0AAE  0084               	movwf	4
  4152  0AAF  120A  118A  2003  120A  158A  	fcall	stringdir
  4153  0AB4  120A  158A  2304  120A  158A  	fcall	_send_char
  4154  0AB9  3001               	movlw	1
  4155  0ABA  00F9               	movwf	??_send_string
  4156  0ABB  0879               	movf	??_send_string,w
  4157  0ABC  07FA               	addwf	send_string@s,f
  4158  0ABD  2AA0               	goto	l1526
  4159  0ABE                     __end_of_send_string:	
  4160                           
  4161                           	psect	text11
  4162  0B04                     __ptext11:	
  4163 ;; *************** function _send_char *****************
  4164 ;; Defined at:
  4165 ;;		line 579 in file "../../Source file/PR22.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  data            1    wreg     unsigned char 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  data            1    8[COMMON] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;		None               void
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0, pclath, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4179 ;;      Params:         0       0       0       0       0
  4180 ;;      Locals:         1       0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0
  4182 ;;      Totals:         1       0       0       0       0
  4183 ;;Total ram usage:        1 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    1
  4186 ;; This function calls:
  4187 ;;		_delay
  4188 ;; This function is called by:
  4189 ;;		_mode1
  4190 ;;		_mode2
  4191 ;;		_mode3
  4192 ;;		_send_string
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           
  4197                           ;psect for function _send_char
  4198  0B04                     _send_char:	
  4199                           
  4200                           ;incstack = 0
  4201                           ; Regs used in _send_char: [wreg+status,2+status,0+pclath+cstack]
  4202                           ;send_char@data stored from wreg
  4203  0B04  00F8               	movwf	send_char@data
  4204                           
  4205                           ;PR22.c: 581: RC0=1;
  4206  0B05  1283               	bcf	3,5	;RP0=0, select bank0
  4207  0B06  1303               	bcf	3,6	;RP1=0, select bank0
  4208  0B07  1407               	bsf	7,0	;volatile
  4209                           
  4210                           ;PR22.c: 582: PORTB=data;
  4211  0B08  0878               	movf	send_char@data,w
  4212  0B09  0086               	movwf	6	;volatile
  4213                           
  4214                           ;PR22.c: 583: RA5=1;
  4215  0B0A  1685               	bsf	5,5	;volatile
  4216                           
  4217                           ;PR22.c: 584: delay(10);
  4218  0B0B  3000               	movlw	0
  4219  0B0C  00F3               	movwf	delay@data+3
  4220  0B0D  3000               	movlw	0
  4221  0B0E  00F2               	movwf	delay@data+2
  4222  0B0F  3000               	movlw	0
  4223  0B10  00F1               	movwf	delay@data+1
  4224  0B11  300A               	movlw	10
  4225  0B12  00F0               	movwf	delay@data
  4226  0B13  120A  158A  22BE  120A  158A  	fcall	_delay
  4227                           
  4228                           ;PR22.c: 585: RA5=0;
  4229  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  4230  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  4231  0B1A  1285               	bcf	5,5	;volatile
  4232                           
  4233                           ;PR22.c: 586: delay(10);
  4234  0B1B  3000               	movlw	0
  4235  0B1C  00F3               	movwf	delay@data+3
  4236  0B1D  3000               	movlw	0
  4237  0B1E  00F2               	movwf	delay@data+2
  4238  0B1F  3000               	movlw	0
  4239  0B20  00F1               	movwf	delay@data+1
  4240  0B21  300A               	movlw	10
  4241  0B22  00F0               	movwf	delay@data
  4242  0B23  120A  158A  22BE   	fcall	_delay
  4243  0B26  0008               	return
  4244  0B27                     __end_of_send_char:	
  4245                           
  4246                           	psect	text12
  4247  0A89                     __ptext12:	
  4248 ;; *************** function _lcd_goto *****************
  4249 ;; Defined at:
  4250 ;;		line 589 in file "../../Source file/PR22.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  data            1    wreg     unsigned char 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  data            1   10[COMMON] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;		None               void
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4264 ;;      Params:         0       0       0       0       0
  4265 ;;      Locals:         1       0       0       0       0
  4266 ;;      Temps:          1       0       0       0       0
  4267 ;;      Totals:         2       0       0       0       0
  4268 ;;Total ram usage:        2 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    2
  4271 ;; This function calls:
  4272 ;;		_send_config
  4273 ;; This function is called by:
  4274 ;;		_main
  4275 ;;		_mode1
  4276 ;;		_mode2
  4277 ;;		_mode3
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           
  4282                           ;psect for function _lcd_goto
  4283  0A89                     _lcd_goto:	
  4284                           
  4285                           ;incstack = 0
  4286                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4287                           ;lcd_goto@data stored from wreg
  4288  0A89  00FA               	movwf	lcd_goto@data
  4289                           
  4290                           ;PR22.c: 591: if(data<16)
  4291  0A8A  3010               	movlw	16
  4292  0A8B  027A               	subwf	lcd_goto@data,w
  4293  0A8C  1803               	skipnc
  4294  0A8D  2A94               	goto	l1516
  4295                           
  4296                           ;PR22.c: 592: {
  4297                           ;PR22.c: 593: send_config(0x80+data);
  4298  0A8E  087A               	movf	lcd_goto@data,w
  4299  0A8F  3E80               	addlw	128
  4300  0A90  120A  158A  22E1   	fcall	_send_config
  4301                           
  4302                           ;PR22.c: 594: }
  4303  0A93  0008               	return
  4304  0A94                     l1516:	
  4305                           
  4306                           ;PR22.c: 595: else
  4307                           ;PR22.c: 596: {
  4308                           ;PR22.c: 597: data=data-20;
  4309  0A94  087A               	movf	lcd_goto@data,w
  4310  0A95  3EEC               	addlw	236
  4311  0A96  00F9               	movwf	??_lcd_goto
  4312  0A97  0879               	movf	??_lcd_goto,w
  4313  0A98  00FA               	movwf	lcd_goto@data
  4314                           
  4315                           ;PR22.c: 598: send_config(0xc0+data);
  4316  0A99  087A               	movf	lcd_goto@data,w
  4317  0A9A  3EC0               	addlw	192
  4318  0A9B  120A  158A  22E1   	fcall	_send_config
  4319  0A9E  0008               	return
  4320  0A9F                     __end_of_lcd_goto:	
  4321                           
  4322                           	psect	text13
  4323  0A77                     __ptext13:	
  4324 ;; *************** function _lcd_clr *****************
  4325 ;; Defined at:
  4326 ;;		line 602 in file "../../Source file/PR22.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;		None               void
  4333 ;; Registers used:
  4334 ;;		wreg, status,2, status,0, pclath, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4340 ;;      Params:         0       0       0       0       0
  4341 ;;      Locals:         0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0
  4343 ;;      Totals:         0       0       0       0       0
  4344 ;;Total ram usage:        0 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    2
  4347 ;; This function calls:
  4348 ;;		_delay
  4349 ;;		_send_config
  4350 ;; This function is called by:
  4351 ;;		_main
  4352 ;;		_mode1
  4353 ;;		_mode2
  4354 ;;		_mode3
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           
  4359                           ;psect for function _lcd_clr
  4360  0A77                     _lcd_clr:	
  4361                           
  4362                           ;PR22.c: 604: send_config(0x01);
  4363                           
  4364                           ;incstack = 0
  4365                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  4366  0A77  3001               	movlw	1
  4367  0A78  120A  158A  22E1  120A  158A  	fcall	_send_config
  4368                           
  4369                           ;PR22.c: 605: delay(600);
  4370  0A7D  3000               	movlw	0
  4371  0A7E  00F3               	movwf	delay@data+3
  4372  0A7F  3000               	movlw	0
  4373  0A80  00F2               	movwf	delay@data+2
  4374  0A81  3002               	movlw	2
  4375  0A82  00F1               	movwf	delay@data+1
  4376  0A83  3058               	movlw	88
  4377  0A84  00F0               	movwf	delay@data
  4378  0A85  120A  158A  22BE   	fcall	_delay
  4379  0A88  0008               	return
  4380  0A89                     __end_of_lcd_clr:	
  4381                           
  4382                           	psect	text14
  4383  0AE1                     __ptext14:	
  4384 ;; *************** function _send_config *****************
  4385 ;; Defined at:
  4386 ;;		line 569 in file "../../Source file/PR22.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  data            1    wreg     unsigned char 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  data            1    8[COMMON] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;		None               void
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, pclath, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4400 ;;      Params:         0       0       0       0       0
  4401 ;;      Locals:         1       0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0
  4403 ;;      Totals:         1       0       0       0       0
  4404 ;;Total ram usage:        1 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    1
  4407 ;; This function calls:
  4408 ;;		_delay
  4409 ;; This function is called by:
  4410 ;;		_main
  4411 ;;		_lcd_goto
  4412 ;;		_lcd_clr
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function _send_config
  4418  0AE1                     _send_config:	
  4419                           
  4420                           ;incstack = 0
  4421                           ; Regs used in _send_config: [wreg+status,2+status,0+pclath+cstack]
  4422                           ;send_config@data stored from wreg
  4423  0AE1  00F8               	movwf	send_config@data
  4424                           
  4425                           ;PR22.c: 571: RC0=0;
  4426  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  4427  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  4428  0AE4  1007               	bcf	7,0	;volatile
  4429                           
  4430                           ;PR22.c: 572: PORTB=data;
  4431  0AE5  0878               	movf	send_config@data,w
  4432  0AE6  0086               	movwf	6	;volatile
  4433                           
  4434                           ;PR22.c: 573: RA5=1;
  4435  0AE7  1685               	bsf	5,5	;volatile
  4436                           
  4437                           ;PR22.c: 574: delay(50);
  4438  0AE8  3000               	movlw	0
  4439  0AE9  00F3               	movwf	delay@data+3
  4440  0AEA  3000               	movlw	0
  4441  0AEB  00F2               	movwf	delay@data+2
  4442  0AEC  3000               	movlw	0
  4443  0AED  00F1               	movwf	delay@data+1
  4444  0AEE  3032               	movlw	50
  4445  0AEF  00F0               	movwf	delay@data
  4446  0AF0  120A  158A  22BE  120A  158A  	fcall	_delay
  4447                           
  4448                           ;PR22.c: 575: RA5=0;
  4449  0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  4450  0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  4451  0AF7  1285               	bcf	5,5	;volatile
  4452                           
  4453                           ;PR22.c: 576: delay(50);
  4454  0AF8  3000               	movlw	0
  4455  0AF9  00F3               	movwf	delay@data+3
  4456  0AFA  3000               	movlw	0
  4457  0AFB  00F2               	movwf	delay@data+2
  4458  0AFC  3000               	movlw	0
  4459  0AFD  00F1               	movwf	delay@data+1
  4460  0AFE  3032               	movlw	50
  4461  0AFF  00F0               	movwf	delay@data
  4462  0B00  120A  158A  22BE   	fcall	_delay
  4463  0B03  0008               	return
  4464  0B04                     __end_of_send_config:	
  4465                           
  4466                           	psect	text15
  4467  0ABE                     __ptext15:	
  4468 ;; *************** function _delay *****************
  4469 ;; Defined at:
  4470 ;;		line 564 in file "../../Source file/PR22.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  data            4    0[COMMON] unsigned long 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;		None               void
  4477 ;; Registers used:
  4478 ;;		wreg
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4484 ;;      Params:         4       0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0
  4486 ;;      Temps:          4       0       0       0       0
  4487 ;;      Totals:         8       0       0       0       0
  4488 ;;Total ram usage:        8 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; This function calls:
  4491 ;;		Nothing
  4492 ;; This function is called by:
  4493 ;;		_main
  4494 ;;		_mode1
  4495 ;;		_mode2
  4496 ;;		_mode3
  4497 ;;		_send_config
  4498 ;;		_send_char
  4499 ;;		_lcd_clr
  4500 ;;		_spi_start
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           
  4505                           ;psect for function _delay
  4506  0ABE                     _delay:	
  4507                           
  4508                           ;PR22.c: 566: for( ;data>0;data--);
  4509                           
  4510                           ;incstack = 0
  4511                           ; Regs used in _delay: [wreg]
  4512  0ABE  0873               	movf	delay@data+3,w
  4513  0ABF  0472               	iorwf	delay@data+2,w
  4514  0AC0  0471               	iorwf	delay@data+1,w
  4515  0AC1  0470               	iorwf	delay@data,w
  4516  0AC2  1903               	btfsc	3,2
  4517  0AC3  0008               	return
  4518  0AC4  3001               	movlw	1
  4519  0AC5  00F4               	movwf	??_delay
  4520  0AC6  3000               	movlw	0
  4521  0AC7  00F5               	movwf	??_delay+1
  4522  0AC8  3000               	movlw	0
  4523  0AC9  00F6               	movwf	??_delay+2
  4524  0ACA  3000               	movlw	0
  4525  0ACB  00F7               	movwf	??_delay+3
  4526  0ACC  0874               	movf	??_delay,w
  4527  0ACD  02F0               	subwf	delay@data,f
  4528  0ACE  0875               	movf	??_delay+1,w
  4529  0ACF  1C03               	skipc
  4530  0AD0  0F75               	incfsz	??_delay+1,w
  4531  0AD1  2AD3               	goto	u1195
  4532  0AD2  2AD4               	goto	u1196
  4533  0AD3                     u1195:	
  4534  0AD3  02F1               	subwf	delay@data+1,f
  4535  0AD4                     u1196:	
  4536  0AD4  0876               	movf	??_delay+2,w
  4537  0AD5  1C03               	skipc
  4538  0AD6  0F76               	incfsz	??_delay+2,w
  4539  0AD7  2AD9               	goto	u1197
  4540  0AD8  2ADA               	goto	u1198
  4541  0AD9                     u1197:	
  4542  0AD9  02F2               	subwf	delay@data+2,f
  4543  0ADA                     u1198:	
  4544  0ADA  0877               	movf	??_delay+3,w
  4545  0ADB  1C03               	skipc
  4546  0ADC  0F77               	incfsz	??_delay+3,w
  4547  0ADD  2ADF               	goto	u1199
  4548  0ADE  2ABE               	goto	_delay
  4549  0ADF                     u1199:	
  4550  0ADF  02F3               	subwf	delay@data+3,f
  4551  0AE0  2ABE               	goto	_delay
  4552  0AE1                     __end_of_delay:	
  4553                           
  4554                           	psect	text16
  4555  0D18                     __ptext16:	
  4556 ;; *************** function _i2c_start *****************
  4557 ;; Defined at:
  4558 ;;		line 613 in file "../../Source file/PR22.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  address         1    wreg     unsigned char 
  4561 ;;  size            1    0[COMMON] unsigned char 
  4562 ;;  operation       2    1[COMMON] unsigned int 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  address         1    5[COMMON] unsigned char 
  4565 ;;  i               1    6[COMMON] unsigned char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;		None               void
  4568 ;; Registers used:
  4569 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4575 ;;      Params:         3       0       0       0       0
  4576 ;;      Locals:         2       0       0       0       0
  4577 ;;      Temps:          2       0       0       0       0
  4578 ;;      Totals:         7       0       0       0       0
  4579 ;;Total ram usage:        7 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_mode1
  4585 ;;		_mode2
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           
  4590                           ;psect for function _i2c_start
  4591  0D18                     _i2c_start:	
  4592                           
  4593                           ;incstack = 0
  4594                           ; Regs used in _i2c_start: [wreg-fsr0h+status,2+status,0]
  4595                           ;i2c_start@address stored from wreg
  4596  0D18  00F5               	movwf	i2c_start@address
  4597                           
  4598                           ;PR22.c: 615: unsigned char i;
  4599                           ;PR22.c: 617: SEN = 1;
  4600  0D19  1683               	bsf	3,5	;RP0=1, select bank1
  4601  0D1A  1303               	bcf	3,6	;RP1=0, select bank1
  4602  0D1B  1411               	bsf	17,0	;volatile
  4603  0D1C                     l226:	
  4604                           ;PR22.c: 618: while(!SSPIF);
  4605                           
  4606  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  4607  0D1D  1D8C               	btfss	12,3	;volatile
  4608  0D1E  2D1C               	goto	l226
  4609                           
  4610                           ;PR22.c: 619: SSPIF = 0;
  4611  0D1F  118C               	bcf	12,3	;volatile
  4612                           
  4613                           ;PR22.c: 620: SSPBUF = address + operation;
  4614  0D20  0871               	movf	i2c_start@operation,w
  4615  0D21  0775               	addwf	i2c_start@address,w
  4616  0D22  0093               	movwf	19	;volatile
  4617  0D23                     l229:	
  4618                           ;PR22.c: 621: while(!SSPIF);
  4619                           
  4620  0D23  1D8C               	btfss	12,3	;volatile
  4621  0D24  2D23               	goto	l229
  4622                           
  4623                           ;PR22.c: 622: SSPIF = 0;
  4624  0D25  118C               	bcf	12,3	;volatile
  4625                           
  4626                           ;PR22.c: 623: if(operation == 0)
  4627  0D26  0871               	movf	i2c_start@operation,w
  4628  0D27  0472               	iorwf	i2c_start@operation+1,w
  4629  0D28  1D03               	btfss	3,2
  4630  0D29  2D45               	goto	l1544
  4631                           
  4632                           ;PR22.c: 624: {
  4633                           ;PR22.c: 625: for(i = 0; i < size; i++)
  4634  0D2A  01F6               	clrf	i2c_start@i
  4635  0D2B                     l1542:	
  4636  0D2B  0870               	movf	i2c_start@size,w
  4637  0D2C  0276               	subwf	i2c_start@i,w
  4638  0D2D  1803               	btfsc	3,0
  4639  0D2E  2D3D               	goto	l238
  4640                           
  4641                           ;PR22.c: 626: {
  4642                           ;PR22.c: 627: SSPBUF = i2c_master_data[i];
  4643  0D2F  0876               	movf	i2c_start@i,w
  4644  0D30  3E37               	addlw	(low (_i2c_master_data| 0))& (0+255)
  4645  0D31  0084               	movwf	4
  4646  0D32  1383               	bcf	3,7	;select IRP bank0
  4647  0D33  0800               	movf	0,w
  4648  0D34  0093               	movwf	19	;volatile
  4649  0D35                     l235:	
  4650                           ;PR22.c: 628: while(!SSPIF);
  4651                           
  4652  0D35  1D8C               	btfss	12,3	;volatile
  4653  0D36  2D35               	goto	l235
  4654                           
  4655                           ;PR22.c: 629: SSPIF = 0;
  4656  0D37  118C               	bcf	12,3	;volatile
  4657  0D38  3001               	movlw	1
  4658  0D39  00F3               	movwf	??_i2c_start
  4659  0D3A  0873               	movf	??_i2c_start,w
  4660  0D3B  07F6               	addwf	i2c_start@i,f
  4661  0D3C  2D2B               	goto	l1542
  4662  0D3D                     l238:	
  4663                           
  4664                           ;PR22.c: 630: }
  4665                           ;PR22.c: 631: PEN = 1;
  4666  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  4667  0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  4668  0D3F  1511               	bsf	17,2	;volatile
  4669  0D40                     l239:	
  4670                           ;PR22.c: 632: while(!SSPIF);
  4671                           
  4672  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0D41  1D8C               	btfss	12,3	;volatile
  4674  0D42  2D40               	goto	l239
  4675                           
  4676                           ;PR22.c: 633: SSPIF = 0;
  4677  0D43  118C               	bcf	12,3	;volatile
  4678                           
  4679                           ;PR22.c: 634: }
  4680  0D44  0008               	return
  4681  0D45                     l1544:	
  4682                           
  4683                           ;PR22.c: 635: else if(operation == 1)
  4684  0D45  0371               	decf	i2c_start@operation,w
  4685  0D46  0472               	iorwf	i2c_start@operation+1,w
  4686  0D47  1D03               	btfss	3,2
  4687  0D48  0008               	return
  4688                           
  4689                           ;PR22.c: 636: {
  4690                           ;PR22.c: 637: for(i = 0; i < size; i++)
  4691  0D49  01F6               	clrf	i2c_start@i
  4692  0D4A                     l1556:	
  4693  0D4A  0870               	movf	i2c_start@size,w
  4694  0D4B  0276               	subwf	i2c_start@i,w
  4695  0D4C  1803               	btfsc	3,0
  4696  0D4D  2D7A               	goto	l254
  4697                           
  4698                           ;PR22.c: 638: {
  4699                           ;PR22.c: 639: RCEN = 1;
  4700  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  4701  0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  4702  0D50  1591               	bsf	17,3	;volatile
  4703  0D51                     l246:	
  4704                           ;PR22.c: 640: while(!SSPIF);
  4705                           
  4706  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  4707  0D52  1D8C               	btfss	12,3	;volatile
  4708  0D53  2D51               	goto	l246
  4709                           
  4710                           ;PR22.c: 641: SSPIF = 0;
  4711  0D54  118C               	bcf	12,3	;volatile
  4712                           
  4713                           ;PR22.c: 642: i2c_master_rcvb[i] = SSPBUF;
  4714  0D55  0813               	movf	19,w	;volatile
  4715  0D56  00F3               	movwf	??_i2c_start
  4716  0D57  0876               	movf	i2c_start@i,w
  4717  0D58  3E3E               	addlw	(low (_i2c_master_rcvb| 0))& (0+255)
  4718  0D59  0084               	movwf	4
  4719  0D5A  0873               	movf	??_i2c_start,w
  4720  0D5B  1383               	bcf	3,7	;select IRP bank0
  4721  0D5C  0080               	movwf	0
  4722                           
  4723                           ;PR22.c: 643: if(i == (size - 1))
  4724  0D5D  0870               	movf	i2c_start@size,w
  4725  0D5E  3EFF               	addlw	255
  4726  0D5F  00F3               	movwf	??_i2c_start
  4727  0D60  30FF               	movlw	255
  4728  0D61  1803               	skipnc
  4729  0D62  3000               	movlw	0
  4730  0D63  00F4               	movwf	??_i2c_start+1
  4731  0D64  0876               	movf	i2c_start@i,w
  4732  0D65  0673               	xorwf	??_i2c_start,w
  4733  0D66  0474               	iorwf	??_i2c_start+1,w
  4734  0D67  1D03               	skipz
  4735  0D68  2D6D               	goto	l249
  4736                           
  4737                           ;PR22.c: 644: ACKDT = 1;
  4738  0D69  1683               	bsf	3,5	;RP0=1, select bank1
  4739  0D6A  1303               	bcf	3,6	;RP1=0, select bank1
  4740  0D6B  1691               	bsf	17,5	;volatile
  4741  0D6C  2D70               	goto	l250
  4742  0D6D                     l249:	
  4743                           
  4744                           ;PR22.c: 645: else
  4745                           ;PR22.c: 646: ACKDT = 0;
  4746  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  4747  0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  4748  0D6F  1291               	bcf	17,5	;volatile
  4749  0D70                     l250:	
  4750                           
  4751                           ;PR22.c: 647: ACKEN = 1;
  4752  0D70  1611               	bsf	17,4	;volatile
  4753  0D71                     l251:	
  4754                           ;PR22.c: 648: while(!SSPIF);
  4755                           
  4756  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  4757  0D72  1D8C               	btfss	12,3	;volatile
  4758  0D73  2D71               	goto	l251
  4759                           
  4760                           ;PR22.c: 649: SSPIF = 0;
  4761  0D74  118C               	bcf	12,3	;volatile
  4762  0D75  3001               	movlw	1
  4763  0D76  00F3               	movwf	??_i2c_start
  4764  0D77  0873               	movf	??_i2c_start,w
  4765  0D78  07F6               	addwf	i2c_start@i,f
  4766  0D79  2D4A               	goto	l1556
  4767  0D7A                     l254:	
  4768                           
  4769                           ;PR22.c: 650: }
  4770                           ;PR22.c: 651: PEN = 1;
  4771  0D7A  1683               	bsf	3,5	;RP0=1, select bank1
  4772  0D7B  1303               	bcf	3,6	;RP1=0, select bank1
  4773  0D7C  1511               	bsf	17,2	;volatile
  4774  0D7D                     l255:	
  4775                           ;PR22.c: 652: while(!SSPIF);
  4776                           
  4777  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  4778  0D7E  1D8C               	btfss	12,3	;volatile
  4779  0D7F  2D7D               	goto	l255
  4780                           
  4781                           ;PR22.c: 653: SSPIF = 0;
  4782  0D80  118C               	bcf	12,3	;volatile
  4783  0D81  0008               	return
  4784  0D82                     __end_of_i2c_start:	
  4785                           
  4786                           	psect	text17
  4787  0B27                     __ptext17:	
  4788 ;; *************** function ___lwmod *****************
  4789 ;; Defined at:
  4790 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  divisor         2    0[COMMON] unsigned int 
  4793 ;;  dividend        2    2[COMMON] unsigned int 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  counter         1    5[COMMON] unsigned char 
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  2    0[COMMON] unsigned int 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4805 ;;      Params:         4       0       0       0       0
  4806 ;;      Locals:         1       0       0       0       0
  4807 ;;      Temps:          1       0       0       0       0
  4808 ;;      Totals:         6       0       0       0       0
  4809 ;;Total ram usage:        6 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		_mode1
  4815 ;;		_mode2
  4816 ;;		_mode3
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           
  4821                           ;psect for function ___lwmod
  4822  0B27                     ___lwmod:	
  4823                           
  4824                           ;incstack = 0
  4825                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4826  0B27  0870               	movf	___lwmod@divisor,w
  4827  0B28  0471               	iorwf	___lwmod@divisor+1,w
  4828  0B29  1903               	btfsc	3,2
  4829  0B2A  2B54               	goto	l1746
  4830  0B2B  01F5               	clrf	___lwmod@counter
  4831  0B2C  0AF5               	incf	___lwmod@counter,f
  4832  0B2D                     l1736:	
  4833  0B2D  1BF1               	btfsc	___lwmod@divisor+1,7
  4834  0B2E  2B3B               	goto	l1738
  4835  0B2F  3001               	movlw	1
  4836  0B30                     u1875:	
  4837  0B30  1003               	clrc
  4838  0B31  0DF0               	rlf	___lwmod@divisor,f
  4839  0B32  0DF1               	rlf	___lwmod@divisor+1,f
  4840  0B33  3EFF               	addlw	-1
  4841  0B34  1D03               	skipz
  4842  0B35  2B30               	goto	u1875
  4843  0B36  3001               	movlw	1
  4844  0B37  00F4               	movwf	??___lwmod
  4845  0B38  0874               	movf	??___lwmod,w
  4846  0B39  07F5               	addwf	___lwmod@counter,f
  4847  0B3A  2B2D               	goto	l1736
  4848  0B3B                     l1738:	
  4849  0B3B  0871               	movf	___lwmod@divisor+1,w
  4850  0B3C  0273               	subwf	___lwmod@dividend+1,w
  4851  0B3D  1D03               	skipz
  4852  0B3E  2B41               	goto	u1895
  4853  0B3F  0870               	movf	___lwmod@divisor,w
  4854  0B40  0272               	subwf	___lwmod@dividend,w
  4855  0B41                     u1895:	
  4856  0B41  1C03               	skipc
  4857  0B42  2B49               	goto	l1742
  4858  0B43  0870               	movf	___lwmod@divisor,w
  4859  0B44  02F2               	subwf	___lwmod@dividend,f
  4860  0B45  0871               	movf	___lwmod@divisor+1,w
  4861  0B46  1C03               	skipc
  4862  0B47  03F3               	decf	___lwmod@dividend+1,f
  4863  0B48  02F3               	subwf	___lwmod@dividend+1,f
  4864  0B49                     l1742:	
  4865  0B49  3001               	movlw	1
  4866  0B4A                     u1905:	
  4867  0B4A  1003               	clrc
  4868  0B4B  0CF1               	rrf	___lwmod@divisor+1,f
  4869  0B4C  0CF0               	rrf	___lwmod@divisor,f
  4870  0B4D  3EFF               	addlw	-1
  4871  0B4E  1D03               	skipz
  4872  0B4F  2B4A               	goto	u1905
  4873  0B50  3001               	movlw	1
  4874  0B51  02F5               	subwf	___lwmod@counter,f
  4875  0B52  1D03               	btfss	3,2
  4876  0B53  2B3B               	goto	l1738
  4877  0B54                     l1746:	
  4878  0B54  0873               	movf	___lwmod@dividend+1,w
  4879  0B55  00F1               	movwf	?___lwmod+1
  4880  0B56  0872               	movf	___lwmod@dividend,w
  4881  0B57  00F0               	movwf	?___lwmod
  4882  0B58  0008               	return
  4883  0B59                     __end_of___lwmod:	
  4884                           
  4885                           	psect	text18
  4886  0B59                     __ptext18:	
  4887 ;; *************** function ___lwdiv *****************
  4888 ;; Defined at:
  4889 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  divisor         2    6[COMMON] unsigned int 
  4892 ;;  dividend        2    8[COMMON] unsigned int 
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;  quotient        2   11[COMMON] unsigned int 
  4895 ;;  counter         1   13[COMMON] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  2    6[COMMON] unsigned int 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4905 ;;      Params:         4       0       0       0       0
  4906 ;;      Locals:         3       0       0       0       0
  4907 ;;      Temps:          1       0       0       0       0
  4908 ;;      Totals:         8       0       0       0       0
  4909 ;;Total ram usage:        8 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; This function calls:
  4912 ;;		Nothing
  4913 ;; This function is called by:
  4914 ;;		_mode1
  4915 ;;		_mode2
  4916 ;;		_mode3
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           
  4921                           ;psect for function ___lwdiv
  4922  0B59                     ___lwdiv:	
  4923                           
  4924                           ;incstack = 0
  4925                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4926  0B59  01FB               	clrf	___lwdiv@quotient
  4927  0B5A  01FC               	clrf	___lwdiv@quotient+1
  4928  0B5B  0876               	movf	___lwdiv@divisor,w
  4929  0B5C  0477               	iorwf	___lwdiv@divisor+1,w
  4930  0B5D  1903               	btfsc	3,2
  4931  0B5E  2B90               	goto	l1724
  4932  0B5F  01FD               	clrf	___lwdiv@counter
  4933  0B60  0AFD               	incf	___lwdiv@counter,f
  4934  0B61                     l1712:	
  4935  0B61  1BF7               	btfsc	___lwdiv@divisor+1,7
  4936  0B62  2B6F               	goto	l1714
  4937  0B63  3001               	movlw	1
  4938  0B64                     u1805:	
  4939  0B64  1003               	clrc
  4940  0B65  0DF6               	rlf	___lwdiv@divisor,f
  4941  0B66  0DF7               	rlf	___lwdiv@divisor+1,f
  4942  0B67  3EFF               	addlw	-1
  4943  0B68  1D03               	skipz
  4944  0B69  2B64               	goto	u1805
  4945  0B6A  3001               	movlw	1
  4946  0B6B  00FA               	movwf	??___lwdiv
  4947  0B6C  087A               	movf	??___lwdiv,w
  4948  0B6D  07FD               	addwf	___lwdiv@counter,f
  4949  0B6E  2B61               	goto	l1712
  4950  0B6F                     l1714:	
  4951  0B6F  3001               	movlw	1
  4952  0B70                     u1825:	
  4953  0B70  1003               	clrc
  4954  0B71  0DFB               	rlf	___lwdiv@quotient,f
  4955  0B72  0DFC               	rlf	___lwdiv@quotient+1,f
  4956  0B73  3EFF               	addlw	-1
  4957  0B74  1D03               	skipz
  4958  0B75  2B70               	goto	u1825
  4959  0B76  0877               	movf	___lwdiv@divisor+1,w
  4960  0B77  0279               	subwf	___lwdiv@dividend+1,w
  4961  0B78  1D03               	skipz
  4962  0B79  2B7C               	goto	u1835
  4963  0B7A  0876               	movf	___lwdiv@divisor,w
  4964  0B7B  0278               	subwf	___lwdiv@dividend,w
  4965  0B7C                     u1835:	
  4966  0B7C  1C03               	skipc
  4967  0B7D  2B85               	goto	l1720
  4968  0B7E  0876               	movf	___lwdiv@divisor,w
  4969  0B7F  02F8               	subwf	___lwdiv@dividend,f
  4970  0B80  0877               	movf	___lwdiv@divisor+1,w
  4971  0B81  1C03               	skipc
  4972  0B82  03F9               	decf	___lwdiv@dividend+1,f
  4973  0B83  02F9               	subwf	___lwdiv@dividend+1,f
  4974  0B84  147B               	bsf	___lwdiv@quotient,0
  4975  0B85                     l1720:	
  4976  0B85  3001               	movlw	1
  4977  0B86                     u1845:	
  4978  0B86  1003               	clrc
  4979  0B87  0CF7               	rrf	___lwdiv@divisor+1,f
  4980  0B88  0CF6               	rrf	___lwdiv@divisor,f
  4981  0B89  3EFF               	addlw	-1
  4982  0B8A  1D03               	skipz
  4983  0B8B  2B86               	goto	u1845
  4984  0B8C  3001               	movlw	1
  4985  0B8D  02FD               	subwf	___lwdiv@counter,f
  4986  0B8E  1D03               	btfss	3,2
  4987  0B8F  2B6F               	goto	l1714
  4988  0B90                     l1724:	
  4989  0B90  087C               	movf	___lwdiv@quotient+1,w
  4990  0B91  00F7               	movwf	?___lwdiv+1
  4991  0B92  087B               	movf	___lwdiv@quotient,w
  4992  0B93  00F6               	movwf	?___lwdiv
  4993  0B94  0008               	return
  4994  0B95                     __end_of___lwdiv:	
  4995  007E                     btemp	set	126	;btemp
  4996  007E                     wtemp	set	126
  4997  007E                     wtemp0	set	126
  4998  0080                     wtemp1	set	128
  4999  0082                     wtemp2	set	130
  5000  0084                     wtemp3	set	132
  5001  0086                     wtemp4	set	134
  5002  0088                     wtemp5	set	136
  5003  007F                     wtemp6	set	127
  5004  007E                     ttemp	set	126
  5005  007E                     ttemp0	set	126
  5006  0081                     ttemp1	set	129
  5007  0084                     ttemp2	set	132
  5008  0087                     ttemp3	set	135
  5009  007F                     ttemp4	set	127
  5010  007E                     ltemp	set	126
  5011  007E                     ltemp0	set	126
  5012  0082                     ltemp1	set	130
  5013  0086                     ltemp2	set	134
  5014  0080                     ltemp3	set	128


Data Sizes:
    Strings     222
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    send_string@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_27(CODE[4]), STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[5]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[17]), 
		 -> STR_19(CODE[17]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[15]), STR_14(CODE[5]), STR_13(CODE[9]), STR_12(CODE[16]), 
		 -> STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[3]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[3]), 
		 -> STR_3(CODE[8]), STR_2(CODE[5]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _mode3->___lldiv
    _mode3->___lwdiv
    _mode3->_spi_baro
    _spi_baro->_spi_start
    _spi_start->_delay
    _mode2->___lwdiv
    ___awdiv->___awmod
    _mode1->___lwdiv
    _send_string->_send_char
    _send_char->_delay
    _lcd_goto->_send_config
    _lcd_clr->_send_config
    _send_config->_delay
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    _main->_mode3
    _mode3->_spi_baro
    _mode2->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   63960
                                             22 BANK0      1     1      0
                              _delay
                            _lcd_clr
                           _lcd_goto
                              _mode1
                              _mode2
                              _mode3
                        _send_config
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _mode3                                               18    18      0   18227
                                              4 BANK0     18    18      0
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                              _delay
                            _lcd_clr
                           _lcd_goto
                          _send_char
                        _send_string
                           _spi_baro
 ---------------------------------------------------------------------------------
 (2) _spi_baro                                             6     3      3    2625
                                             12 COMMON     2     2      0
                                              0 BANK0      4     1      3
                          _spi_start
 ---------------------------------------------------------------------------------
 (3) _spi_start                                            4     4      0    1857
                                              8 COMMON     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     265
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _mode2                                               17    17      0   17674
                                              4 BANK0     17    17      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                              _delay
                          _i2c_start
                            _lcd_clr
                           _lcd_goto
                          _send_char
                        _send_string
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _mode1                                                5     5      0   16640
                                              0 BANK0      5     5      0
                            ___lwdiv
                            ___lwmod
                              _delay
                          _i2c_start
                            _lcd_clr
                           _lcd_goto
                          _send_char
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          2     2      0    2559
                                              9 COMMON     2     2      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0    1763
                                              8 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             2     2      0    1852
                                              9 COMMON     2     2      0
                        _send_config
 ---------------------------------------------------------------------------------
 (2) _lcd_clr                                              0     0      0    3504
                              _delay
                        _send_config
 ---------------------------------------------------------------------------------
 (1) _send_config                                          1     1      0    1763
                                              8 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                8     4      4    1741
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            7     4      3    1752
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1749
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1540
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _lcd_clr
     _delay
     _send_config
       _delay
   _lcd_goto
     _send_config
       _delay
   _mode1
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay
     _i2c_start
     _lcd_clr
       _delay
       _send_config
         _delay
     _lcd_goto
       _send_config
         _delay
     _send_char
       _delay
     _send_string
       _send_char
         _delay
   _mode2
     ___awdiv
       ___awmod (ARG)
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay
     _i2c_start
     _lcd_clr
       _delay
       _send_config
         _delay
     _lcd_goto
       _send_config
         _delay
     _send_char
       _delay
     _send_string
       _send_char
         _delay
   _mode3
     ___lldiv
     ___llmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay
     _lcd_clr
       _delay
       _send_config
         _delay
     _lcd_goto
       _send_config
         _delay
     _send_char
       _delay
     _send_string
       _send_char
         _delay
     _spi_baro
       _spi_start
         _delay
   _send_config
     _delay
   _send_string
     _send_char
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      36       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      28       5       50.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      36      12        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jul 21 10:58:05 2015

            spi_baro@data 0020                         pc 0002               __CFG_CP$OFF 0000  
            ___awdiv@sign 0021                        fsr 0004                       l100 01EC  
                     l111 023A                       l132 0573                       l124 051F  
                     l125 0536                       l150 06EF                       l153 0700  
                     l145 06AA                       l137 0584                       l250 0D70  
                     l226 0D1C                       l251 0D71                       l235 0D35  
                     l229 0D23                       l181 0506                       l254 0D7A  
                     l246 0D51                       l238 0D3D                       l158 07F4  
                     l255 0D7D                       l239 0D40                       l249 0D6D  
                     l193 0FE6                       l269 0B9C                       _RA0 0028  
                     _RA1 0029                       _RA2 002A                       _RA3 002B  
                     _RC0 0038                       _RA5 002D                       _RC5 003D  
                     _RC6 003E                       _RC7 003F                       _PR2 0092  
                     _PEN 048A              __CFG_CPD$OFF 0000                       _SEN 0488  
                     fsr0 0004                       indf 0000              ___awmod@sign 0076  
            __CFG_FOSC$HS 0000           send_config@data 0078              __CFG_LVP$OFF 0000  
                    l2002 0DB2                      l2120 01C2                      l2140 01FD  
                    l2054 0F54                      l2142 0204                      l2150 021F  
                    l1600 0108                      l2056 0DAE                      l2160 0252  
                    l2144 020B                      l2152 01DF                      l1602 0116  
                    l1506 0BD9                      l2058 0FD9                      l2162 0258  
                    l2154 022D                      l2138 01F6                      l1516 0A94  
                    l1612 0137                      l2148 0212                      l1542 0D2B  
                    l1526 0AA0                      l2158 024C                      l2166 025E  
                    l1720 0B85                      l1712 0B61                      l1544 0D45  
                    l1616 013F                      l1608 012C                      l1640 0C3A  
                    l1632 0C34                      l1714 0B6F                      l1642 0C48  
                    l1650 0C61                      l1490 0BB5                      l1724 0B90  
                    l1556 0D4A                      l1628 0C2D                      l1572 0C16  
                    l1742 0B49                      l1822 069D                      l1590 0100  
                    l1654 0C69                      l1646 0C56                      l1910 02A8  
                    l1902 027F                      l1574 0C1F                      l1566 0C03  
                    l1736 0B2D                      l1584 00F5                      l1912 02B5  
                    l1664 0CCA                      l1738 0B3B                      l1746 0B54  
                    l1826 06C1                      l1770 054E                      l1674 0D02  
                    l1666 0CDA                      l1690 0C86                      l1498 0BC3  
                    l1852 0741                      l1772 0555                      l1940 0324  
                    l1932 02FE                      l1924 02E1                      l1908 0290  
                    l1774 055C                      l1766 0540                      l1678 0D0F  
                    l1694 0CA4                      l1784 05A1                      l1768 0547  
                    l1688 0C76                      l1890 07E6                      l1778 0563  
                    l1698 0CB1                      l1990 0320                      l1888 07D6  
                    l1992 04F9                      l1976 0422                      STR_1 007A  
                    STR_2 00D1                      STR_3 00B2                      STR_4 00E4  
                    STR_5 00AA                      STR_6 009A                      STR_7 00A2  
                    STR_8 00E4                      STR_9 005B                      u1220 0BB2  
                    u2115 0376                      u1420 0BED                      u1430 0BEE  
                    u2135 039F                      u1415 0BE2                      u1505 010B  
                    u2145 03BA                      u1195 0AD3                      u2235 0DE0  
                    u1196 0AD4                      u1197 0AD9                      u1525 0117  
                    u1605 0C3D                      u2165 03DC                      u1198 0ADA  
                    u1199 0ADF                      u1535 0123                      u2095 0354  
                    u2255 0E3D                      u1545 012D                      u1625 0C4E  
                    u2185 0405                      u1705 0CF1                      u1635 0C57  
                    u1715 0D03                      u1805 0B64                      u1825 0B70  
                    u1905 0B4A                      u1745 0C7A                      u1835 0B7C  
                    u1675 0CCE                      u1845 0B86                      u1765 0C94  
                    u1695 0CDC                      u1775 0CA5                      u1875 0B30  
                    u1895 0B41                      _RCEN 048B              __CFG_WRT$OFF 0000  
                    _main 0144                      _mode 0045                      btemp 007E  
            lcd_goto@data 007A                i2c_start@i 0076                      ltemp 007E  
                    start 0000                      ttemp 007E                      wtemp 007E  
spi_baro@register_address 0023                     ?_main 0070                     _ACKEN 048C  
                   _ACKDT 048D           __end_of___awdiv 0144                     STR_10 003B  
                   STR_11 004B                     STR_12 002B                     STR_20 001A  
                   STR_21 00C6                     STR_13 0091                     STR_14 00DB  
                   STR_22 00C0                     STR_23 0087                     STR_15 006B  
                   STR_16 00DB                     STR_24 00CC                     STR_17 00D6  
                   STR_25 00BA             __CFG_WDTE$OFF 0000                     STR_26 00C0  
                   STR_18 00D6                     STR_27 00E0                     STR_19 0009  
         __end_of___awmod 0C6E           __end_of___lldiv 0D18           ___awdiv@divisor 0077  
         __end_of___llmod 0CBA                     _T2CON 0012            __CFG_DEBUG$OFF 0000  
         __end_of___lwdiv 0B95           __end_of___lwmod 0B59           ___awdiv@counter 0020  
                   _PORTB 0006                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _SSPIF 0063             __CFG_PWRTE$ON 0000  
         __end_of_lcd_clr 0A89                     _delay 0ABE                     _mode1 0516  
                   _mode2 026C                     _mode3 0D82            __CFG_BOREN$OFF 0000  
                   pclath 000A                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
             mode1@result 0022           __initialization 07F5              __end_of_main 026C  
                  ??_main 0036         spi_baro@operation 0021                    ?_delay 0070  
            ?_send_config 0070                    _ADCON1 009F                    ?_mode1 0070  
                  ?_mode2 0070                    ?_mode3 0070          ___llmod@dividend 0074  
                  _CCPR1L 0015                    _CCPR2L 001B          ___awdiv@dividend 0079  
            ?_send_string 0070                    _SSPADD 0093                    _SSPCON 0014  
                  _SSPBUF 0013        __size_of_i2c_start 006A          __end_of_lcd_goto 0A9F  
         _i2c_master_data 0037                 ??___awdiv 007B                 ??___awmod 0074  
         _i2c_master_rcvb 003E                 ??___lldiv 0078                 ??___llmod 0078  
               ??___lwdiv 007A                 ??___lwmod 0074             spi_start@data 0079  
        ___awdiv@quotient 0022           ___awmod@divisor 0070             spi_start@rcvb 007A  
         ___awmod@counter 0075                 ??_lcd_clr 0079                    mode2@i 0032  
        __end_of_spi_baro 0C23   __end_of__initialization 07FC              mode1@submode 0024  
        mode2@temperature 0031            __pcstackCOMMON 0070      mode2@temperature_raw 002D  
           __end_of_delay 0AE1             __end_of_mode1 07F5             __end_of_mode2 0516  
           __end_of_mode3 1000         __end_of_i2c_start 0D82                   ??_delay 0074  
                 ??_mode1 0020                   ??_mode2 0024                   ??_mode3 0024  
              __pbssBANK0 0037                __pmaintext 0144          mode3@temperature 0034  
      __size_of_send_char 0023                   _CCP1CON 0017                   _CCP2CON 001D  
    mode3@temperature_raw 0028        __size_of_spi_start 0046                   _SSPCON2 0091  
               ?_lcd_goto 0070                   _SSPSTAT 0094                __stringtab 0003  
    __size_of_send_config 0023      __size_of_send_string 001F                 ?_spi_baro 0020  
                 ___awdiv 00E9                   ___awmod 0C23                   ___lldiv 0CBA  
                 ___llmod 0C6E                   ___lwdiv 0B59                   ___lwmod 0B27  
                 __ptext1 0D82                   __ptext2 0BDB                   __ptext3 0B95  
                 __ptext4 0C6E                   __ptext5 0CBA                   __ptext6 026C  
                 __ptext7 0C23                   __ptext8 00E9                   __ptext9 0516  
                 _lcd_clr 0A77          ___awmod@dividend 0072                   clrloop0 0A70  
              ??_lcd_goto 0079      end_of_initialization 07FC         __end_of_send_char 0B27  
         ___lldiv@divisor 0070             i2c_start@size 0070           ___lldiv@counter 007D  
       __end_of_spi_start 0BDB                ??_spi_baro 007C             send_char@data 0078  
           mode3@pressure 002E       start_initialization 07F5                 _i2c_start 0D18  
         ___llmod@divisor 0070           ___llmod@counter 0079                 ___latbits 0002  
           __pcstackBANK0 0020                ?_i2c_start 0070         __size_of_lcd_goto 0016  
        ___lwdiv@dividend 0078                  ?___awdiv 0077          i2c_start@address 0075  
                ?___awmod 0070                  ?___lldiv 0070                  ?___llmod 0070  
                ?___lwdiv 0076                  ?___lwmod 0070         __size_of_spi_baro 0048  
               __pstrings 0003                  ?_lcd_clr 0070             ??_send_config 0078  
        ___lwdiv@quotient 007B            __size_of_delay 0023            __size_of_mode1 02DF  
          __size_of_mode2 02AA            __size_of_mode3 027E                 delay@data 0070  
           ??_send_string 0079                 clear_ram0 0A6F                 _send_char 0B04  
       mode3@pressure_raw 002A      mode2@capacitance_raw 0029                 _spi_start 0B95  
             __stringbase 0008               ??_i2c_start 0073                spi_start@i 007B  
      i2c_start@operation 0071                 mode3@temp 0032       __end_of_send_config 0B04  
              ?_send_char 0070              send_string@s 007A       __end_of_send_string 0ABE  
        __size_of___awdiv 005B          __size_of___awmod 004B          __size_of___lldiv 005E  
        __size_of___llmod 004C          __size_of___lwdiv 003C          __size_of___lwmod 0032  
              ?_spi_start 0070        __end_of__stringtab 0009          __size_of_lcd_clr 0012  
         ___lwdiv@divisor 0076           ___lwdiv@counter 007D                  __ptext10 0A9F  
                __ptext11 0B04                  __ptext12 0A89                  __ptext13 0A77  
                __ptext14 0AE1                  __ptext15 0ABE                  __ptext16 0D18  
                __ptext17 0B27                  __ptext18 0B59                  _lcd_goto 0A89  
           __size_of_main 0128                  _spi_baro 0BDB             _spi_baro_rcvb 0046  
             _send_config 0AE1               _send_string 0A9F          ___lwmod@dividend 0072  
        ___lldiv@dividend 0074          mode2@capacitance 0033               ??_send_char 0078  
               stringcode 0003               ??_spi_start 0078          ___lldiv@quotient 0079  
         ___lwmod@divisor 0070           ___lwmod@counter 0075                  stringdir 0003  
                stringtab 0003  
